# --- Stage 1: Build dependencies ---
FROM node:20-slim AS build

# Set working directory
WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install --production

# Copy the rest of the application code
COPY . .

# --- Stage 2: Final image with Puppeteer dependencies ---
FROM node:20-slim

# Install Puppeteer dependencies (fonts, Chromium dependencies, etc.)
RUN apt-get update && \
    apt-get install -y \
      wget \
      ca-certificates \
      fonts-liberation \
      libappindicator3-1 \
      libasound2 \
      libatk-bridge2.0-0 \
      libatk1.0-0 \
      libcups2 \
      libdbus-1-3 \
      libdrm2 \
      libgbm1 \
      libgtk-3-0 \
      libnspr4 \
      libnss3 \
      libx11-xcb1 \
      libxcomposite1 \
      libxdamage1 \
      libxrandr2 \
      xdg-utils \
      --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy only the built node_modules and app code from the build stage
COPY --from=build /app ./

# Expose the port your app runs on (if needed)
EXPOSE 8080

# Set environment variable to skip Puppeteer Chromium download if you use system Chromium
# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# Start the application
CMD ["node", "index.js"]

# --- Description ---
# Stage 1 installs dependencies and prepares the app.
# Stage 2 creates a minimal image with only runtime dependencies and Puppeteer system libraries.
# This results in a smaller, more secure image.
