# Koogle Alert
[[Alert] : Test : P4 : Koogle : WFM-PPAS service not found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.stack$ --> $description$
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: DMC Alert : $name$ : on $result.search$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
description = SOP: https://engconf.int.kronos.com/display/CLOUD/SOP%3A+Koogle+%3A+PPAS+Monitoring+Errors
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = 1a7c9dfe.Kronos.onmicrosoft.com@amer.teams.ms
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */54 * * * *
relation = less than
quantity = 2
alert.suppress.fields = search
alert.suppress.period = 120m
search = | koogledimen service=TenantPPASAccess action=ListMyConnections scope=[| search index="_internal" host="*wfm*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1 | rex field=host "(?<scope>^.+wfm\d+)-dbs" | return $scope] | table groupName, friendlyName | append [| search index="_internal" host="*wfm*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1 | rex field=host "(?<stack>^\w+)-" | return $stack] | stats values(*) as * | mvexpand groupName

# Koogle Alert
[[Alert] : Test : P4 : Koogle : WFM-PPAS DB inaccessible]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.stack$ --> $description$
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: DMC Alert : $name$ : on $result.search$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
description = SOP: https://engconf.int.kronos.com/display/CLOUD/SOP%3A+Koogle+%3A+PPAS+Monitoring+Errors
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = 1a7c9dfe.Kronos.onmicrosoft.com@amer.teams.ms
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */54 * * * *
relation = less than
quantity = 2
alert.suppress.fields = search
alert.suppress.period = 120m
search = | koogledimen service=TenantPPASAccess action=ListMyApps scope=[| search index="_internal" host="*wfm*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1 | rex field=host "(?<db_group>^.+(?<wfm>wfm\d+)-dbs)" | eval db_name = "WFM/ppas_".wfm | return $db_group] | table friendlyName, value | sort by friendlyName | where friendlyName != "Unknown_App/null" | append [| search index="_internal" host="*wfm*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1 | rex field=host "(?<stack>^\w+)-" | return $stack] | eval value = split(value,"/") | stats values(*) as * | mvexpand value

# Koogle Alert
[[Alert] : Test : P4 : Koogle : WFM-PPAS DB Schemas inaccessible]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.stack$ --> $description$
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: DMC Alert : $name$ : on $result.search$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
description = SOP: https://engconf.int.kronos.com/display/CLOUD/SOP%3A+Koogle+%3A+PPAS+Monitoring+Errors
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = 1a7c9dfe.Kronos.onmicrosoft.com@amer.teams.ms
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */54 * * * *
relation = less than
quantity = 2
alert.suppress.fields = search
alert.suppress.period = 120m
search = | koogledimen service=TenantPPASAccess action=ListMySchemas scope=[| search index="_internal" host="*wfm*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1 | rex field=host "(?<db_group>^.+(?<wfm>wfm\d+)-dbs)" | eval db_name = "WFM/ppas_".wfm | return $db_group] app=[| search index="_internal" host="*wfm*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1 | rex field=host "(?<db_group>^.+(?<wfm>wfm\d+)-dbs)" | eval db_name = "WFM/ppas_".wfm | return $db_name] | append [| search index="_internal" host="*wfm*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1 | rex field=host "(?<stack>^\w+)-" | return $stack] | stats values(*) as * | mvexpand value

# Koogle Alert
[[Alert] : Test : P4 : Koogle : Koogle-Monitoring Errors]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.stack$ --> $description$
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: DMC Alert : $name$ : on $result.stack$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
description = SOP: https://engconf.int.kronos.com/display/CLOUD/SOP%3A+Koogle+%3A+PPAS+Monitoring+Errors
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com,1a7c9dfe.Kronos.onmicrosoft.com@amer.teams.ms
dispatch.earliest_time = -30m@m
dispatch.latest_time = now
cron_schedule = */54 * * * *
relation = greater than
quantity = 1
alert.suppress.fields = stack
alert.suppress.period = 120m
search = index="koogle-monitoring" source=ppas_db_monitoring is_collection_error=true serviceName="WFM-PPAS" | search NOT error_msg IN ( "*relation \"pg_stat_statements\" does not exist*", "*could not stat file*No such file or directory*", "*The connection attempt failed*", "*Connection to*refused*", "*I/O error occurred while sending to the backend*", "*terminating connection due to administrator command*", "*password authentication failed for user*", "*column * does not exist*") | rex field=scope "(?<stack>^\w+)(-|)" | stats count by stack serviceName is_collection_error error_msg host | fields - count | append [| search index="_internal" source IN (*splunkd.log) host IN (*idx*) host IN (*cus* *cfn*) earliest=-15m@m latest=-m@m | rex field=host "(?<stack>\w+).+" | dedup stack | return $stack] | stats values(*) as * | mvexpand host

# Koogle Alert
[[Alert] : Test : Check : Koogle : Tenant-Finder/TMS failure]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ --> $description$
action.email.sendresults = 1
action.email.subject.alert = $name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
description = SOP: https://engconf.int.kronos.com/display/CLOUD/SOP%3A+Koogle+%3A+Tenant+Finder+failure
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = 1a7c9dfe.Kronos.onmicrosoft.com@amer.teams.ms
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
cron_schedule = */54 * * * *
relation = less than
quantity = 2
alert.suppress.fields = search
alert.suppress.period = 120m
search = | koogletenant service=TenantFinder action=GetTenantsList scope=[| search index="_internal" source IN (*splunkd.log) host IN (*idx*) host IN (*cus* *cfn*) earliest=-15m@m latest=-m@m | rex field=host "(?<stack>\w+).+" | dedup stack | return $stack] tenant_ID="" tenant_name="" vanity_url="" wfm_cluster="%" tenant_status="active" isIncludeIncidents="False" | rename wfm_cluster as data | table data | append [| search index="_internal" source IN (*splunkd.log) host IN (*idx*) host IN (*cus* *cfn*) earliest=-15m@m latest=-m@m | rex field=host "(?<stack>\w+).+" | dedup stack | return $stack] | append [ | koogledimen service=TenantPPASAccess action=ListMySchemas scope=[| search index="_internal" host="*tms*dbs*" earliest=-15m@m latest=@m | stats count by host | sort - count | head 1  | rex field=host "(?<db_group>^.+-dbs)" | return $db_group] app=TMS/ppas_tms | rename value as data | table data ] | stats values(*) as * | mvexpand data | table data search

# Koogle Alert
[[Alert] : Test : P4 : Koogle : Tenant-Finder/TMS failure]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ --> $description$
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: DMC Alert : $name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
description = SOP: https://engconf.int.kronos.com/display/CLOUD/SOP%3A+Koogle+%3A+Tenant+Finder+failure
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com,1a7c9dfe.Kronos.onmicrosoft.com@amer.teams.ms
dispatch.earliest_time = -4h@h
dispatch.latest_time = now
cron_schedule = */57 * * * *
relation = greater than
quantity = 1
alert.suppress.fields = search
alert.suppress.period = 120m
search = index="_internal" source="*scheduler*" thread_id="AlertNotifierWorker*" "*Check : Koogle : Tenant-Finder/TMS failure*" | stats count by fired | where fired=1 AND count > 1 | append [| search index="_internal" source IN (*splunkd.log) host IN (*idx*) host IN (*cus* *cfn*) earliest=-15m@m latest=-m@m | rex field=host "(?<stack>\w+).+" | dedup stack | return $stack]

# Koogle Alert
[[Alert] : Test : P4 : Koogle : Scope-Selections Inputlookup failure]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ --> $description$
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: DMC Alert : $name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
description = SOP: https://engconf.int.kronos.com/display/CLOUD/SOP%3A+Splunk+-+KVStore+failure
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com,1a7c9dfe.Kronos.onmicrosoft.com@amer.teams.ms
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
cron_schedule = */54 * * * *
relation = equal to
quantity = 1
alert.suppress.fields = search
alert.suppress.period = 120m
search = | inputlookup scope_selections_lookup | append [| makeresults] | append [| search index="_internal" source IN (*splunkd.log) host IN (*idx*) host IN (*cus* *cfn*) earliest=-15m@m latest=-m@m | rex field=host "(?<stack>\w+).+" | dedup stack | return $stack] | stats values(*) as * | mvexpand env_selection_name


F#PR-483

[[Alert] : DimCritical : P2 : DFS : MS_Defender_Monitoring_DFS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = EPIC-SRE-RDY@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 9 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index="wineventlog" sourcetype="WinEventLog:Security" | rex field=_raw "(?P<EventID>\d+)<\/EventID>" | rex field=_raw "Computer>(?P<HostName>[^\<]+)<\/Computer>" | search EventID="1000" OR EventID="1001" OR EventID="1002" OR EventID="1005" OR EventID="1006" OR EventID="1116" OR EventID="1117" OR EventID="1118" AND Message="Microsoft Defender Event log" | eval alert_suppress_fields = EventID . " -Error Occurred on- " . HostName  | table _time EventID HostName _raw Account_Name Process_Name Message | outputcsv Defender_error_results.csv

[[Alert] : DimCritical : P3 : DIT Redis Connection Failed]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT Redis Connection Failed
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = 0 * * * *
search = index="*-wit-app" sourcetype=wit:app | spath level | search level=ERROR "redis" "*Operation Failed on wit_*" |stats count as NumberOfTimesFailed by host, tenant |where NumberOfTimesFailed>=5

[[Alert] : DimCritical : P3 : DIT | RabbitMQ Connection Failed]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = SOP link -- https://engconf.int.kronos.com/pages/viewpage.action?pageId=822537478
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
search = index="*-wit-app" sourcetype=wit:app "*ACCESS_REFUSED - Login was refused using authentication mechanism PLAIN*" |stats count as NumberOfTimesFailed by host, tenant,msg |where NumberOfTimesFailed>=3

[[Alert] : DimCritical : P3 : DIT | DataBase Connection Failed]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | DataBase Connection Failed
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
search = index="*-wit-app" sourcetype=wit:app "*FATAL: password authentication failed for user" | stats count as NumberOfTimesFailed by host, tenant,msg |where NumberOfTimesFailed>=3

[[Alert] : DimCritical : P3 : DIT | DataBase Server Connection Attempt Failed]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | DataBase Server Connection Attempt Failed
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
search = index="*wit-dbs*" "*DETAIL:  Password does not match for user *" db=ppas_wit| stats count as NumberOfTimesFailed by host, user  | where NumberOfTimesFailed>=3

[[Alert] : DimCritical : P3 : DIT | Jobs are stuck in-progress state]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.tenant$
action.email.subject.alert = $name$ : on $result.tenant$
description = DIT | Jobs are stuck in-progress state
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*-wit-app" sourcetype=wit:app source=* | spath msg | search msg="*JOB_STUCK_INFO*"

[[Alert] : DimCritical : P3 : DIT | Import and Export Jobs Transaction Count]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | Import and Export Jobs Transaction Count
dispatch.earliest_time = -8h
dispatch.latest_time = @m
cron_schedule = 30 1,10,16 * * *
search = index="*nodejs*" sourcetype=nodejs name="telemetry-logger" app="wit" (action="*export-data*" OR action="*save-import*") | eval export_data=if(match(action, ".*export-data.*"), 1, 0) | eval import_data=if(match(action, ".*save-import.*"), 1, 0) | stats sum(export_data) as "Export Data", sum(import_data) as "Import Data" | eval Total = 'Export Data' + 'Import Data' | table "Import Data" "Export Data" Total

[[Alert] : DimCritical : P3 : DIT | Production Monitoring - HTTP Status Codes Percentage]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | Production Monitoring - HTTP Status Codes Percentage
dispatch.earliest_time = -6h
dispatch.latest_time = @m
cron_schedule = 30 1,10,16 * * *
search = index="*wit*" sourcetype=wit:app earliest=-6h | spath input=_raw path=INFO.statusCode output="Http Status Code" | stats count by "Http Status Code" | eventstats sum(count) as Total | eval http_code_percent=round((count/Total)*100,3) | table "Http Status Code" count Total http_code_percent | rename count as "Count of Http Status Codes", Total as "Total of Http Status Codes", http_code_percent as "Percentage"


# PS-305493
[[Alert] : DimCritical : P3 : DIT : Production Monitoring - Failed Jobs Alert]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | Production Monitoring - Failed Jobs Alert
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = 30 1,10,16 * * *
search = index="*-wit-app" sourcetype=wit:app NOT "DEFAULT" | search level=ERROR | rex field=_raw "REQUEST_ID:(?<REQUEST_ID>[^\s,]+)" |  rex field=_raw "TEMPLATE_ID:(?<TEMPLATE_ID>\d+)"  |  rex field=_raw "TEMPLATE_TYPE:(?<TEMPLATE_TYPE>[^\s,]+)" | rex field=_raw "TEMPLATE_NAME:(?<TEMPLATE_NAME>.*?),"  | rex field=_raw "URL:(?<URL>[^\s,]+)" | rex field=_raw "STATUS_CODE:(?<STATUS_CODE>[^\s,]+)" |  rex field=_raw "FAILURE_MESSAGE:(?<FAILURE_MESSAGE>[^\s,]+)" |search REQUEST_ID!="" | dedup REQUEST_ID | search FAILURE_MESSAGE!="" | rename  falcon_host as ENVIRONMENT_NAME | rename tenant as TENANT_NAME |rename ts as TIMES_STAMP| table TIMES_STAMP, REQUEST_ID, TEMPLATE_ID,TEMPLATE_NAME,TEMPLATE_TYPE,TENANT_NAME,ENVIRONMENT_NAME,URL,STATUS_CODE,FAILURE_MESSAGE

# PS-452439
[[Alert] : DimCritical : P3 : DIT Failed on DNS LookUp]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | Production Monitoring - Failed Jobs Alert
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
search = index="*-wit-app"  "*DNS lookup not successful for the url*"

#PS-452439
[[Alert] : DimCritical : P3 : DIT Failed on TROX ENVOY]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | Production Monitoring - Failed Jobs Alert
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
search = index="*-wit-app" "*Executing DNS lookup as the header envoy-trox-error has been received*"


# PS-452439
[[Alert] : DimCritical : P3 : DIT TROX ResourceAccessException Error Encountered]
action.email = 1
action.email.content_type = plain
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = neha.mishra@ukg.com,anirudh.pradhan@ukg.com,Shreya.Jha@ukg.com,harshit.goel@ukg.com,bhumi.chaudhary@ukg.com,deepak.kaushik@ukg.com,prashansa.singh@ukg.com,saurabh.pillai@ukg.com,hitesh.mehra@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$
action.email.subject.alert = $name$
description = DIT | Production Monitoring - Failed Jobs Alert
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
search = index="*-wit-app" "*Executing DNS lookup as ResourceAccessException has been encountered*"

#[OBS-1335]
[[Alert] : DimCritical : P1 : OpenAM : Pod going into Restart Loop] 
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com,IAMDimNoidaCore@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement. 
action.email.message.alert = $name$ : on $result.podname$
action.email.subject.alert = $name$ : on $result.podname$
description = SOP:- Reach to engineering team mailto:IAMDimNoidaCore@ukg.com.
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
alert.suppress.fields = podname
alert.suppress.period = 120m
search = index=*oam-tomcat* sourcetype="tomcat:runtime:log" earliest=-30m@m latest= now() | search "Server startup in" | eval podname = mvindex(split(source,"/"),-2) | eval podNumber = mvindex(split(podname,"-"),-1) | eval env = mvindex(split(podname,"-"),1) | where podNumber in (0,1,2) | stats count by env podname | where count >=3 | sort count

#https://ultidev.ultimatesoftware.com/browse/OBS-722

[[Alert] : DimCritical : P1 : OpenDJ : CTS pod restarts]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP Link - https://engconf.int.kronos.com/display/FT/SOP+%3A+Bad+Generation+Id+occurs+in+CTS+pods 
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*odj-app* host=* source=*cts* | search "The Directory server has started successfully" "org.opends.server.core.DirectoryServer" | table _time host _raw


#FS-60390
[[Alert] : DimCritical : P1 : Certificate Mismatch Alert on IDP AM or OpenAM ]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Contact Dimensions SSO and AuthN Engineering Team to get this certificate fixed.
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*idp-app" OR "*oam" sourcetype="openam:access:audit" "Invalid signature in Request" | stats count by host


############################
#Ihub Service availability
############################
#Added DCUS projects as per FS-122031

[[Alert] : DimCritical : P1 : Ihub : Availability Breach for AtomCloud Low Latency Integration]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.AvailabilityBreached$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.AvailabilityBreached$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = noc-ihub@ukg.pagerduty.com
action.email.cc = engfalconihubextnoida@ukg.com
description = SOP link -- https://engconf.int.kronos.com/display/KUB/SOP+for+Ihub+Service+availability+Alert
dispatch.earliest_time = -20m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
search = index="cus*-prd-wfd-hub-synthetichck" source="projects/gcp-cust01/subscriptions/*-prd-hubsynthetichck-sub" OR source="projects/dim-cus21a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus11a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus14a-5eff/subscriptions/dcus*-prd-hubsynthetichck-sub" sourcetype="google:gcp:*" | spath input=data.jsonPayload.message| search "data.jsonPayload.message"="*queryIhubMonitoringAtomCloudAvailability*" | rex field=_raw "atomCloudURL.*\\\"http\:\/\/(?<CloudURL>[^\/]+)"| eval Success = if(statusCode=200,1,0)| stats count as TotalSubmissions, sum(Success) as SuccessfulSubmissions by CloudURL| eval AvailabilityBreached = "AvailabilityBreach for Atom Cloud on".+" ".+CloudURL| table AvailabilityBreached TotalSubmissions SuccessfulSubmissions| search "SuccessfulSubmissions" < 1

[[Alert] : DimCritical : P1 : Ihub : Availability Breach for Batch Integration Run]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.AvailabilityBreached$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.AvailabilityBreached$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = noc-ihub@ukg.pagerduty.com
action.email.cc = engfalconihubextnoida@ukg.com
description = 
dispatch.earliest_time = -20m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
search = index="cus*-prd-wfd-hub-synthetichck" source="projects/gcp-cust01/subscriptions/*-prd-hubsynthetichck-sub" OR source="projects/dim-cus21a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus11a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus14a-5eff/subscriptions/dcus*-prd-hubsynthetichck-sub" sourcetype="google:gcp:*" | spath input=data.jsonPayload.message| search "data.jsonPayload.message"="*queryIhubMonitoringBatchIntegrationRun*" | rex field=_raw "atomCloudURL.*\\\"http\:\/\/(?<CloudURL>[^\/]+)"| eval Success = if(statusCode=200,1,0)| stats count as TotalSubmissions, sum(Success) as SuccessfulSubmissions by CloudURL| eval AvailabilityBreached = "AvailabilityBreach for Batch Integration run on".+" ".+CloudURL| table AvailabilityBreached TotalSubmissions SuccessfulSubmissions| search "SuccessfulSubmissions" < 1

[[Alert] : DimCritical : P2 : Ihub : Integrations failure on hypercare customers]
action.email = 1
action.email.content_type = html
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$
action.email.subject.alert = $name$
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ankit.khattak@ukg.com,piyush.upadhyay@ukg.com,kamleshk.singh@ukg.com,engfalconihubextnoida@ukg.com,john.moore@ukg.com,anjali.mahna@ukg.com,peter.janzen@ukg.com,sachin.gandhi@ukg.com,michael.suen@ukg.com,EngJohnMooreExtendedStaff@ukg.com
description = 
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
alert.suppress.fields = tenant
alert.suppress.period = 15m
quantity = 0
search = index="*wfd-wfm-app*" "*v1/platform/integrations/update_status/*" REQUEST | spath input=INFO.payload path=batchIntegration.status output=status | spath input=INFO.payload path=batchIntegration.callbackmessages output=callbackmessage | spath input=INFO.payload path=batchIntegration.executionid output=executionid | search status = "Failed" | search tenant = "marriott_prd_01" OR tenant = "homedepot_prd_01" OR tenant = "kroger_prd_01"| table ts, tenant, status, executionid, callbackmessage | eval callbackmessage = executionid."---".callbackmessage | stats values(*) as * by tenant

[[Alert] : DimCritical : P1 : OneIPAAS : AvailabilityBreach for IES/ITC]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.url$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.url$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : "Availability threshold breached as count is greater than 2 for response code!=200"
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ihubextintmonitoring@ukg.com
description = SOP link -- Reach Out to Ihub/IPaaS team
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
search = index=main sourcetype=web_ping "cip" OR "common"  response_code!=200 AND url!="*staging*" AND url!="*cfn*" AND url !="*dev*" | stats count by url | where count > 2

############################
#All DB's
############################

[[Alert] : Cloud DBA : P1 : WFM : CRON job Failed auto_disk_extension]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = The auto_disk_extension CRON job has failed with the error  <event from log>.  Please check this SOP for Alert: https://engconf.int.kronos.com/display/FT/SOP+for+Alert%3A+CRON+job+Failed+-+auto_disk_extension.
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index=*all-dbs sourcetype="dbs:auto:disk:extenstion" "Failed"  OR "Error" |eval message="auto_disk_extension failed" | table _time host _raw message | stats count as NumberOfTimesFailed by host message|where NumberOfTimesFailed>=3

[[Alert] : Cloud DBA : P3 : WFM : Disk extended twice or more in last 12 hours]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.AlertSuppressOn$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.AlertSuppressOn$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = The auto_disk_extension CRON job has extended same disk twice in last 12 hours.  Please check this SOP for Alert:https://engconf.int.kronos.com/display/FT/SOP+for+Alert%3A+CRON+job+Failed+-+auto_disk_extension
dispatch.earliest_time = -12h@h
dispatch.latest_time = now
cron_schedule = 0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = AlertSuppressOn
alert.suppress.period = 12h
search = index=*all-dbs sourcetype="dbs:auto:disk:extenstion" "done Successfully" earliest=-12h@h latest=now | rex field=_raw "Auto\sextend\sof\sdisk\:(?<disk_name>\w+)\s+is\sdone\sSuccessfully" | stats count by host disk_name | eval AlertSuppressOn='disk_name'.":".'host' | where count >=2

[[Alert] : Cloud DBA : P1 : WFM : Failed to run CRON job]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = Failed to run CRON job - auto_disk_extension.sh. The auto_disk_extension CRON job failed to run. Please check this SOP for Alert: https://engconf.int.kronos.com/display/FT/SOP+for+Alert%3A+CRON+job+Failed+-+Tenant_Cleanup_V3 & take action
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index="*-infra" tag="*dbs*" (tag=process_crond OR tag=process_splunkd)|stats count(eval(match(_raw,"splunkd"))) as count_splunkd count(eval(match(_raw,"/usr/sbin/crond"))) as count_cron by host|stats sum(count_splunkd) as count_splunkd sum(count_cron) as count_cron by host|search count_splunkd>=10 AND (count_cron=<7)

[[Alert] : Cloud DBA : P3 : WFM : CRON job Failed Tenant_Cleanup]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = CRON job Failed  -  Tenant_Cleanup_V3.sh The Tenant_Cleanup CRON job failed with the error  <event from log>.  Please check this SOP for Alert:https://engconf.int.kronos.com/display/FT/SOP+for+Alert%3A+CRON+job+Failed+-+Tenant_Cleanup_V3 & take action.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index=*all-dbs source=/data/log/tenant_cleanup/Tenant_Cleanup_V3* "Failed to remove log files"  OR "Failed to run Tenant_Cleanup_V3.py" OR  "failed to get list of databases" OR "Error" OR "Failed to get list of common schemas" |eval message="Tenant_Cleanup process failed" | table _time host _raw message | stats count as NumberOfTimesFailed by host message |where NumberOfTimesFailed>=1


############################
#Authentication OAM
############################
#2/19 - alert moved to Non Critical due to lack of information on the alert and actions associated with it
[[Alert] : DimNonCritical : P3 : Authentication OAM : SAML request is invalid]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = The SAML Request is invalid
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_field
alert.suppress.period = 6h
search = index=*-oam-app "The SAML Request is invalid"| eval tenant= substr(realm, 2) | stats count by tenant host | where count > 10 | eval suppress_field = host."-".tenant

[[Alert] : DimWarning : P2 : ODJ : Insufficient Access Rights - Update,Create or Delete operation]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP: https://engconf.int.kronos.com/x/voLALg
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*wfd-odj-app" source="/var/lib/kubelet/pods/*/volumes/kubernetes.io~empty-dir/*/*/*/ldap-access.audit.json" "insufficient access rights" | stats count by host

[[Alert] : DimCritical : P1 : OAM : Twilio phone number has been removed]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP:- https://engconf.int.kronos.com/x/omrGL
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*oam* source=*cust*debug* *message-capable Twilio* | stats count by host

[[Alert] : DimCritical : P1 : TRT : WPA error: unable to save state]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com,IAMDimNoidaCore@ukg.com
description = Please refer SOP for it - https://engconf.int.kronos.com/display/FT/SOP%3ARestart+of+TR+Nginx+frontend+Container
dispatch.earliest_time = -5m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*trt* sourcetype=tenantrouter:amagent "capture_pre_authn_cookie_value: unable to save state for request" | stats count by host

[[Alert] : DimCritical : P1 : TRT : Nginx error: Too many open files]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = kronosclouddev@service-now.com,kronoscloudtest@service-now.com,CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,IAMDimNoidaCore@ukg.com
description = Restart frontend nginx container on the affected hosts. Please refer SOP for it - https://engconf.int.kronos.com/display/FT/SOP%3ARestart+of+TR+Nginx+frontend+Container
dispatch.earliest_time = -5m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*trt* sourcetype=tenantrouter:error "(24: Too many open files)" | stats count by host

[[Alert] : Dim : P1 :: Idp OpenAM: Boomi OR Support user flow failing]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = kronosclouddev@service-now.com,kronoscloudtest@service-now.com,CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,IAMDimNoidaCore@ukg.com
description = Login as support user on a tenant on the stack and open boomi, it it fails contact Engineering team IAMDimNoidaCore@ukg.com. Engineering team can further check the entity Ids and metadata for debugging.
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*idp-app* sourcetype="openam:access:audit" source="/data/openam/logs/log/access.audit.json" "/authn/SSOPOST/metaAlias/kgs/proxyidp_gss" OR "/authn/SSOPOST/metaAlias/ihub/proxyidp_gss" | search NOT "The SAML Request is invalid." | search FAILED | stats count by host

[[Alert] : Dim : P1 :: DIDP / DIDP Proxy : AM unable to bind to DS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = kronosclouddev@service-now.com,kronoscloudtest@service-now.com,CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,IAMDimNoidaCore@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Contact Engineering team IAMDimNoidaCore@ukg.com
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*cidp-oam* host=*pid* OR host=*did* source=/apps/authn/authn/log/access.audit.json sourcetype="openam:access:audit" *"Initialization error. Unable to perform any operation."* | stats count by host

[[Alert] : Dim : P1 :: DIDP / DIDP Proxy : Insufficient access rights]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = kronosclouddev@service-now.com,kronoscloudtest@service-now.com,CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,IAMDimNoidaCore@ukg.com
description = Contact Engineering team IAMDimNoidaCore@ukg.com
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*cidp-odj* host=*did* OR host=*pid* source="/apps/opendj/logs/ldap-access.audit.json" sourcetype="cidp:odj:ldap:access" "*insufficient access rights*" | stats count by host

[[Alert] : Dim : P1 :: DIDP / DIDP Proxy : Healthcheck call isAlive.jsp failed]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = kronosclouddev@service-now.com,kronoscloudtest@service-now.com,CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,IAMDimNoidaCore@ukg.com
description = Execute the SOP to recover the service on the node. SOP link: https://engconf.int.kronos.com/display/FT/Restart+tomcat+for+DIDP+and+DIDP+proxy+nodes
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*cidp-oam-tomcat* sourcetype="tomcat:access:log" "isAlive.jsp" response_code!=200 | stats count by host

[[Alert] : Dim : P1 :: DIDP / DIDP Proxy : GC overhead limit exceeded]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = kronosclouddev@service-now.com,kronoscloudtest@service-now.com,CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,IAMDimNoidaCore@ukg.com
description = Execute the SOP to recover the service on the node. SOP link: https://engconf.int.kronos.com/display/FT/Restart+tomcat+for+DIDP+and+DIDP+proxy+nodes
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*cidp-oam-tomcat* sourcetype="tomcat:catalina" source="/apps/apache-tomcat-9.0.30/logs/catalina.out" | search "java.lang.OutOfMemoryError: GC overhead limit exceeded" | stats count by host

[[Alert] : DimNonCritical : P3 : Authentication OAM : Connection Exception to ODJ found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = OpenAM is not able to make connection with OpenDJ server.
dispatch.earliest_time = -5m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 15m
search = index="*-wfd-oam-app" "*org.forgerock.opendj.ldap.ConnectionException: Connect Error*" | rex field=_raw "(?<Message>Caused.+)"|table _time host Message

############################
#Authentication ODJ
############################

#REQ0070124 : Add SOP
[[Alert] : DimCritical : P1 : Authentication ODJ : Index Degraded]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description =  Client services will be impacted due to degraded performance of directory service. Refer SOP - https://engconf.int.kronos.com/display/FT/Degraded+Index+Error+SOP
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-*dj-app" sourcetype="opendj:errors" "*currently operating in a degraded state and must be rebuilt before it can be used*"| table _time host msg| rename _time as Time| convert ctime(Time)

[[Alert] : DimNonCritical : P3 : Authentication ODJ : Slow response]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = client services will be impacted due to degraded performance of directory service
dispatch.earliest_time = -1h@h
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 6h
search = index="*-wfd-odj-app" sourcetype="opendj:access" etime | rex field=_raw "(?<Message>SEARCH.+)"| table _time host etime Message| search etime >=3000 AND etime <= 9999

############################
#DBS
############################

[[Alert] : Cloud DBA : P2 : WFM : PPAS FrozenXID (> 80000000)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

Alert Action : https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=CDS&title=SOP+%3A+ALERT+%3A++PPAS+FrozenXID+%3A+%3E+800000000
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = This alert is generated when Frozenindex id from pg_database is greater than 800000000. https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=CDS&title=SOP+%3A+ALERT+%3A++PPAS+FrozenXID+%3A+%3E+800000000
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="koogle-monitoring" dbserver_type!=" Standby"| table  _time host oldest_current_xid | eval  is_value = if(isnum(oldest_current_xid), 1, 0) | where  is_value == 1 and oldest_current_xid > 800000000

[[Alert] : Cloud DBA : P1 : WFM : crash_shutdown event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB has crashed shutdown
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*dbs* sourcetype="enterprisedb:postgres:server"  source=/data/Postgresplus*enterprisedb* SQLcode=57P02 | table _time host _raw

[[Alert] : Cloud DBA : P1 : WFM : disk_full event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB disk is full
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server" source=/data/Postgresplus*enterprisedb* SQLcode=53100| table _time host _raw

[[Alert] : Cloud DBA : P2 : WFM : Failed PPAS Archiver Process]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = Utilize the following SOP for addressing a failed PPAS Archiver Process:https://engconf.int.kronos.com/display/CDS/Failed+PPAS+Archiver+Process
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = db_cluster
alert.suppress.period = 60m 
search = index=*-wfd-wfm-dbs sourcetype="enterprisedb:postgres:server" "The failed archive command was" | rex field=_raw "DETAIL\:\s+(?<reason>[^\:]+)"| rex field=_raw "\/wal_archive\/(?<db_cluster>\w+)"| eval error = reason+ " found on " + host | eval supress_field = reason+ " found on " + host+ " db cluster is " +db_cluster | transaction db_cluster error maxspan=30s | table _time host db_cluster error _raw | join type=left host [| search index=*dbs* sourcetype="enterprisedb:postgres:server" "The failed archive command was" | stats count as err_count by host | table host err_count ] | where err_count > 2 | fields - err_count | join type=left host [| inputlookup host_inventory_lookup | rename hostName as host | fields host isInDrZone labels.is_dr] | where isInDrZone = 0

[[Alert] : Cloud DBA : P1 : WFM : out_of_memory event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB host out of memory
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server" source=/data/Postgresplus*enterprisedb* SQLcode=53200| table _time host _raw

[[Alert] : Cloud DBA : P1 : WFM : EDB out_of_memory event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,cloud.dbas@ukg.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB host out of memory
dispatch.earliest_time = -15m@m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server" source=/data/log/edb* "SQLcode=53200 ERROR:  out of memory" | table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : admin_shutdown event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB admin shutdown has been  initiated
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server" source=/data/Postgresplus*enterprisedb* SQLcode=57P01| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : cannot_connect_now event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = Cannot connect to DB Host
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server" source=/data/Postgresplus*enterprisedb* SQLcode=57P03| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : configuration_limit_exceeded event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB configuration_limit_exceeded
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server" source=/data/Postgresplus*enterprisedb* SQLcode=53400| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : Database must be vacuumed messages found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = Database must be vacuumed
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* "WARNING: database * must be vacuumed within * transactions"| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : database_dropped event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB database_dropped
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server" source=/data/Postgresplus*enterprisedb* SQLcode=57P04| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : insufficient_resources event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB has insufficient resources
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server"  source=/data/Postgresplus*enterprisedb* SQLcode=53000| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : io_error event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB DIsk I/O error
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server"  source=/data/Postgresplus*enterprisedb* SQLcode=58030| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : raise_exception event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB raise_exception - user defined exceptions
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server"  source=/data/Postgresplus*enterprisedb* SQLcode=P0001| table _time host _raw

[[Alert] : Cloud DBA : P3 : WFM : system_error event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R0295OFXXH7M1TRVGMUPPMU5Y0NBDS1U@ukg.pagerduty.com
description = PPAS DB system_error occurred
dispatch.earliest_time = -15m 
dispatch.latest_time = @m 
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:server"  source=/data/Postgresplus*enterprisedb* SQLcode=58000| table _time host _raw

############################
#DBS EFM
############################
#Bhavya Arora - changed as per SCTASK0275112
[[Alert] : DimCritical : P1 : DBS EFM : Master database failover for cluster]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = EFM failover in ppas cluster and promotion is being done, Refer - https://engconf.int.kronos.com/display/CDS/SOP%3A+TRBLSHOOT+-+PPAS+Troubleshooting+Guide
dispatch.earliest_time = -15m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*dbs* sourcetype="enterprisedb:postgres:efm" "Promotion has started on cluster" OR "Failover has completed on cluster" |table _time host _raw |rename _time as Time _raw as "Event" |convert ctime(Time)

#Brian.Adrich changed query per RITM0088448
#Azmath.Shaik changed search query to include impacted_node on 02/21
#Azmath Shaik   changed search query to change the condition
#Azmath Shaik   change the earliest time window from5 to 30 and cron 5 to 30 on 03/03
#Marc B         change priority to P2 per Belinda 20200304
[[Alert] : DimCritical : P2 : DBS EFM : Agent type is Idle & State is Unknown]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.impacted_node$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.impacted_node$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Agent type is Idle & State is Unknown
dispatch.earliest_time = -30m@m 
dispatch.latest_time = @m 
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = db_cluster
alert.suppress.period = 30m
search = index=*-wfd-dbs-efmstate (Idle AND UNKNOWN) or (Idle or IDLE or UNKNOWN ) | rex field=_raw "Cluster\sStatus\:\s(?P<db_cluster>.+)" | rex field=_raw "Idle\s+(?<impacted_node>[^\s]+)" |stats count by impacted_node  db_cluster | where count >1 | fields impacted_node db_cluster 

[[Alert] : DimNonCritical : P3 : DBS EFM : Connection to DB refused]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Connection to DB refused
dispatch.earliest_time = -5m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m 
search =  index=*dbs* sourcetype="enterprisedb:postgres:efm"  "Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections"| table _time host _raw

[[Alert] : DimNonCritical : P3 : DBS EFM : Database system is shutting down]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Database system is shutting down
dispatch.earliest_time = -5m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m 
search = index=*dbs* sourcetype="enterprisedb:postgres:efm" "the database system is shutting down"| table _time host _raw

[[Alert] : DimNonCritical : P3 : DBS EFM : DB Failure Declared]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = DB Failure Declared
dispatch.earliest_time = -5m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m 
search = index=*dbs* sourcetype="enterprisedb:postgres:efm" "Node * has declared database failure"| table _time host _raw

[[Alert] : DimNonCritical : P3 : DBS EFM : Destination host unreachable]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Destination host unreachable
dispatch.earliest_time = -5m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m 
search = index=*dbs* sourcetype="enterprisedb:postgres:efm" level=WARNING "JGRP000026"| table _time host _raw

[[Alert] : DimNonCritical : P3 : DBS EFM : EFM Agent Shutting down]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = EFM Agent Shutting down
dispatch.earliest_time = -5m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m 
search = index=*dbs* sourcetype="enterprisedb:postgres:efm" logger="com.enterprisedb.efm.admin.AdminServerThread" level=INFO "Received stop request"| table _time host _raw

[[Alert] : DimNonCritical : P3 : DBS EFM : EFM Agent Started]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = EFM Agent Started
dispatch.earliest_time = -5m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m 
search = index=*dbs* sourcetype="enterprisedb:postgres:efm" "Standby agent is running and database health is being monitored" logger="com.enterprisedb.efm.utils.Notifications"| table _time host _raw

[[Alert] : DimNonCritical : P3 : DBS EFM : Resume failed]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = EFM Resume failed
dispatch.earliest_time = -5m@m 
dispatch.latest_time = @m 
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m 
search = index=*dbs* sourcetype="enterprisedb:postgres:efm" level=WARNING "Resume failed" "Database is already running and is being monitored"| table _time host _raw

############################
#Integration
############################

[[Alert] : DimCritical : P1 : Integration : Boomi process exception detected]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Boomi process exception detected \
For integration service - https://engconf.int.kronos.com/display/Falcon/Integration+%3A+Boomi+process+exception+detected
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = tenantId
alert.suppress.period = 60m
search = index="*-trt-nginx" "no locks available"  earliest=-30m@m | table _time host tenantId _raw

[[Alert] : DimCritical : P1 : Integration : Non 200 response code received for atom.boomi.com]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Non 200 response code received for atom.boomi.com. Check the Boomi status page to see if any issues have been recorded: https://status.boomi.com/ \
For integration service - https://engconf.int.kronos.com/display/Falcon/Integration+%3A+Non+200+response+code+received+for+atom.boomi.com
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-oss-prxy-app" req_method=CONNECT file="atom.boomi.com:443" result_code!=200 | stats count by host clientip file req_method result_code

############################
#KPI DB
############################

# REQ0103975 - add one more condition ("GossipTasks" "InetAddress" "is now DOWN" )
# REQ0104107 - revert to old search query DSE Service Shutdown
[[Alert] : DimCritical : P1 : KPI DB : DSE Service Shutdown]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
description = Cassandra DB DSE service shutdown, please refer confluence page to troubleshoot - https://engconf.int.kronos.com/display/FCOD/Cassandra+Monitoring
dispatch.earliest_time = -5m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*-wfd-kpi-db" "dse service shutdown" | table _time, host, _raw | rename _time as Time _raw as Event | convert ctime(Time) As Time

[[Alert] : DimCritical : P1 : KPI DB : HintsDispatchExecutor file corrupted]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
description = KPI DB HintsDispatchExecutor file corrupted
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-kpi-db" level=ERROR "*file is corrupted*" HintsDispatchExecutor | table _time host _raw

[[Alert] : DimNonCritical : P3 : KPI DB : Cassandra exception occurred]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = This is Cassandra DB exception , please refer confluence page to troubleshoot - https://engconf.int.kronos.com/display/FCOD/Cassandra+Monitoring
dispatch.earliest_time = -1h
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_field
alert.suppress.period = 6h
search = index="*-kpi-db" cassandra_exception="InvalidRequestException" OR cassandra_exception="AlreadyExistsException" OR cassandra_exception="ConfigurationException" OR cassandra_exception="FunctionFailureException" OR cassandra_exception="WriteFailureException" OR cassandra_exception="ReadFailureException" OR cassandra_exception="CoordinationFailureException" OR cassandra_exception="RequestExecutionException" OR cassandra_exception="QueryValidationException" OR cassandra_exception="NoHostAvailableException" OR cassandra_exception="DriverException" OR cassandra_exception="UnavailableException" OR cassandra_exception="ReadTimeoutException" OR cassandra_exception="OperationTimedOutException" | eval suppress_field = host."-".cassandra_exception | table _time, host,suppress_field, _raw | rename _time as Time _raw as Event | convert ctime(Time) As Time

[[Alert] : DimCritical : P1 : KPI DB : Cassandra compaction error occurred]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Cassandra will report "Not enough space for compaction" when a server does not have enough disk space to complete its compaction tasks. Check disk usage on this cluster to ensure there is not a disk space issue ongoing.
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_field
alert.suppress.period = 30m
search = index="*-wfd-*-db" sourcetype="cassandra:cluster:system"  "Not enough space for compaction"

#REQ0096568 : Change Search Query
[[Alert] : DimCritical : P1 : URL Check Failed : KPI DB MGT : Opscenter]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.hosts$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.hosts$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
description = Cassandra Opscenter link is unreachable. SOP: https://engconf.int.kronos.com/display/CDS/ALERT+%3A+CASS+%3A+URL+Check+Failed+%3A+KPI+DB+MGT+%3A+Opscenter  OpsCenter URLs: https://engconf.int.kronos.com/display/CDS/OPSCenter+URL%27s
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_field
alert.suppress.period = 120m
search = index=koogle-availability-details service_name="Environment-SCC-MGT" metric_name=Url_Check feedback!="Koogle Error has Occurred" | stats count(eval(match(availability, "available"))) as s, count as t by hosts| eval f = t-s, percF = round((f/t)*100,0), percS=round(100-percF,0)| rename t as Total, percF as FailureRate, percS as SuccessRate |search SuccessRate < 34 | table hosts, Total, FailureRate, SuccessRate

#REQ0134925 : OpsCenter repair service stopped
[[Alert] : DimCritical : P1 : KPI DB MGT : OpsCenter repair service stopped manually]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.hosts$ [$result.cluster$]\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.hosts$ [$result.cluster$]
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
description = Cassandra OpsCenter repair service stopped manually by the user. SOP: https://engconf.int.kronos.com/display/WDCSD/Steps+to+Stop+or+Resume+the+Auto+repair+from+the+OpsCenter
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = cluster
alert.suppress.period = 120m
search = index=*mgt* source="/data/opscenter/logs/opscenterd.log" "Deactivating Repair Service" | rex field=_raw "^(?:[0-9]{4}-[0-9]{2}-[0-9]{2})?(?:[ T][0-9]{2}:[0-9]{2}:[0-9]{2})?(?:[.,][0-9]{3})?\s\[(?<cluster>.*)\]" | stats count by cluster, _time, host | where count > 0 | eval msg="Repair service stopped check OpsCenter" | table _time host cluster msg count

#REQ0092974
[[Alert] : DimCritical : P2 : KPI DB : Cassandra Write Query Timeouts]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGFalconKPIAlertTeam@ukg.com
description = Execute the following SOP to recover the service - https://engconf.int.kronos.com/display/FT/Cassandra+Health+Checks+Troubleshooting+Guide	
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index=*kpi* sourcetype="cassandra:cluster:system"   "INFO" AND "MUTATION messages were dropped in last 5000 ms"| stats count by host| where  count > 50 | eval msg="MUTATION messages were dropped in last 5000 ms"

#REQ0092973
[[Alert] : Dimcritical : P2 : KPI DB : Cassandra Read Query Timeouts]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGFalconKPIAlertTeam@ukg.com
description = Execute the following SOP to recover the service - https://engconf.int.kronos.com/display/FT/Cassandra+Health+Checks+Troubleshooting+Guide	
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index=*kpi* sourcetype="cassandra:cluster:system" "INFO" AND "READ messages were dropped in last 5000 ms"| stats count by host| where  count > 50 | eval msg="READ messages were dropped in last 5000 ms"

#REQ0092972
[[Alert] : DimCritical : P2 : KPI DB : Cassandra Slow Query]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGFalconKPIAlertTeam@ukg.com
description = Execute the following SOP to recover the service - https://engconf.int.kronos.com/display/FT/Cassandra+Health+Checks+Troubleshooting+Guide	
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 12h
search = index=*kpi* source=/data/cassandra/logs/debug.log "slow timeout 500 msec" | stats count by host | where count > 100 | eval msg="slow timeout 500 msec"


############################
#FCS DB
############################

[[Alert] : DimCritical : P1 : FCS DB : DSE Service Shutdown]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/137750f1c0064603d0283be669568f2d/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Cassandra DB DSE service shutdown, please refer confluence page to troubleshoot - https://engconf.int.kronos.com/display/FCOD/Cassandra+Monitoring
dispatch.earliest_time = -5m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*-wfd-fcs-db" "dse service shutdown" | table _time, host, _raw | rename _time as Time _raw as Event | convert ctime(Time) As Time

[[Alert] : DimCritical : P1 : FCS DB : HintsDispatchExecutor file corrupted]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = FCS DB HintsDispatchExecutor file corrupted
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-fcs-db" level=ERROR "*file is corrupted*" HintsDispatchExecutor | table _time host _raw

[[Alert] : DimNonCritical : P3 : FCS DB : Cassandra exception occurred]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/137750f1c0064603d0283be669568f2d/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = This is Cassandra DB exception , please refer confluence page to troubleshoot - https://engconf.int.kronos.com/display/FCOD/Cassandra+Monitoring
dispatch.earliest_time = -1h
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_field
alert.suppress.period = 6h
search = index="*-fcs-db" cassandra_exception="InvalidRequestException" OR cassandra_exception="AlreadyExistsException" OR cassandra_exception="ConfigurationException" OR cassandra_exception="FunctionFailureException" OR cassandra_exception="WriteFailureException" OR cassandra_exception="ReadFailureException" OR cassandra_exception="CoordinationFailureException" OR cassandra_exception="RequestExecutionException" OR cassandra_exception="QueryValidationException" OR cassandra_exception="NoHostAvailableException" OR cassandra_exception="DriverException" OR cassandra_exception="UnavailableException" OR cassandra_exception="ReadTimeoutException" OR cassandra_exception="OperationTimedOutException" | eval suppress_field = host."-".cassandra_exception | table _time, host,suppress_field, _raw | rename _time as Time _raw as Event | convert ctime(Time) As Time

[[Alert] : DimCritical : P1 : FCS DB : Cassandra compaction error occurred]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/137750f1c0064603d0283be669568f2d/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Cassandra will report "Not enough space for compaction" when a server does not have enough disk space to complete its compaction tasks. Check disk usage on this cluster to ensure there is not a disk space issue ongoing.
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_field
alert.suppress.period = 30m
search = index="*-wfd-fcs-db" sourcetype="cassandra:cluster:system"  "Not enough space for compaction"


[[Alert] : DimWarning : P2 : OAM : High Response Time]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.podname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.podname$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*wfd-oam* source=*oam* sourcetype="nginx:plus:access" | eval podname=mvindex(split(source,"/"),-3) | rex field=_raw "\d+\.\d\d\d\s\d+\.\d\d\d\s(?<upstream_response_time>\d+\.\d\d\d)\s\d+\.\d\d\d" | stats count(eval(upstream_response_time>=1  )) as above count(eval(upstream_response_time>=1 OR upstream_response_time<1)) as total by host podname | eval percentage=if(above==0,0,(above/total)*100) | where percentage > 0.5 and percentage < 1.0 

[[Alert] : DimCritical : P1 : OAM : High Response Time]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.podname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.podname$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*wfd-oam* source=*oam* sourcetype="nginx:plus:access" | eval podname=mvindex(split(source,"/"),-3) | rex field=_raw "\d+\.\d\d\d\s\d+\.\d\d\d\s(?<upstream_response_time>\d+\.\d\d\d)\s\d+\.\d\d\d" | stats count(eval(upstream_response_time>=1  )) as above count(eval(upstream_response_time>=1 OR upstream_response_time<1)) as total by host podname | eval percentage=if(above==0,0,(above/total)*100) | where percentage > 1.0 

[[Alert] : DimWarning : P2 : OAM : 5XX Error]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.podname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.podname$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-oam* source=*oam* sourcetype="nginx:plus:access" | eval podname=mvindex(split(source,"/"),-3) | rex field=_raw "\"(?<request>(POST|GET|PUT) [^\"]+)\" (?<response_code>\d{3})" | stats count(eval(response_code IN (500,501,502,503,504,505,506,507,508,509,510,511,598,599))) as not_available count as available by host podname | eval E_5xxpercentage=if(not_available==0,0,(not_available/available)*100) | sort -E_5xxpercentage| stats max(E_5xxpercentage) as E_5xxpercentage by host podname | where E_5xxpercentage > 0.5 and E_5xxpercentage < 1.0 

[[Alert] : DimCritical : P1 : OAM :  5XX Error]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.podname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.podname$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-oam* source=*oam*  sourcetype="nginx:plus:access" | eval podname=mvindex(split(source, "/"), -3) | rex field=_raw "\"(?<request>(POST|GET|PUT) [^\"]+)\" (?<response_code>\d{3})" | stats count(eval(response_code IN (500,501,502,503,504,505,506,507,508,509,510,511,598,599))) as not_available count as available by host podname | eval E_5xxpercentage=if(not_available==0,0,(not_available/available)*100) | sort -E_5xxpercentage| stats max(E_5xxpercentage) as E_5xxpercentage by host podname | where E_5xxpercentage > 1.0

[[Alert] : DimWarning : P2 : OAM : 4XX Error]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-oam* source=*oam* | stats count(eval(response_code IN  (402,405,406,407,408,409,410,411,499))) as not_available count as available by host | eval K_4xxpercentage=if(not_available==0,0,(not_available/available)*100) | sort -K_4xxpercentage | stats max(K_4xxpercentage) as K_4xxpercentage by host | where  K_4xxpercentage > 0.5 and K_4xxpercentage > 1.0

[[Alert] : DimCritical : P1 : OAM :  4XX Error]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-oam* source=*oam* | stats count(eval(response_code IN  (402,405,406,407,408,409,410,411,499))) as not_available count as available by host | eval K_4xxpercentage=if(not_available==0,0,(not_available/available)*100) | sort -K_4xxpercentage | stats max(K_4xxpercentage) as K_4xxpercentage by host | where  K_4xxpercentage > 1.0

[[Alert] : DimCritical : P1 : OAM :  Connection Issues yellow]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.podname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.podname$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = podname
alert.suppress.period = 1h
search = index=*-wfd-oam* source=*oam* sourcetype="openam:debug" | search "Server Connection Closed" OR "Heartbeat timed out" OR "javax.servlet.ServletException: directory is down" OR ("No operational connection factories available" AND NOT "ERROR: Unable to start persistent search") AND NOT "ERROR: An error occurred while trying to create a bind connection to the datastore" | eval podname=mvindex(split(source,"/"),-3) | stats count as vcount by podname | where vcount > 0 | eventstats count as F_ConnectionIssuesNodeCount by podname | table podname F_ConnectionIssuesNodeCount

[[Alert] : DimWarning : P2 : ODJ :  High Unindexed Searched]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.podnames$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.podnames$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = podnames
alert.suppress.period = 1h
search = index=*wfd-odj* sourcetype="opendj*" "unindexed" NOT request.filter="*uid=*" | bucket _time span=10m | search NOT "*sunamhiddenrealmdelegationservicepermissions*" AND NOT "*ds-pwp-password-policy-dn*" AND NOT "*ds-cfg-password-validator=*" AND NOT "*(objectClass=*)*" | eval podnames=mvindex(split(source,"/"),-2), typeOfPod=mvindex(split(podnames,"-"),-2), env=mvindex(split(podnames,"-"),1) | spath input=_raw path=request.filter output=filter | stats count as B_UnindexCount by podnames filter | where B_UnindexCount > 10 | fields podnames filter B_UnindexCount

[[Alert] : DimWarning : P2 : TRT : High Response Time]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-trt-nginx  sourcetype="tenantrouter:access" | where isnum(request_time) AND isnum(upstream_response_time) | eval diff=request_time-upstream_response_time | stats count(eval(diff>=0.100 AND diff<1)) as above count(eval(diff>=1 OR diff<1)) as total by  host | eval percentage=if(above==0,0,(above/total)*100) | stats max(percentage) as MaxRespTime100msAnd1sec by  host | where MaxRespTime100msAnd1sec>0.5 and MaxRespTime100msAnd1sec<1.0


[[Alert] : DimCritical : P1 : TRT : High Response Time]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-trt-nginx  sourcetype="tenantrouter:access" | where isnum(request_time) AND isnum(upstream_response_time) | eval diff=request_time-upstream_response_time | stats count(eval(diff>=0.100 AND diff<1)) as above count(eval(diff>=1 OR diff<1)) as total by  host | eval percentage=if(above==0,0,(above/total)*100) | stats max(percentage) as MaxRespTime100msAnd1sec by  host | where MaxRespTime100msAnd1sec>1.0

[[Alert] : DimCritical : P2 : TRT : 5XX Error Yellow]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-trt-nginx sourcetype="tenantrouter:access" | search NOT "*health*" AND NOT "*file_upload*" |  eval env = mvindex(split(host, "-"), 1) | eval host=mvindex(split(host, "."), 0) | eval response_code=mvindex(split(_raw," ") ,9) |  stats count(eval((response_code IN (500,501,502,503,504,505,506,507,508,509,510,511,598,599)) AND NOT (upstream_status IN (500,501,502,503,504,505,506,507,508,509,510,511,598,599)))) as not_available count as available by env,host | eval percentage=if(not_available==0,0,(not_available/available)*100)| table env, host, not_available, available, percentage | where percentage>0.5 and percentage<1.0

[[Alert] : DimCritical : P2 : TRT :  5XX Error Red]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-trt-nginx sourcetype="tenantrouter:access" | search NOT "*health*" AND NOT "*file_upload*" |  eval env = mvindex(split(host, "-"), 1) | eval host=mvindex(split(host, "."), 0) | eval response_code=mvindex(split(_raw," ") ,9) |  stats count(eval((response_code IN (500,501,502,503,504,505,506,507,508,509,510,511,598,599)) AND NOT (upstream_status IN (500,501,502,503,504,505,506,507,508,509,510,511,598,599)))) as not_available count as available by env,host | eval percentage=if(not_available==0,0,(not_available/available)*100)| table env, host, not_available, available, percentage | where percentage>1.0

[[Alert] : DimCritical : P2 : IDP AM : 4XX Error Yellow]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-idp-oam-ilb sourcetype="nginx:plus:access" | eval env = mvindex(split(host, "-"), 1) | eval host=mvindex(split(host, "."), 0) | stats count(eval(response_code IN (400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,422,423,424,425,426,428,429,431,444,449,450,451,499)  AND NOT (match(access_request, "/authn/json/sessions\\?_action=getSessionInfo") OR match(access_request, "/authn/json/users\\?_action=idFromSession")  OR match(access_request, "/favicon.ico")))) as Total_4xx count as Total_Requests by env,host | eval percentage=if(Total_4xx==0,0,(Total_4xx/Total_Requests)*100)| table env, host, Total_4xx, Total_Requests, percentage | where percentage>0.5 and percentage<1.0

[[Alert] : DimCritical : P2 : IDP AM : 4XX Error Red]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-idp-oam-ilb sourcetype="nginx:plus:access" | eval env = mvindex(split(host, "-"), 1) | eval host=mvindex(split(host, "."), 0) | stats count(eval(response_code IN (400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,422,423,424,425,426,428,429,431,444,449,450,451,499)  AND NOT (match(access_request, "/authn/json/sessions\\?_action=getSessionInfo") OR match(access_request, "/authn/json/users\\?_action=idFromSession")  OR match(access_request, "/favicon.ico")))) as Total_4xx count as Total_Requests by env,host | eval percentage=if(Total_4xx==0,0,(Total_4xx/Total_Requests)*100)| table env, host, Total_4xx, Total_Requests, percentage | where percentage>1.0


[[Alert] : DimCritical : P2 : IDP AM : 5XX Error Red]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -8h@h
dispatch.latest_time = now
cron_schedule = 0 6-22/8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-idp-oam-ilb sourcetype="nginx:plus:access" | eval env = mvindex(split(host, "-"), 1) | eval host=mvindex(split(host, "."), 0) |  stats count(eval(response_code IN (500,501,502,503,504,505,506,507,508,509,510,511,598,599))) as Total_5xx count as Total_Requests by env,host | eval percentage=if(Total_5xx==0,0,(Total_5xx/Total_Requests)*100) | table env, host, ,Total_5xx, Total_Requests, percentage | where percentage>1.0

[[Alert] : DimCritical : P1 : TR : Agent profile endpoint returns http status 403]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com,IAMDimNoidaCore@ukg.com
description = Connect to the Engineering team
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-trt-*" host="*trt" sourcetype="tenantrouter:system" "*AM agent profile endpoint returns http status 403*" | stats count by host

############################
#Nginx ILB
############################

#20200219 - updated suppress.fields from host to backend_host
#20200317 - Marc B: exclude healthCheck from search, added host to search, suppress on host
[[Alert] : DimCritical : P1 : Nginx ILB : No live upstreams while connecting to upstream]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02HSGMTC659V9ZS667UG8M781V7638D@ukg.pagerduty.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = The alert is generated if an upstream server (backend server of an ilb) is marked as unavailable. The alert is meant to detect both flapping of backend resources and to detect healthcheck failures.  Please note, that healthcheck failures aren't always 'active' health checks, there can be passive health checks that are failing and we wouldn't know that backend servers are actually being marked "down" when they are in fact up.  Example is the timeouts causing BE NGINX ILB to mark hosts as unavailable. This message in the ILB indicates that the http call failed (unless there is a re-try mechanism) but in this interval all existing calls can be impacted and no new call be routed to the backend that is marked as offline\
For TMS Service: https://engconf.int.kronos.com/display/FT/SOP+-+TMS+%3A+No+live+upstreams+while+connecting+to+upstream\
OpenAM - https://engconf.int.kronos.com/display/FT/SOP+%3A+OpenAM+ILB+connection+issue+resolution
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*nginx*" OR index="*ilb*" sourcetype=nginx:plus:error "no live upstreams while connecting to upstream" NOT "healthCheck"  NOT [|inputlookup temp_dr_hosts.csv | dedup host|table host | eval host=host."*"] | rex field=_raw "client:(?P<requester_client_ip>[^\,]+)" | rex field=_raw "request:\s+\"(?P<http_method>\w+)" | rex field=_raw "request:\s+\"\w+\s+(?P<http_request>[^\"]+)" | rex field=_raw "host:\s+\"(?P<backend_host>[^\"]+)"  | table  requester_client_ip http_method http_request backend_host host

[[Alert] : DimOSSCritical : P2 : GCP ELB : Increase in 502's detected]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $data.resource.labels.forwarding_rule_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $data.resource.labels.forwarding_rule_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = The alert is generated if the number of 502 response codes (Bad gateway) between ELB and backend increases by 50 over a 15 minute period. Route the ticket to the cloud network team to verify the forwarding rule to ensure the requests are able to make it to the ELB backend
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = data.resource.labels.forwarding_rule_name
alert.suppress.period = 60m
search = index=cust-gcp-http-lb-request "data.httpRequest.status"=502 "data.jsonPayload.statusDetails"="failed_to_connect_to_backend" | bin span=15min _time | stats count as TotalVal by _time, data.resource.labels.forwarding_rule_name | sort data.resource.labels.forwarding_rule_name _time | streamstats current=false window=0 first(TotalVal) as prev by data.resource.labels.forwarding_rule_name | eval deltaval=TotalVal - prev | table data.resource.labels.forwarding_rule_name, _time, TotalVal, deltaval | where deltaval > 50

[[Alert] : DimCritical : P2 : Nginx ILB : Increase in 302's detected]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.url$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.url$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02HSGMTC659V9ZS667UG8M781V7638D@ukg.pagerduty.com
description = SOP Link: https://engconf.int.kronos.com/display/NPDPMO/Alert+-+DimCritical+%3A+P2+%3A+Nginx+ILB+%3A+Increase+in+302%27s+detected
dispatch.earliest_time = -1h@m
dispatch.latest_time = @m
cron_schedule = 0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = url
alert.suppress.period = 120m
search = index=*-wfd-wfm-ilb status=302 | eval url=mvindex(split(request,"?"),0) | stats count by url | where count > 200


############################
##RabbitMQ
#############################
### Alert change request number - REQ0064801/RITM0070409

[[Alert] : DimCritical : P1 : RabbitMQ : running_partitioned_network]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com, R025V4GTZB59QY9UTC8ZJUNZF0CEH97Y@ukg.pagerduty.com
description = running_partitioned_network. SOP: https://engconf.int.kronos.com/display/FAR/Mnesia+Running+Network+Partition+Issue+SOP
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 
search = index=*-wfd-dmq-app sourcetype=rabbitmq  (running_partitioned_network) OR mnesia_down OR (Partial partition detected) | stats list(_raw) by host

[[Alert] : DimCritical : P1 : RabbitMQ : Shutting Down JVM]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com,wfd-messaging-rabbitmq-incidents@ukg.pagerduty.com
description = Shutting Down JVM. SOP: https://engconf.int.kronos.com/pages/viewpage.action?pageId=296017512
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period =
search = index=*-wfd-wfm-app host=*wfm* source=/data/logs/wfc/wfc.log logger= *com.kronos.messaging*  msg="*Shutting down JVM*" | stats list(_raw) by host

[[Alert] : DimCritical : P1 : RabbitMQ : Node not responding event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = RabbitMQ might be overloaded and may cause performance issues. We need to verify using rabbitmq console if we have any old node removed and new node added. If the node number 5 has spun, we should go for upgrade of the RabbitMQ server. SOP: https://engconf.int.kronos.com/pages/viewpage.action?pageId=296017512#RabbitMQP1ProductionLevelAlerts(Configured)-[Alert]:DimCritical:P1:RabbitMQ:Nodenotrespondingeventfound 
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 15m
search = index=*-wfd-dmq-app sourcetype=rabbitmq level=ERROR ("Node * not responding" AND "*Removing (timedout) connection*")  | stats list(_raw) by host

[[Alert] : DimCritical : P1 : RabbitMQ : Plain login refused]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = This event is found in the logs when WFM information is deleted or gets corrupted even though the WFM still exists. SOP: https://engconf.int.kronos.com/pages/viewpage.action?pageId=296017512#RabbitMQP1ProductionLevelAlerts(Configured)-[Alert]:DimCritical:P1:RabbitMQ:Plainloginrefused For WIT specific user plain login issue, follow the SOP https://engconf.int.kronos.com/pages/viewpage.action?pageId=822537478
dispatch.earliest_time = -5m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m
search = index=*-wfd-dmq-app sourcetype=rabbitmq "PLAIN login refused" | table _time host _raw

[[Alert] : DimCritical : P1 : RabbitMQ : vm_memory_high_watermark set event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = Memory reaching above Watermark Level is a major incident because under normal conditions RabbitMQ consumes low Memory and is always less than the Watermark Level. This alert can trigger under any of the following circumstances: 1) unwanted message and Queues are present in RabbitMQ - Engineering Team will need to figure out the cause (Ex: Express Upgrade or Blue Green Upgrade of WFM) 2) inherent slowness in RabbitMQ cluster 3) corruption of Mnesia Database which can be seen in Logs.(Error is usually received after  1 to 2 hours of watermark set incident). SOP: https://engconf.int.kronos.com/pages/viewpage.action?pageId=296017512#RabbitMQP1ProductionLevelAlerts(Configured)-RabbitMQAlert:vm_memory_high_watermarkseteventfound
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 
search = index=*-wfd-dmq-app sourcetype=rabbitmq "vm_memory_high_watermark set" |stats list(_raw) by host

[[Alert] : DimNonCritical : P3 : RabbitMQ : Client Missed Heartbeat]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = missed heartbeats from client, timeout: 60s
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * * 
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*-dmq-app sourcetype=rabbitmq "missed heartbeats from client" | table _time host _raw

#REQ0132612
[[[Alert] : DimCritical : P1 : RabbitMQ : Connectivity down]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/e52d8a41e774480cd05e571a86750b8c/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = For troubleshooting, please follow the SOP  https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FAR&title=RabbitMQ+Alerts+and+SOP
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields =
alert.suppress.period =
search = index=*-wfd-wfm-app host=*wfm* source=/data/logs/wfc/wfc.log logger= *com.kronos.messaging* level=ERROR   msg="*Rabbitmq Connectivity down*" | stats count as down by host | dedup host  | where down>100| table host down | sort - down

#REQ0074817
[[Alert] : DimCritical : P1 : RabbitMQ : Unsynchronized Queues in RabbitMQ cluster]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.hostname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.hostname$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/e52d8a41e774480cd05e571a86750b8c/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = Synchronize the queue from RabbitMQ Admin Console page by clicking on synchronize against the queue name. For troubleshooting, please follow the SOP  https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FAR&title=RabbitMQ+Alerts+and+SOP
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields =
alert.suppress.period =
search = index=*koogle-monitoring* source="messaging-metrics-details" data_type=queues |eval que_vhost = queue_name+"@"+vhost | rename sync_slave_nodes{} as sync_slave_nodes | eval sync_slave_nodes_count = mvcount(sync_slave_nodes) | eval no_slaves = if(sync_slave_nodes_count < 2, "true", "false") | where no_slaves="true" |sort 0 que_vhost _time | table _time que_vhost hostname no_slaves sync* |stats count by que_vhost hostname | stats list(que_vhost) by hostname


############################
#Redis
############################

# Disabled 20210714 per INC3290350
[[Alert] : DimCritical : P1 : Redis : BGSAVE for replication failed]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,OneNOCTeam@ukg.com,wfdredisserviceteam@ukg.com
description = This Alert can trigger if the system is running out of physical memory and the caching process is unable to allocate memory. Check VM memory utilization in SD/Dynatrace.  SSH into the VM and verify if /etc/sysctl.conf contains the line vm.overcommit_memory = 1. Additionally check if the following log entries are present # Connection with slave client id lost because this could indicate network related issues as well between the Caching service (Redis VMs). In either case look at the logs for subsequent details related to this issue
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-dmc-app"  sourcetype=redis "BGSAVE for replication failed" | table _time host source _raw

# Disabled 20210714 per INC3290350
[[Alert] : DimCritical : P1 : Redis : Caching Failed with Keys]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description = Caching Failed with Keys
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-wfm-app" "*failed with keys*" | table _time host source _raw

# Disabled 20210714 per INC3290350
[[Alert] : DimCritical : P1 : Redis : Connection between master/slave lost]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.scope$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.scope$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = This Alert can trigger if connection between master and slave is lost. This may initiate a fail-over from master-node to one of the slave-node. Connection loss can occur due to service unavailability, or it can be network related. Additionally may want to check a fail over was triggered from master-node to one of the slave-nodes
dispatch.earliest_time = -10m
dispatch.latest_time = now
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host   
alert.suppress.period = 60m
search = index="*-wfd-dmc-app" sourcetype=redis ("Connection with replica * lost" OR "Synchronization with replica *succeeded" OR "Successful partial resynchronization with master" OR "Unable to * resync with replica") | sort by _time| bin span=10m _time| eval scope_split=split(host, "-")| eval scope = mvindex(scope_split,0) + "-" + mvindex(scope_split,1) + "-" + mvindex(scope_split,2) + "-" + mvindex(scope_split,3)| table _time scope _raw| eval type = case(like(_raw, "%Connection with replica%lost%"), "lost_with_replica", like(_raw,"%Synchronization with replica %succeeded%"), "resync_successful", like(_raw,"%Successful partial resynchronization with master%"), "resync_successful", like(_raw,"%Unable to % resync with replica%"), "resync_successful",  1=1, "unknown")| stats count by _time, type, scope| xyseries _time,type,scope,count| where 'count: lost_with_replica' > 'count: resync_successful' OR isnull('count: resync_successful')| eval msg = "Replication Issue Occured between Redis Master and Standby(s)"| table _time "scope: lost_with_replica" msg | rename "scope: lost_with_replica" to scope

# Disabled 20210714 per INC3290350
[[Alert] : DimCritical : P1 : Redis : Connection refused event found in Redis-Slave node]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = This alert will trigger when the Redis Slave node is unable to connect to the Redis Master node. This can occur due to service unavailability, or it can be network related. If this condition doesnt get resolved and the alert continues to trigger then further troubleshooting is required. To retrieve logs for the event (including events surrounding the alert condition use the dashboard mentioned below)
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host    
alert.suppress.period = 60m
search = index="*-wfd-dmc-app"  sourcetype=redis "Error condition on socket for SYNC: Connection refused" | table _time host source _raw

# Disabled 20210714 per INC3290350
[[Alert] : DimCritical : P1 : Redis : Failover event in progress]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = 
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host     
alert.suppress.period = 60m
search = index="*-wfd-dmc-app"  sourcetype="redis:sentinel" "try-failover master" | table _time host source _raw

# Disabled 20210714 per INC3290350
[[Alert] : DimCritical : P1 : Redis : Potential failover event]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Check if a failover from master-node to one-of-slave-node initiated and if it completed successfully without any impact to end users. If "Redis cluster goes into an INCORRECT state where none of the nodes in the cluster is running as a master (i.e. all 3 nodes are in slave state) then resolution-steps given here can be followed.
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-dmc-app" sourcetype=redis "Before turning into a slave" | table _time host source _raw

############################
#Reporting
############################

[[Alert] : DimCritical : P1 : Reporting : insufficient memory to execute this report]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = There is insufficient memory to execute report
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-rpt-app" "There is insufficient memory to execute this report" | rex field=_raw "\)\s+(?P<level>\w+)\:\s+(?P<message>.*)" | search level = "SEVERE" message="There is insufficient memory to execute this report." | table _time host level message _raw

[[Alert] : DimCritical : P1 : Reporting App : Could not read server configuration file]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Refer SOP - https://engconf.int.kronos.com/display/PA/Engine+-+Could+not+read+server+configuration+file for Resolution.
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 12h
search = index="*-wfd-rpt-app" "SEVERE" "/share/config/acserverconfig.xml" | rex field=_raw "\s+(?P<level>\w+)\:\s+(?P<message>.*)" | search level=SEVERE message="Could not read server configuration file \"/share/config/acserverconfig.xml\"" | table _time host level message _raw

[[Alert] : DimCritical : P1 : Reporting : Report execution failed to send to BIRT]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Alert generated when WFM cannot send reports for execution to BIRT Reporting Service. Primary action is to check the related BIRT Reporting Service to ensure it is up and running. Check other alerts that may signify issues with BIRT service. Test the WFM's reporting the issue, but logging into a Tenant and executing any sample, lightweight report. If the report execution is successful, then the issue is likely resolved. If you can reproduce the problem, then the first action to take is to restart the BIRT reporting application services. After ther restart is successful, test report execution again.
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*wfd-wfm-monitoring* metric_type=REPORT_EXECUTION_HISTORY_* value>3 metric=failed_to_send_to_birt

#REQ0098745 : Reporting DB Connection Timeout
[[Alert] : DimCritical : P1 : Reporting : Reporting DB Connection Timeout]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Refer SOP - https://engconf.int.kronos.com/display/PA/Engine+-+Report+DB+Connection+Timeout for Resolution.
dispatch.earliest_time = -1h
dispatch.latest_time = now
cron_schedule = 58 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 12h
search = index="*rpt*app*" sourcetype=birt_ihub_process level="SEVERE" message="com.actuate.iserver.database.DBException: Timed out while waiting for a connection.*" | reverse


############################
#Tenant Router
############################

#2/19 - updated suppress_field from host to affected_host & updated spelling from effected to affected
[[Alert] : DimCritical : P1 : Tenant Router : Host not found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.affected_host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.affected_host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = 
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = affected_host
alert.suppress.period = 5m
search = index="*-wfd-trt-*" source="/apps/tenantrouter/logs/tr_error.log" "Host not found" | rex field=_raw "\*\d+\s+(?P<affected_host>[^\s]+)" | rex field=_raw "\[(?P<level>[^\]]+)" | rex field=_raw "server\:\s+(?P<tenant>[^\,]+)" | rex field=_raw "\(\d+\:\s+(?P<Reason>[^\)]+)" | table level affected_host Reason tenant

[[Alert] : DimNonCritical : P4 : SMA Daily Monitoring Alert : OIDC Session Errors]
action.email = 1
action.email.content_type = html
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
https://$server.serverName$/en-US/app/search/single_mobile_authsma\
\
$description$\

action.email.sendresults = 1
action.email.subject.alert = $name$
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = nitin.goyal@ukg.com,akhil.anand@ukg.com,abhishek.wadhwa@ukg.com,aman.gupta@ukg.com,sushil.verma@ukg.com,mannu.kaushik@ukg.com,abhinav.srivastava@ukg.com
description = Single Mobile Authentication failed for some tenants this environment. Percentage of failures detected on OIDC session REST calls during the last 24 hours are as follows:
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 30 2 * * *
relation = greater than
quantity = 0
alert.suppress.fields = URI
alert.suppress.period = 1m
search = index=*trt* sourcetype="tenantrouter:upstream" "/usermanagement/restcall/v1/oidcsession" | rex "dest\s+(?<URI>.*)\s+location.*response_from_upstream\s+(?<Status>\d+)\s+body - - - - - (?<trxid>\w+)\s+\w*" | search Status=200 OR Status>=400 | stats count(eval(Status>=400)) as errorcount count as totalcount by URI | eval percentage=if(errorcount==0,0,(errorcount/totalcount)*100) | table URI, percentage | search percentage > 1

############################
#TMS
############################
[[Alert] : DimCritical : P1 : TMS : Password rotation failed for Authentication service]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com
description = Reach out to Identity DIM Authn at IAMDIMNOIDACORE@ukg.com
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AffectedServiceName
alert.suppress.period = 60m
search = index="*-wfd-tms-app" msg="*failed to Rotate Password*" | rex field=msg "shortName[^\"value\"]+(?<tenant_shortname>[^\}]+)" | rex field=msg "description=(?<AffectedServiceName>.*) failed" | search AffectedServiceName="Authentication" | table ts host tenant_shortname AffectedServiceName | sort -ts

############################
#TMS
############################
# REQ0086877 : Modify Search Query to optimize alert
[[Alert] : DimCritical : P1 : TMS : Password rotation failed for a service]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com, EngineeringServices@ukg.com, vishva.singh@ukg.com, akshit.rawat@ukg.com, ankit.mehra@ukg.com, antima.agrawal@ukg.com, antima.agrawal@ukg.com, kartik.chaudhary@ukg.com, nikhil.b.sharma@ukg.com, nikhil.gupta@ukg.com, pratik.asija@ukg.com, rahul.chauhan@ukg.com, rahul.d.kumar@ukg.com, sandeep.agrrawal@ukg.com, shivani.nayak@ukg.com, shubhi.vashishtha@ukg.com, sourav.gupta@ukg.com, sourav.gupta@ukg.com, vijay.roy@ukg.com
description = SOP Link: https://engconf.int.kronos.com/display/FT/SOP+-+Password+Rotation+for+a+Service+Failed+Alert.
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AffectedServiceName
alert.suppress.period = 60m
search = index="*-wfd-tms-app" msg="*failed to Rotate Password*" | rex  field=msg "shortName[^"value"]+(?<tenant_shortname>[^\}]+)"| rex field=msg "description=(?<AffectedServiceName>.*) failed" | table  ts host tenant_shortname AffectedServiceName | sort -ts 

############################
#TMS
############################
[[Alert] : DimCritical : P1 : TMS : Post Rotate Password failed for a service]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com, EngineeringServices@ukg.com, vishva.singh@ukg.com, akshit.rawat@ukg.com, ankit.mehra@ukg.com, antima.agrawal@ukg.com, antima.agrawal@ukg.com, kartik.chaudhary@ukg.com, nikhil.b.sharma@ukg.com, nikhil.gupta@ukg.com, pratik.asija@ukg.com, rahul.chauhan@ukg.com, rahul.d.kumar@ukg.com, sandeep.agrrawal@ukg.com, shivani.nayak@ukg.com, shubhi.vashishtha@ukg.com, sourav.gupta@ukg.com, sourav.gupta@ukg.com, vijay.roy@ukg.com
description = SOP Link: https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FT&title=SOP+-+Post+Rotate+Password+for+a+Service+Failed+Alert. when WIT appears in affected service column then follow below SOP for WIT to check if this issue is due to missing WIT users in OAM or not. See SOP link - https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=Falcon&title=Creation+of+Missing+WIT+Users+on+OpenAM+SOP
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AffectedServiceName
alert.suppress.period = 60m
search = index="*-wfd-tms-app" msg="*failed to Post Rotate Password*" | rex  field=msg "shortName[^"value"]+(?<tenant_shortname>[^\}]+)"| rex field=msg "description=(?<AffectedServiceName>.*) failed" | table  ts host tenant_shortname AffectedServiceName | sort -ts

############################
#TMS
############################
[[Alert] : DimCritical : P1 : TMS : Update Entitlement failed during Client and Entitlement update]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com, EngineeringServices@ukg.com
description = See SOP link - https://engconf.int.kronos.com/display/FT/SOP+-+Update+Entitlement+for+a+Service+Failed+Alert
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AffectedServiceName
alert.suppress.period = 60m
search = index="*-wfd-tms-app" msg="*failed to update entitlement*" | rex  field=msg "shortName[^"value"]+(?<tenant_shortname>[^\}]+)"| rex field=msg "description=(?<AffectedServiceName>.*) failed" | table  ts host tenant_shortname AffectedServiceName | sort -ts

############################
#TMS
############################
[[Alert] : DimCritical : P1 : TMS : Nginx on TMS nodes are crashing]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com, EngineeringServices@ukg.com
description = SOP Link: https://engconf.int.kronos.com/pages/viewpage.action?pageId=444640085 When NGINX nodes are crashing follow the below SOP SOP - Process Check Failed : Nginx Worker/Master
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AffectedServiceName
alert.suppress.period = 60m
search = index="cust*-tms-*" host="*tms*" sourcetype="nginx:plus:error" "worker process" "exited on signal 11" "core dumped"

############################
#TMS
############################
[[Alert] : DimAlert : P2 : TMS : Unhealthy ILB on TMS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = EngFalconNoidaTenantManagement@ukg.com
description = SOP Link: https://engconf.int.kronos.com/pages/viewpage.action?pageId=314170349 When ILB is Unhealthy, follow the below SOP to recover service when any TMS Node is down in some Region/Zone
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AffectedServiceName
alert.suppress.period = 60m
search = index="*-gcp-http-lb-request", "data.jsonPayload.healthCheckProbeResult.previousHealthState" = "HEALTHY" "data.jsonPayload.healthCheckProbeResult.probeRequest" = "/healthCheck/tms/e2e" "data.jsonPayload.healthCheckProbeResult.healthState" = "UNHEALTHY"


############################
#TMS
############################
[[Alert] : DimNonCritical : P3 : TMS : Node.js restart on TMS Node]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = rahul.d.kumar@ukg.com
description = SOP: https://engconf.int.kronos.com/display/FT/SOP+-+TMS+Node.js+restarts+on+TMS+Node, Node.js restart has been observed with Error msg: Uncaught Exception - Terminating Node Process
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AffectedServiceName
alert.suppress.period = 60m
search = index="*tms*" host="*tms*" "Terminating Node Process" 502

# FS-123676
[[Alert] : DimWarning : P3 : TMS : Tenant has not been reactivated after 90 Minutes]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = michael.suen@ukg.com,beauty.kumari@ukg.com,nooruddin.noorani@ukg.com,sanjeev.prakash@ukg.com,pradeep.saini@ukg.com
relation = greater than
quantity = 0
description = SOP Link: https://engconf.int.kronos.com/display/NPDPMO/Alert+-+DimCritical+%3A+P1+%3A+TMS+%3A+Tenant+has+not+been+reactivated+after+90+Minutes
action.email.message.alert = $name$ : $result.tenant$ \
\
Description : $description$\

action.email.subject.alert = $name$ : $result.tenant$
dispatch.earliest_time = -150m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
alert.suppress.fields = tenant
alert.suppress.period = 60m
search = index=*-prd-wfd-tms-app source=/data/tomcat/logs/tms.log sourcetype=tms:app th=http* msg="*description=*Deactivated successfully*" NOT "nonprd" earliest=-150m@m latest=-90m@m | rex field=msg "description=(?<component>.*)?Deactivated" | rex field=msg "shortName\".\"value\":\"(?<tenant>\w*)\"" | eval stack=substr(host,1,6) | table _time tenant component stack | rename _time AS deactivation_time | join type=left component,tenant [ search index=*-prd-wfd-tms-app source=/data/tomcat/logs/tms.log sourcetype=tms:app th=http* msg="*description=*Activated successfully*" NOT "nonprd" | rex field=msg "description=(?<component>.*)?Activated" | rex field=msg "shortName\".\"value\":\"(?<tenant>\w*)\"" | table _time tenant component | rename _time AS activation_time ] | eval status=if(isnull(activation_time),"Inactive","Active") | table deactivation_time activation_time tenant component status stack | where tenant!="null" AND isnull(activation_time) AND tenant!="" | eval deactivation_time=strftime(deactivation_time, "%d/%m/%Y %I:%M:%S %p") | eval activation_time=strftime(activation_time, "%d/%m/%Y %I:%M:%S %p")

#REQ0074930
#REQ0098007 : Modify Alert to send all results in 1 alert
#REQ0100972 : Add second condition to search 
#FS-180490 Correction in the alert, modify
[[Alert] : DimWarning : P2 : ATH OAM : Bad conditional URL found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,noc---ukg-authn-email.f0i7vzhm@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com, animesh.sonkar@ukg.com, ayush.a.gupta@ukg.com
description = It is a known issue that, after some releases, some conditional URLs may go missing or become corrupt, breaking login functional (SSO or otherwise) for some tenants.\
 - SOP: https://engconf.int.kronos.com/pages/viewpage.action?pageId=391441180 \
 See https://engconf.int.kronos.com/display/WDCSD/Conditional+URL+Utility for details.
dispatch.earliest_time = -12h@h
dispatch.latest_time = now
cron_schedule = 30 */6 * * *
relation = greater than
quantity = 0
alert.suppress.fields = 
alert.suppress.period = 1h
search = index="*-wfd-tms-app" sourcetype="tms:conditionalurl" "Bad URLS are still present after recreate mode"| rex field=_raw "WFM\s+(?P<host>.+)"| rex field=_raw "\:+(?P<message>.+)"| stats count by _time, host, message

 
############################
#Tomcat
############################

#out of memory (oom)
[[Alert] : DimNonCritical : P3 : Tomcat : java.lang.OutOfMemoryError event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = The java.lang.OutOfMemoryError: Java heap space error is thrown whenever the JVM reaches the heap size limit, Note that there might be physical memory available.
dispatch.earliest_time = -10m@m
dispatch.latest_time = now
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index=*-wfd-* source="/data/*/catalina.out" "java.lang.OutOfMemoryError" | table _time, host, _raw

#Azmath Shaik changed this alert from WFL to All Tomact on 02/24
[[Alert] : DimCritical : P1 : Tomcat : Java SocketException event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$/
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = These issues affect SmartViews and essentially punches. On getting this alert support team needs to immediately restart the WFL service on the host the alert is for and also escalate to the CTS WFD team to further diagnose and create PARs as necessary.
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 120m
search = index="*-wfd-*-tomcat" "java.net.SocketException" | stats count by host | where count > 5

############################
#Tomcat & Nginx
############################

#Too many open files
[[Alert] : DimCritical : P1 : Nginx/Tomcat : Too many open files event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = This alert will trigger when the event "too many open files" is logged by nginx or tomcat in a 15 min interval. The table in the alert body will show the hostname and the log source where this event was found. Here are the set of actions that are required for this alert: 1) ssh into the affected host and run: sudo netstat -tnp and save the output to a file, 2) next run sudo ps -ef | grep "nginx\|java" |grep -v grep and save the output, 3) find the PID of the process that threw the error and run: sudo ls -l /proc/$PID/fd | wc -l and save the output, 4) if the error is thrown by tomcat then take a thread dump and save the output, 5) lastly to restore the service...restart the affected process (nginx/tomcat).\
For TMS Service: https://engconf.int.kronos.com/pages/viewpage.action?pageId=444092679\
OpenAM - https://engconf.int.kronos.com/display/FT/SOP+%3A+OpenAM+Too+Many+Open+Files
Alert Action : SOP - https://engconf.int.kronos.com/pages/viewpage.action?pageId=788244800
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-*" (sourcetype="tomcat:runtime:log" OR sourcetype="nginx:plus:error") "*too many open files*" | stats count by host source

############################
##WFL Longer Wait Time (RITM0061535)
#############################

[[Alert] : DimCritical : P1 : WFL Nginx : Longer Wait Time]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,WFDWorkflowServiceAlerts@UKG.COM
description =  Execute the following steps to recover the service - \
Remove the host from the Google ILB. \
We need to restart NGINX only not the WFL Application - https://engconf.int.kronos.com/display/FT/SOP+-+FAILOVER+-+NGINX+Server \
Add back to the Google ILB \

dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*wfl**nginx* host=*prd01*wfl*.int* | rex field=_raw "^(?<remote_address>[\d\.]*)\s(?<remote_user>.*?[^\s])\s+(?<var2>.*?[^\s])\s+\[*(?<local_date>[\d\/\w\:\s\+\-]*)\]*\s\"(?<address>[\w\s\/\?\=\-\&\$\.\%\s\,\:\_\+\\\*\{\}\(\)\~\!\;\@]*)\"\s(?<http_status>\d+)\s+(?<body_bytes_sent>\d+)\s\"(?<http_referer>[\-\d\.]*)\"\s\"(?<http_user_agent>[\w\.\/\-\s\(\)]+)\"\s\"(?<http_xforwarded_for>[\-\d\.]*)\"\s(?<upstream_connect_time>[\-\d\.]*)\s(?<upstream_header_time>[\-\d\.]*)\s(?<upstream_response_time>[\-\d\.]*)\s(?<request_time>[\-\d\.]*)\s(?<upstream_address>[\-\d\.]*)" | eval time_spent_in_nginx = request_time - upstream_response_time | table _time host remote_address local_date address http_status body_bytes_sent http_user_agent request_time upstream_address upstream_connect_time upstream_header_time upstream_response_time time_spent_in_nginx | stats  perc90(time_spent_in_nginx) as time_spent_in_nginx by host  | where  time_spent_in_nginx>30

[[Alert] : DimCritical : P1 : KPI : No Active Apps in Spark]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.groupName$\
\
Alert Action : SOP - https://engconf.int.kronos.com/x/KuT7Lg
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.groupName$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,kgswfdcloudsupportall@ukg.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
description = SOP - https://engconf.int.kronos.com/x/KuT7Lg
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = groupName
alert.suppress.period = 2h
search = index=koogle-availability serviceName=*SCC*  "feedback{}.msg"="No Active Apps in Spark" | table _time groupName "feedback{}.msg"

#RITM0082456

[[Alert] : DimCritical : P1 : Reporting App : HTTP exception while communicating to remote node]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Refer to problem 5 from section "Run/Schedule Report Failure" in https://engconf.int.kronos.com/pages/viewpage.action?pageId=179509725
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*rpt*app "AcSoapDispatcherMH::ProcessRequest() - HTTP exception while communicating to remote node, RequestName= ExecuteReport , IsLocal = 0"  | stats count by host | where count >=5

#REQ0067787
[[Alert] : DimCritical : P1 : Authentication OAM : Invalid Realm]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Invalid Realm. Please refer SOP for it - https://engconf.int.kronos.com/display/FT/Invalid+Realm+SOP
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index=*oam* source=/data/openam/logs/debug/KronosPAP*  "invalid realm" | stats count by host | where count >=5

#WFD SWARM INC2844499

[[Alert] : DimNonCritical : P3 : Tenant Router : avg upstream_response_time >10]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*-wfd-trt-nginx sourcetype=tenantrouter:access request_uri="/sso/portal*" | stats avg(upstream_response_time)  as avg_upstream_response_time  by host | where avg_upstream_response_time > 10

## FS-32970
[[Alert] :  DimCritical : P1 : Worker Process exited on Signal 11 : TRT : Nginx Core Dump]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Please refer SOP for it - https://engconf.int.kronos.com/display/AUTHN/Automated+SOP+of+TR+coredump+collection
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*trt-nginx sourcetype=tenantrouter:error "worker process * exited on signal 11 (core dumped)"  | stats count by host


[[Alert] : DimCritical : P1 : Web Agent connection issue with Open AM : TRT : failed to get agent configuration instance]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Please refer SOP for it - https://engconf.int.kronos.com/display/FT/SOP%3ARestart+of+TR+Nginx+frontend+Container
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.period = 60m
search = index=*trt* host=*trt* sourcetype="tenantrouter:amagent" | search "agent_request_init: failed to get agent configuration instance, error: done"  | stats count by host

[[Alert] : DimCritical : P2 : TRT logs not being ingested in Splunk]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Please refer SOP for it. - https://engconf.int.kronos.com/display/FT/SOP+%3A+No+logs+ingested+in+Splunk
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.period = 60m
search = index=*trt* host=*trt* sourcetype=tenantrouter:access | rex field=host "(?<StackEnv>\w+-\w+)-trt.*" | stats dc(host) as hosts values(host) as hosts_involved by StackEnv | where hosts < 3


#### REQ0067555 & REQ0068104 RabbitMQ : Missing Consumer Queues & modifed splunk search for RITM0165826 ####
[[Alert] : DimCritical : P1 : RabbitMQ : Missing Consumer Queues]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.que_vhost$\
\
Description : $description$\



action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.que_vhost$
action.email.useNSSubject = 1
alert.suppress = 1
alert.suppress.period = 
alert.track = 0
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com, R025V4GTZB59QY9UTC8ZJUNZF0CEH97Y@ukg.pagerduty.com
description = When consumers go missing for any queue for more than 1.5 hour. For SOP refer - https://engconf.int.kronos.com/pages/viewpage.action?pageId=296017512#RabbitMQP1ProductionLevelAlerts(Configured)-RabbitMQAlert:MissingConsumerQueues
dispatch.earliest_time = -90m
dispatch.latest_time = @m
cron_schedule = 0 */1 * * *
relation = greater than
quantity = 0
search = index=koogle-monitoring source=messaging-metrics-details data_type=queues hostname=*dmq* hostname!="*dmq99*" consumers=0 messages!=0 queue_name!="aliveness-test" AND queue_name!="dead-letter-Queue" AND queue_name!="*hca.kpi*" AND queue_name!="*DelayedRetryQueueName*" AND queue_name!="*ForecastingEnginePredict*" AND queue_name!="*ForecastingEngineTraining*" AND queue_name!="*PeopleCacheTopic*"  AND queue_name!="*HCATenantCache*" AND queue_name!="*wfc.notifications.mobile*" AND queue_name!="*wfp.delayNotification.topic*" AND queue_name!="*ENGINE_RABBIT*" | eval que_vhost = queue_name+"@"+vhost | stats count by que_vhost |sort -count | where count>=6


[[Alert] : DimCritical : P1 : Authentication ODJ : Traffic routing on Passive Node]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.StackEnv$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.StackEnv$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description =  Traffic routing on Passive Node. SOP link https://engconf.int.kronos.com/display/FT/Traffic+routing+on+Passive+Node+SOP
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = StackEnv
alert.suppress.period = 60m
search = index=*wfd-*dj-app sourcetype="opendj:ldapaccess" "request.filter"!="(objectClass=*)" NOT("sync" OR "coreToken*" OR "krIntUsr" OR "BIND" OR "CONNECT" OR "UNBIND" OR "DISCONNECT" OR "cn=Tasks" OR "ABANDON" OR "LDAPS") NOT("request.filter"="(!(objectclass=frCoreToken))" AND "response.status"="FAILED") | rex field=host "(?<StackEnv>\w+\-\w+)\-ath.*" | stats dc(host) as hosts values(host) as hosts_involved by StackEnv | where hosts>1


####RITM0079147
[[Alert] : DimCritical : P1 : Authentication ODJ : privileges error on unindexed search]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description =  Insufficient privileges to perform an unindexed search. SOP link https://engconf.int.kronos.com/display/FT/Insufficient+Privileges+for+Unindexed+Search+SOP
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = TenantDn
alert.suppress.period = 60m
search = index="*-wfd-odj-app" sourcetype="opendj:ldapaccess" "response.detail"="You do not have sufficient privileges to perform an unindexed search" request.filter!="(&(personId=*)(objectclass=inetorgperson))" AND request.filter!="(&(objectclass=inetorgperson))"| table _time host request.dn response.detail | rename request.dn as TenantDn, response.detail as Error


##REQ0068428 
[[Alert] : DimCritical : P1 : HCA : HCA Service Error Messages]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description =  For troubleshooting,please refer SOP link https://engconf.int.kronos.com/pages/viewpage.action?pageId=264200436
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_host_msg
alert.suppress.period = 60m
search = index="*wfd-hca-app" sourcetype=hca:app "WCO-129831" OR "WFM Service is down - 502 Bad Gateway" OR "WCO-129832" OR "API Gateway is down- 400 Bad Request" OR "WCO-129833" OR ("Event failed to process" AND "HCADB_SERVICE_FAILURE") OR "WCO-129834" OR "All host(s) tried for query failed (no host was tried)" OR "WCO-129835" OR "Exception while sending event to environment queue" OR "WCO-129836" OR "Exception occurred while processing tenant cache update message" OR "WCO-129837" OR "Exception occurred while sending cache update notification" | rex field=source "\/\w+\/\w+\/\w+\/\w+\/(?<podID>[^\/]+)\/\w+\/.+\/(?<volumeName>[^\/]+)\/(?<nameSpace>[^\/]+)\/(?<host>[^\/]+)\/.+" | rename host as resourceName | table _time resourceName msg tenant | eval suppress_host_msg='resourceName'." ".'msg'


##REQ0068428 
[[Alert] : DimCritical : P1 : HCA : HCA Spark Computation Error Messages]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description =  For troubleshooting,please refer SOP link https://engconf.int.kronos.com/pages/viewpage.action?pageId=264200436
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = suppress_host_msg
alert.suppress.period = 60m
search = index="*hca*" host="*hca*scc*" source="/data/spark/logs/kpi-executor.log" OR source="/data/spark/logs/kpi.log" ("Event failed to process" AND "GENERIC_FAILURE") OR ("Event failed to process" AND "KPI_DATA_FAILURE")| table _time host msg tenant | eval suppress_host_msg='host'." ".'msg'

[[Alert] : DimCritical : P1 : HCA : Cannot connect to any DSE Host]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.resourceName$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.resourceName$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description =  For troubleshooting,please refer SOP link https://engconf.int.kronos.com/display/WHA/HCAService+SOP . Please refer to "Cannot connect to any host" section
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = resourceName
alert.suppress.period = 60m
search = index="*-wfd-hca-app" sourcetype="hca:app" logger="com.datastax.driver.core.ControlConnection" msg="*Cannot connect to any host*" | rex field=source "\/\w+\/\w+\/\w+\/\w+\/(?<podID>[^\/]+)\/\w+\/.+\/(?<volumeName>[^\/]+)\/(?<nameSpace>[^\/]+)\/(?<host>[^\/]+)\/.+" |eval message ="HCA Service is not able to connect to C* via datastax driver" | stats count by host message | where count >= 3 | rename host as resourceName

#Disabling the alert
[[Alert] : DimCritical : P1 : HCA : TenantContextError]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.Tenant$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.Tenant$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description =  SOP link- https://engconf.int.kronos.com/display/WHA/HCAService+SOP
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = Tenant
alert.suppress.period = 60m
search = index="*-wfd-hca-app" sourcetype="hca:app" level=ERROR logger="com.kronos.tenantprovider.impl.TenantProviderImpl" "TenantContextError" "validateTenantIdFromCache" | rex field=source "\/\w+\/\w+\/\w+\/\w+\/(?<podID>[^\/]+)\/\w+\/.+\/(?<volumeName>[^\/]+)\/(?<nameSpace>[^\/]+)\/(?<host>[^\/]+)\/.+" | rex field=_raw "Tenant Id\s\:\s(?<Tenant>\w+)" | eval error_message = "TenantContextError validateTenantIdFromCache"   | stats count by host error_message Tenant

##REQ0068428
[[Alert] : DimNonCritical : P3 : HCA : HCA Service Error Messages]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description =  For troubleshooting,please refer SOP link https://engconf.int.kronos.com/pages/viewpage.action?pageId=264200436
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*wfd-hca-app" sourcetype=hca:app ("Event failed to process" AND "KPIDB_SERVICE_FAILURE") | table _time host msg tenant

##REQ0068428 
[[Alert] : DimNonCritical : P3 : HCA : HCA Spark Computation Error Messages]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description =  For troubleshooting,please refer SOP link https://engconf.int.kronos.com/pages/viewpage.action?pageId=264200436
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*hca*" host="*hca*scc*" source="/data/spark/logs/kpi-executor.log" OR source="/data/spark/logs/kpi.log" ("Event failed to process" AND "COMPUTATION_FAILURE") | table _time host msg tenant


[[Alert] : DimCritical : P1 : HCA : Volumn Computation Batch Job Exception]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.tenant$ \
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.tenant$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = R02HSGMTC659V9ZS667UG8M781V7638D@ukg.pagerduty.com,wfmaas-bpf@ukg.pagerduty.com,engwfdteamavalanche@ukg.com,deepak.tewani@ukg.com
description = SOP Link: https://engconf.int.kronos.com/display/NPDPMO/Alert+-+DimCritical+%3A+P1+%3A+HCA+%3A+Volumn+Computation+Batch+Job+Exception
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = tenant
alert.suppress.period = 60m
search = index="*-wfd-wfm-app" source="/data/logs/wfc/wfc.log" sourcetype="wfm:app" logger="WFC.BUSINESS.BATCH" th="*HCA_VOLUME_COMPUTATION*" msg="*java.lang.Exception: VOLUME PROCESSING RETRYABLE*" | eval env=substr(host,1,24) | table env tenant level


##RITM0077455 OpenDJ ILB connection issue with upstream nodes
[[Alert] : DimCritical : P1 : OPENDJ : ILB connection issue with upstream nodes]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = For troubleshooting, please follow the SOP https://engconf.int.kronos.com/display/FT/OpenDJ+ILB+connection+issue+resolution 
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*odj-ilb*" source="/data/nginx/logs/error.log" ( "connect() failed (111: Connection refused) while connecting to upstream" OR "upstream timed out (110: Connection timed out) while reading response header from upstream" )| table _time host _raw | stats count by host | where count> 5 | eval message="connect() failed (111: Connection refused) while connecting to upstream OR upstream timed out (110: Connection timed out) while reading response header from upstream" | table host message count

##RITM0077454 OpenAM ILB connection issue with upstream nodes
#REQ0105618 : Change Search Query
[[Alert] : DimCritical : P1 : OpenAM : ILB connection issue with upstream nodes]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = For troubleshooting, please follow the SOP https://engconf.int.kronos.com/display/FT/OpenAM+ILB+connection+issue+resolution 
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*oam-ilb*" source="/data/nginx/logs/error.log" ("(111: Connection refused)" OR "(110: Connection timed out)" ) | table _time host _raw | stats count by host | where count> 5 | eval message="(111: Connection refused) OR (110: Connection timed out)" | table host message count


##RITM0077446 OpenAM Healthcheck errors
[[Alert] : DimCritical : P1 : OpenAM : Healthcheck errors: critical]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.title$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.title$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = For troubleshooting, please follow the SOP https://engconf.int.kronos.com/display/FT/OpenAM+healthcheck+failures
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*oam*" OR index="*idp*" sourcetype=tomcat:access:log "isAlive.jsp" response_code!=200 | stats count by host | where count > 5


##RITM0077448 OpenDJ Healthcheck errors
[[Alert] : DimCritical : P1 : OpenDJ : Healthcheck errors: critical]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.title$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.title$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = For troubleshooting, please follow the SOP https://engconf.int.kronos.com/display/FT/OpenDJ+healthcheck+failures
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*odj*" sourcetype=opendj:ldapaccess ("HTTP/1.1" AND krIntUsr AND  "response.status"!=SUCCESSFUL) | stats  count by host  | where  count > 5


#RITM0079747

[[Alert] : DimCritical : P1 : idp-odj : response.status NOT SUCCESSFUL]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = For troubleshooting, please follow the SOP  https://engconf.int.kronos.com/display/FT/IDPDJ+HealthCheck+failures+SOP
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*-wfd-idj-app" sourcetype="opendj:ldapaccess" ("HTTP/1.1" AND krIntUsr AND "response.status"!=SUCCESSFUL)  | stats count by host | where    count> 5

[[Alert] : DimCritical : P1 : Rabbit MQ : QueuesNotAvailableException]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = For troubleshooting, please follow the SOP  https://engconf.int.kronos.com/pages/viewpage.action?pageId=133587823 OR https://engjira.int.kronos.com/browse/DIM-230576
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-udm-app" sourcetype="udm:app" "org.springframework.amqp.rabbit.listener.QueuesNotAvailableException" earliest=-5m@m latest=@m | eval message= "rabbit.listener.QueuesNotAvailableException" | bin span=5m _time | stats count by host message _time | where count>=5 | table _time host message

[[Alert] : DimCritical : P1 : TMS : Health check failed for Redis]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com, EngineeringServices@ukg.com, vishva.singh@ukg.com, akshit.rawat@ukg.com, ankit.mehra@ukg.com, antima.agrawal@ukg.com, antima.agrawal@ukg.com, kartik.chaudhary@ukg.com, nikhil.b.sharma@ukg.com, nikhil.gupta@ukg.com, pratik.asija@ukg.com, rahul.chauhan@ukg.com, rahul.d.kumar@ukg.com, sandeep.agrrawal@ukg.com, shivani.nayak@ukg.com, shubhi.vashishtha@ukg.com, sourav.gupta@ukg.com, sourav.gupta@ukg.com, vijay.roy@ukg.com
description = For troubleshooting, please follow the SOP  https://engconf.int.kronos.com/display/FT/SOP+-+For+TMS+Redis+Connectivity+issue
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*-wfd-tms-nodejs" sourcetype=nodejs earliest=-5m@m latest=@m name=tmshealthcheck msg="Deep health check failed for Redis*" | stats count by name msg host | where count >=25 | table name msg host

#Maya.Elkhoury 10/21/2024 UDM ENG internal alert to find tenants with device communications out of sync
[[Alert] : DimCritical : P1 : UDM : tnt.device.communication.enabled cache out of sync]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com
description = using the Supportability API https://log02.oss.mykronos.com/en-US/app/koogle/supportability_apis?form.search_service=UDMSupportAPICmd \ 
- Setect Service: UDMSupportAPICmd \
- Action: UpdateTenantPropertyValue \
-(put) /rest/v1/support/tenant/property/set \
- Reset the value of key : "tnt.device.communication.enabled" and "tnt.host.communication.enabled" by setting it to false and back to true.
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = schema_name
alert.suppress.period = 120m
search = |multisearch  [ search index=*udm*  host=*prd* NOT tenant=*UDMSYS* level=ERROR  "tnt.*.communication.enabled is set to false" sourcetype="udm:app"] [ search index=*udm* host=*prd* NOT tenant=*UDMSYS* "*Enable device communication for tenant*"] | eval fields=split(_raw," ")  | eval count=mvcount(fields) | eval host_fields = split(host, "-") | eval prd_name = upper(mvindex(host_fields, 1)) | dedup prd_name tenant | table prd_name tenant scope groupName schema_name 

# Created on 10/24/24 to be sent internally to UDM Engineers for monitoring 
[[Alert]: DimCritical : P1 : UDM : NullPointerException found in UDM app logs]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = engdcsudmalerts@ukg.com
description = UDM-NullPointerException found in udm-app logs Alert SOP: Check Stack trace and investigate. Create a jira ticket for UDM Engineering.
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*wfd-udm-app NullPointerException NOT  ("problem evaluating script: javax.script.ScriptException: java.lang.NullPointerException" AND *org.activiti.engine.ActivitiException*) NOT ("problem evaluating script: javax.script.ScriptException: java.lang.NullPointerException" AND *WFL*) | eval fields=split(_raw," ")  | eval count=mvcount(fields) | eval host_fields = split(host, "-") | eval prd_name = upper(mvindex(host_fields, 1))| dedup trxid |  stats count by tenant prd_name

#REQ0099309 : Change Query
[[Alert] : DimCritical : P1 : UDM : Avg time to successfully upload to  WFM Exceeded]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,ENGDCSUDMalerts@ukg.com
description = Check if WFM is accessible. Check status of transactions in View Transactions in device dashboard (for effected devices). Verify if punches are still pending. If yes, check UDM & WFM logs for errors. Alert SOP : https://engconf.int.kronos.com/display/DMKB/SOP+-+Punch+Average+processing+time+avg_processing_time
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = schema_name
alert.suppress.period = 120m
search = index="koogle-udm-monitoring" metric=avg_processing_time_system value >=7200 | table scope groupName schema_name value

# Misconfiguration- Attestation Form id containing a space 
# Created on 10/04/24 to be sent internally to could and UDM Engineers on pagerduty 
[[Alert]: DimCritical : P1 : UDM : Misconfiguration- Attestation Form id containing a space]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,engdcsudmalerts@ukg.com,R02HSGMTC659V9ZS667UG8M781V7638D@ukg.pagerduty.com
description = Misconfiguration- Attestation Form id containing a space. Alert SOP: The issue can be fixed by removing the space from the Attestation form id.
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index="*udm*" "doError" INFO.queryString="*&selectedId=* *&*" | table _time host tenant INFO.queryString

#SelfService : Create Alert for 200 response code for offlinesubmit without response body -MayaElkhoury 02/06/2025
[[Alert] : DimCritical : P1 : UDM : 200 response code for offlinesubmit without response body]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.cust_prd$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.cust_prd$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com, R026EOE1GUW89HXBISWUZKGKB00G38ME@ukg.pagerduty.com
description = https://engconf.int.kronos.com/display/DMKB/SOP+-+%5BAlert%5D+%3A+DimCritical+%3A+P1+%3A+UDM+%3A+200+response+code+for+offlinesubmit+without+response+body
dispatch.earliest_time = -1h@h
dispatch.latest_time = @m
cron_schedule = 0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = cust_prd
alert.suppress.period = 120m
search = index=*udm-nginx*  "HTTP\/1.1\" 200 0" "page=offlinesubmit" | search response_code=200 | eval fields=split(_raw," ") | eval count=mvcount(fields) | eval host_fields = split(host, "-") | eval cust = mvindex(host_fields, 0) | rex field=_raw "tenantId=(?<tenant>\w+)" | eval prd_name = mvindex(host_fields, 1) | eval cust_prd= (cust + "-" + prd_name) | stats count by cust_prd tenant response_code 

#SelfService : Create Alert for 400 errors when 4500 devices are disabled -MayaElkhoury 02/06/2025
[[Alert] : DimCritical : P1 : UDM : 400 errors casued by Device 4500 communications is not supported]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.cust_prd$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.cust_prd$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com, R026EOE1GUW89HXBISWUZKGKB00G38ME@ukg.pagerduty.com
description = https://engconf.int.kronos.com/display/DMKB/SOP+-+%5BAlert%5D+%3A+DimCritical+%3A+P1+%3A+UDM+%3A+400+errors+casued+by+Device+4500+communications+is+not+supported
dispatch.earliest_time = -1h@h
dispatch.latest_time = @m
cron_schedule = 0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = cust_prd
alert.suppress.period = 120m
search = index="*udm-nginx" | search response_code=400 | eval fields=split(_raw," ") | eval count=mvcount(fields) | eval host_fields = split(host, "-") | eval cust = mvindex(host_fields, 0) | eval prd_name = mvindex(host_fields, 1) | eval cust_prd= (cust + "-" + prd_name) | rex field=_raw "tenantId=(?<tenantName>\w+)"  | eval tid1 = if(http_kronos_tid="-",null(),http_kronos_tid) | eval tid2 = if(sent_kronos_tid="-",null(),sent_kronos_tid) | eval tid3 = if(upstream_http_kronos_tid="-",null(),upstream_http_kronos_tid) | eval trxid=coalesce(tid1,tid2,tid3) | join trxid max=0 [search index=*-udm-app* | search level=WARN | search msg="Device 4500 communications is not supported." ] | stats count by cust_prd tenantName uri_path response_code

#SelfService : Duplicate Smart View not downloaded because there is already a smart view with the same name -MayaElkhoury 02-19-2025
[[Alert] : DimCritical : P2 : UDM : Duplicate Smart View not downloaded because there is already a smart view with the same name]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.cust_prd$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.cust_prd$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com
description = https://engconf.int.kronos.com/display/DMKB/SOP+-+%5BAlert%5D+%3A+DimCritical+%3A+P2+%3A+Duplicate+Smart+View+not+downloaded+because+there+is+already+a+smart+view+with+the+same+name
dispatch.earliest_time = -1h@h
dispatch.latest_time = @m
cron_schedule = 0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = cust_prd
alert.suppress.period = 120m
search = index=*udm-app*  sourcetype="udm:app" ERROR "com.kronos.udm.database.kronos.KrSmartViewDbHandler: Duplicate Smart View not downloaded because there is already a smart view with the same name and different type in the database" | eval fields=split(_raw," ") | eval count=mvcount(fields) | eval host_fields = split(host, "-") | eval cust = mvindex(host_fields, 0) | rex field=_raw "tenantId=(?<tenant>\w+)" | eval prd_name = mvindex(host_fields, 1) | eval cust_prd= (cust + "-" + prd_name) | stats count by cust_prd tenant 

#Pat.Bradley 3-5-2025 UDM ENG internal alert to indentify business processes out of sync
[[Alert]: DimNonCritical : P3 : UDM : Attempt to call incorrect versioned business id, businesssProcessId]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.cust_prd$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.cust_prd$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com
description = https://engconf.int.kronos.com/display/DMKB/SOP+-+UDM+-+%5BAlert%5D+%3A++P3+%3A+UDM+%3A+Attempt+to+call+incorrect+versioned+business+id%2C+businesssProcessId
dispatch.earliest_time = -24h@h
dispatch.latest_time = @m
cron_schedule = 0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = cust_prd
alert.suppress.period = 48h
search = index=*udm-app sourcetype="udm:app" "*attempt to call incorrect versioned business id, businesssProcessId=*" | eval prd_name = upper(substr(host,8,5)), cust = upper(substr(host,1,6)) | rex field=msg "businesssProcessId=(?<callingProcess>[^:]+).*versionedBusinessProcessName=(?<missingProcess>[^\"]+)" | eval cust_prd = cust + "-" + prd_name | eval filter = missingProcess + prd_name + tenant | dedup filter | table cust_prd tenant callingProcess missingProcess | sort cust prd_name tenant

# UDM- Uploads failing on Telliris server 
# Created on 10/04/24 to be sent internally to could and UDM Engineers on pagerduty -ME
[[Alert]: DimCritical : P1 : UDM : Uploads failing on Telliris server]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,engdcsudmalerts@ukg.com,R026EOE1GUW89HXBISWUZKGKB00G38ME@ukg.pagerduty.com
description = UDM- upload failures on Telliris server. Alert SOP: https://engconf.int.kronos.com/x/AR6vMQ
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m 
search = index=*udm* host=*prd* /v1/ttip/upload sourcetype="nginx:plus:access" NOT response_code=200 |  stats count(response_code) by API host

[[Alert] : DimCritical : P1 : TMS : Error establishing connection with database]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com, EngineeringServices@ukg.com, vishva.singh@ukg.com, akshit.rawat@ukg.com, ankit.mehra@ukg.com, antima.agrawal@ukg.com, antima.agrawal@ukg.com, kartik.chaudhary@ukg.com, nikhil.b.sharma@ukg.com, nikhil.gupta@ukg.com, pratik.asija@ukg.com, rahul.chauhan@ukg.com, rahul.d.kumar@ukg.com, sandeep.agrrawal@ukg.com, shivani.nayak@ukg.com, shubhi.vashishtha@ukg.com, sourav.gupta@ukg.com, sourav.gupta@ukg.com, vijay.roy@ukg.com
description = SOP link- https://engconf.int.kronos.com/display/FT/SOP+-+For+TMS+PPAS+Connectivity+issue
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 25
alert.suppress.fields = host
alert.suppress.period = 120m
search = index="*-prd-wfd-tms-app" sourcetype="tms:app" "*DeepHealthcheck error : Error establishing connection with database*" |table _time msg _raw

[[Alert] : DimCritical : P1 : RabbitMQ : Messaging Startup service failure]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = SOP link-   https://engconf.int.kronos.com/display/FAR/RabbitMQ+Alerts+and+SOP
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*-wfd-wfm-app" level="ERROR" msg="*Error creating bean with name*MessagingStartupService*" | table _time host _raw

[[Alert] : DimCritical : P1 : RabbitMQ : Vhost corruption missing binding]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,wfdmessagingteam@ukg.com
description = SOP link-  https://engconf.int.kronos.com/display/FAR/RabbitMQ+Alerts+and+SOP
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search =   index="*-wfd-wfm-app" "level":"ERROR" "MessagingResiliencyHandler no binding" | table _time host _raw

[[Alert] : DimCritical : P1 : TMS : java.lang.OutOfMemoryError event found]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, EngFalconNoidaTenantManagement@ukg.com, CloudTMOTeam@ukg.com, EngineeringServices@ukg.com, vishva.singh@ukg.com, akshit.rawat@ukg.com, ankit.mehra@ukg.com, antima.agrawal@ukg.com, antima.agrawal@ukg.com, kartik.chaudhary@ukg.com, nikhil.b.sharma@ukg.com, nikhil.gupta@ukg.com, pratik.asija@ukg.com, rahul.chauhan@ukg.com, rahul.d.kumar@ukg.com, sandeep.agrrawal@ukg.com, shivani.nayak@ukg.com, shubhi.vashishtha@ukg.com, sourav.gupta@ukg.com, sourav.gupta@ukg.com, vijay.roy@ukg.com
description = SOP link- https://engconf.int.kronos.com/display/FT/SOP+-+For+TMS+Out+Of+Memory+Issue
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search =  index="*wfd-tms-tomcat" source="/data/*/catalina.out"  "java.lang.OutOfMemoryError" | table _time, host, _raw

#REQ0074971
#REQ0096268 : Change search query
[[Alert] : DimCritical : P1 : HCA : HealthCheck Response code Not 200]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = SOP link- https://engconf.int.kronos.com/display/WHA/HCAService+SOP
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search =  index=*wfd-hca-nginx sourcetype="nginx:plus:access" /hcaservice/restcall/v1/platform/healthCheck response_code!=200 | rex field=source "\/\w+\/\w+\/\w+\/\w+\/(?<podID>[^\/]+)\/\w+\/.+\/(?<volumeName>[^\/]+)\/(?<nameSpace>[^\/]+)\/(?<host>[^\/]+)\/.+"  | stats  count by host response_code  | where  count > 200 | rename host as resourceName | eval msg="/hcaservice/restcall/v1/platform/healthCheck response_code!=200"

#REQ0080589 
[[Alert] : DimCritical : P1 : Reporting App : Java Socket Exception]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Restart affected node - Refer to "Start/Stop Reporting Application" from https://engconf.int.kronos.com/pages/viewpage.action?pageId=204134938
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = 0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-rpt-app" source="/data/InformationHub/logs/ihub*" "WARNING: Error process the request: java.net.SocketException: Connection reset" | stats count by host | eval msg="WARNING: Error process the request: java.net.SocketException: Connection reset"| where count>=5 |table host msg count

# Pre-auth RCE in ForgeRock OpenAM (CVE-2021-35464)
[[Alert] : DimCritical : P1 : OpenAM : Zero-day vulnerability (CVE-2021-35464)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = wfdsecurityarchitects@ukg.com,eric.berg@ukg.com,sandeep.bansal@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Zero-day vulnerability CVE-2021-35464 detected!
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*oam*" source=*access* ccversion AND jato.pageSession

#REQ0085527
#REQ0087211 : Move alert from Test to Production
[[Alert] : DimCritical : P1 : Redis : Memory Fragmentation Ratio and other breaching Condition1 SOP]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = This is a team level alert, For Redis, please follow steps mentioned in https://engconf.int.kronos.com/display/FAR/Redis+SOPs+and+Alerts
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=koogle-monitoring source=caching-metrics |eval host=split(host, ".") | eval host=mvindex(host, 0) | eval used_memory_rss_value = used_memory_rss | eval total_system_memory_value = total_system_memory | eval cond1_used_memory_pct =  used_memory_rss_value * 100) / total_system_memory_value | bin _time span=5m | table _time host used_memory_rss_value mem_fragmentation_ratio total_system_memory_value active_defrag_running cond1_used_memory_pct | where  mem_fragmentation_ratio > 1.5 AND active_defrag_running = 0 AND cond1_used_memory_pct > 10) | stats count by host

#REQ0085528
#REQ0087211 : Move alert from Test to Production
[[Alert] : DimCritical : P1 : Redis : Memory Fragmentation Ratio and other breaching Condition2 SOP]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Memory Fragmentation Ratio and other conditions are breaching Condition2 of SOP, For Redis, please follow steps mentioned in https://engconf.int.kronos.com/display/FAR/Redis+SOPs+and+Alerts
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="koogle-monitoring" source=caching-metrics |eval host=split(host, ".") | eval host=mvindex(host, 0) | eval used_memory_rss_value = used_memory_rss | eval total_system_memory_value = total_system_memory | eval cond2_used_memory_pct = (used_memory_rss_value * 100) / total_system_memory_value | bin _time span=5m | table _time host used_memory_rss_value mem_fragmentation_ratio total_system_memory_value active_defrag_running cond2_used_memory_pct | where (mem_fragmentation_ratio > 1.5 AND active_defrag_running > 0 AND cond2_used_memory_pct > 50) | stats count by host | where count>11

#Change alert name from Test To Critical
# REQ0109633 : Change Search Query
[[Alert] : DimCritical : P1 : TRT : TRT AMAgent Build Redirect URL Errors]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP to this alert: https://engconf.int.kronos.com/display/FT/SOP+for+unable+to+build+redirect+URL+errors+on+TR.
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index=*-wfd-trt-amagent sourcetype="tenantrouter:amagent"  "unable to build redirect URL" | stats count by host | where count > 5


# REQ0112173 : HCA HealthCheck Alert
[[Alert] : DimCritical : P1 : HCA : BGP HealthCheck Response code Not 200]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.resourceName$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.resourceName$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = https://engconf.int.kronos.com/display/WHA/HCA+Kubernetes+Pod+Terminate+SOP
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = resourceName
alert.suppress.period = 60m
search = index=*wfd-hca-nginx sourcetype="nginx:plus:access" /hcaservice/restcall/v1/hca/bgp/healthCheck response_code!=200 | rex field=source "\/\w+\/\w+\/\w+\/\w+\/(?<podID>[^\/]+)\/\w+\/.+\/(?<volumeName>[^\/]+)\/(?<nameSpace>[^\/]+)\/(?<host>[^\/]+)\/.+"  | stats  count by host response_code  | where  count > 200 | rename host as resourceName | eval msg="/hcaservice/restcall/v1/hca/bgp/healthCheck response_code!=200"

# REQ0114332, REQ0114750 :  Redis : READONLY You can't write against a read only replica 
[[Alert] : DimCritical : P1 : Redis : READONLY You can't write against a read only replica]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description = https://engconf.int.kronos.com/display/FAR/Standard+Operating+Procedure+%28SOP%29+Redis+Read-Only+Replica
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = 
alert.suppress.period = 10m
search = index="*wfd-wfm-app" "READONLY You can't write against a read only replica" | stats count by host | eval msg="READONLY You can't write against a read only replica"

#REQ0116994 : Move from Test Alert to Prod
[[Alert] : DimCritical : P1 : RPT : Insufficient memory to execute this report]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.hostName$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.hostName$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = Reporting outOfMemory issue. Take logs of entire BIRT Report Engine and Rolling restart of all Reporting App nodes in that environment (e.g. complete cust01-prd01).\
Reporting outOfMemory issue, SOP : https://engconf.int.kronos.com/x/iXR4Gg
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = hostName
alert.suppress.period = 60m
search = index="*rpt-app" source = "/data/InformationHub/logs/jsrvrihub*" "There is insufficient memory to execute this report" | stats count by source | where count>=5 | eval msg="There is insufficient memory to execute this report" | eval processId =substr(source,37 ,len(mvindex(split(lower(substr(source,37)),"."),0))) | eval hostName =substr(source,len(mvindex(split(lower(source),"-"),0)) +2,len(mvindex(split(lower(source),"."),0))+1) | table msg, count, hostName, processId

#REQ0128116 - UMS Alerts
[[Alert] : DimCritical : P1 : UMS : Using Fallback Credentials]
action.email = 1
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP Link: https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FT&title=SOP+DS7+%7C++Create+Cusom+Admin+Users
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*ums*" "ALERT!! Using Fallback Credentials" | stats count by msg host

#REQ0153916
[[Alert] : DimCritical : P1 : Process Check Failed : KPI DB : Cassandra]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com
description = SOP: https://engconf.int.kronos.com/display/FT/Cassandra+Node+Recovery#CassandraNodeRecovery-UseCase:Serviceisdown,Nodeisup
dispatch.earliest_time = -5m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*-infra"  (tag=*_kpi_db*) (tag=process_splunkd OR tag=process_kpi_cassandra) host!=*-mgt-* |stats count(eval(match(_raw,"splunkd"))) as count_splunkd count(eval(match(_raw,"cassandra"))) as count_kpi_cassandra by host|stats sum(count_splunkd) as count_splunkd sum(count_kpi_cassandra) as count_kpi_cassandra by host|search count_splunkd>=5 AND (count_kpi_cassandra=0)

#OBS-1207
#CFG 
[[Alert] : DIMCritical : P1 : ODJ : Replication issue in OpenDJ pod (CFG,CTS,USR)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com,IAMDimNoidaCore@ukg.com
description = Replication issue in OpenDJ Pod. Kindly refer the SOP to resolve the issue in repsective pods. User SOP:- https://engconf.int.kronos.com/x/eXoiKg , CFG SOP:- https://engconf.int.kronos.com/x/7JOkK , CTS SOP:- https://engconf.int.kronos.com/x/9hqQJw. Kindly connect with engineering team IAMDimNoidaCore@ukg.com for any issues.
dispatch.earliest_time = -20m@m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*odj*" |search "*The replica will no longer receive replicated changes and must be re-initialized*" | eval namespace=mvindex(split(source,"/"),9) |eval pod=mvindex(split(source,"/"),10)|stats count by namespace,pod

[[Alert] : DIM Critical : P1: IDPDJ : Alert for Bad generation Id comes in  IDPDJ]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com,IAMDimNoidaCore@ukg.com
description = SOP:- https://engconf.int.kronos.com/x/_EqFKw
dispatch.earliest_time = -20m@m
dispatch.latest_time = @m
cron_schedule = */1 * * * *
relation = greater than
quantity = 0
alert.suppress.period = 60m
search = index=*idj* sourcetype="opendj:replication" "msg=The changelog no longer contains changes for domain" | stats count by host

#OBS-1207

#DIM-643965
#Added DCUS projects as per FS-122031

[[Alert] : DimCritical : P2 : Ihub : Availability Breach for Extension DB]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.AvailabilityBreached$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.AvailabilityBreached$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = cloud.dbas@ukg.com
action.email.cc = engfalconihubextnoida@ukg.com
description = 
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AvailabilityBreached
alert.suppress.period = 60m
search = index="cus*-prd-wfd-hub-synthetichck" source="projects/gcp-cust01/subscriptions/*-prd-hubsynthetichck-sub" OR source="projects/dim-cus21a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus11a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus14a-5eff/subscriptions/dcus*-prd-hubsynthetichck-sub" sourcetype="google:gcp:*" | spath input=data.jsonPayload.message| search "data.jsonPayload.message"="*queryIhubMonitoringExtensionDB*" | rex field=_raw "atomCloudURL.*\\\"http\:\/\/(?<CloudURL>[^\/]+)"| eval Success = if(statusCode=200,1,0)| stats count as TotalSubmissions, sum(Success) as SuccessfulSubmissions by CloudURL| eval AvailabilitySLI(in%)=(SuccessfulSubmissions/TotalSubmissions)*100| eval AvailabilityBreached = "AvailabilityBreach for Extension DB on".+" ".+CloudURL| table AvailabilityBreached TotalSubmissions SuccessfulSubmissions AvailabilitySLI(in%)| search "AvailabilitySLI(in%)" <= 50

#DIM-643965
#Added DCUS projects as per FS-122031

[[Alert] : DimCritical : P2 : Ihub : Availability Breach for SFS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.AvailabilityBreached$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.AvailabilityBreached$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = wfdsfs@ukg.com
action.email.cc = engfalconihubextnoida@ukg.com
description = 
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AvailabilityBreached
alert.suppress.period = 60m
search = index="cus*-prd-wfd-hub-synthetichck" source="projects/gcp-cust01/subscriptions/*-prd-hubsynthetichck-sub" OR source="projects/dim-cus21a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus11a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus14a-5eff/subscriptions/dcus*-prd-hubsynthetichck-sub" sourcetype="google:gcp:*" | spath input=data.jsonPayload.message| search "data.jsonPayload.message"="*queryIhubMonitoringSFS*" | rex field=_raw "atomCloudURL.*\\\"http\:\/\/(?<CloudURL>[^\/]+)"| eval Success = if(statusCode=200,1,0)| stats count as TotalSubmissions, sum(Success) as SuccessfulSubmissions by CloudURL| eval AvailabilitySLI(in%)=(SuccessfulSubmissions/TotalSubmissions)*100| eval AvailabilityBreached = "AvailabilityBreach for SFS on".+" ".+CloudURL| table AvailabilityBreached TotalSubmissions SuccessfulSubmissions AvailabilitySLI(in%)| search "AvailabilitySLI(in%)" <= 50


#DIM-643965
#Added DCUS projects as per FS-122031

[[Alert] : DimCritical : P2 : Ihub : Availability Breach for SFTP]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.AvailabilityBreached$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.AvailabilityBreached$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudIntegrations@ukg.com
action.email.cc = ihubextintmonitoring@ukg.com
description = 
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AvailabilityBreached
alert.suppress.period = 60m
search = index="cus*-prd-wfd-hub-synthetichck" source="projects/gcp-cust01/subscriptions/*-prd-hubsynthetichck-sub" OR source="projects/dim-cus21a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus11a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus14a-5eff/subscriptions/dcus*-prd-hubsynthetichck-sub" sourcetype="google:gcp:*" | spath input=data.jsonPayload.message| search "data.jsonPayload.message"="*queryIhubMonitoringSFTP*" | rex field=_raw "atomCloudURL.*\\\"http\:\/\/(?<CloudURL>[^\/]+)"| eval Success = if(statusCode=200,1,0)| stats count as TotalSubmissions, sum(Success) as SuccessfulSubmissions by CloudURL| eval AvailabilitySLI(in%)=(SuccessfulSubmissions/TotalSubmissions)*100| eval AvailabilityBreached = "AvailabilityBreach for SFTP on".+" ".+CloudURL| table AvailabilityBreached TotalSubmissions SuccessfulSubmissions AvailabilitySLI(in%)| search "AvailabilitySLI(in%)" <= 50


#DIM-643965
#Added DCUS projects as per FS-122031

[[Alert] : DimCritical : P2 : Ihub : Availability Breach for Web Network]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.AvailabilityBreached$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.AvailabilityBreached$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = cloudfalconnetwork@ukg.com
action.email.cc = engfalconihubextnoida@ukg.com
description = 
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = AvailabilityBreached
alert.suppress.period = 60m
search = index="cus*-prd-wfd-hub-synthetichck" source="projects/gcp-cust01/subscriptions/*-prd-hubsynthetichck-sub" OR source="projects/dim-cus21a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus11a/subscriptions/dcus*-prd-hubsynthetichck-sub" OR source="projects/dim-cus14a-5eff/subscriptions/dcus*-prd-hubsynthetichck-sub" sourcetype="google:gcp:*" | spath input=data.jsonPayload.message| search "data.jsonPayload.message"="*queryIhubMonitoringWebProxy*" | rex field=_raw "atomCloudURL.*\\\"http\:\/\/(?<CloudURL>[^\/]+)"| eval Success = if(statusCode=200,1,0)| stats count as TotalSubmissions, sum(Success) as SuccessfulSubmissions by CloudURL| eval AvailabilitySLI(in%)=(SuccessfulSubmissions/TotalSubmissions)*100| eval AvailabilityBreached = "AvailabilityBreach for Web Network on".+" ".+CloudURL| table AvailabilityBreached TotalSubmissions SuccessfulSubmissions AvailabilitySLI(in%)| search "AvailabilitySLI(in%)" <= 50

#DIM-643965


#OBS-1390

[[Alert] : DimCritical : P3 : Redis : Active Jedis object count reached the maximum limit]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = wfdredisserviceteam@ukg.com
description = wfdredisserviceteam@ukg.com
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="cust*-*-wfd-wfm-app" source = /data/logs/wfc/monit*.log "Jedis Pool Status" host=*** , host!="*hcm*"|eval host=split(host, "-") | eval host=mvindex(host, 3)| rex "numWaiters\s*:\s*(?<numWaiters>\d+)" | search numWaiters>1| stats max(numWaiters) as numWaiters by host

#OBS-1389

[[Alert] : DimCritical : P3 : Redis : Active Kyro object count reached the maximum limit]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
action.pagerduty = 1
action.pagerduty.param.custom_details = {"Description" : "$description$"}
action.pagerduty.param.integration_url = https://events.pagerduty.com/x-ere/R0124RJ38XNR3C3ZSF7M2HH9S1FTTMOR
action.pagerduty.param.integration_url_override = https://events.pagerduty.com/integration/aca687120a6c410dd07867288a5dca56/enqueue
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = wfdredisserviceteam@ukg.com
description = wfdredisserviceteam@ukg.com
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="cust*-*-wfd-wfm-app" source = /data/logs/wfc/monit*.log "Object Serializer Pool Status" host=*** , host!="*hcm*"|eval host=split(host, "-") | eval host=mvindex(host, 3)| rex "numWaiters\s*:\s*(?<numWaiters>\d+)" | search numWaiters>1| stats max(numWaiters) as numWaiters by host

#OBS-1395
[[Alert] : DimCritical : P3 : Redis :Errors in last 24 hours in Caching]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
action.email.csv.filename=caching_error_results.csv
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*cus*-*-wfd-wfm-app" (logger="com.kronos.cache*" OR logger="com.kronos.container.redismonitor*" OR logger="com.kronos.object.serializer" OR logger="*redis*") level="ERROR" host=***, host!="*hcm*" | stats count(logger) as errors  by logger,msg,host | sort -errors | outputcsv caching_error_results.csv

#OBS-1412

[[Alert] : DimCritical : P3 : Redis :WFM Success-Rate is breached(GET)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*wfd-wfm-app" sourcetype="wfm:healthcheck:monitoringapi" host=*** host!="*hcm*" "Total Success Rate per cache in last 10 minutes are" | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "GET=SuccessRateCounter\s\[(?<value>(.*?))\]" | eval token=split(value,",") | eval success= split(mvindex(token,0), "=") | eval scounter = mvindex(success,1) | eval total= split(mvindex(token,2), "=") | eval tcounter = mvindex(total,1) | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval perc = (scounter*100)/tcounter | search perc<99 |stats avg(perc) by host limit=20



[[Alert] : DimCritical : P3 : Redis :WFM Success-Rate is breached(PUT)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*wfd-wfm-app" sourcetype="wfm:healthcheck:monitoringapi" host=*** host!="*hcm*" "Total Success Rate per cache in last 10 minutes are" | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "PUT=SuccessRateCounter\s\[(?<value>(.*?))\]" | eval token=split(value,",") | eval success= split(mvindex(token,0), "=") | eval scounter = mvindex(success,1) | eval total= split(mvindex(token,2), "=") | eval tcounter = mvindex(total,1) | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval perc = (scounter*100)/tcounter |search perc<99 | stats avg(perc) by host limit=20




[[Alert] : DimCritical : P3 : Redis :WFM Success-Rate is breached(EVICT)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*wfd-wfm-app" sourcetype="wfm:healthcheck:monitoringapi" host=*** host!="*hcm*" "Total Success Rate per cache in last 10 minutes are" | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "EVICT=SuccessRateCounter\s\[(?<value>(.*?))\]" | eval token=split(value,",") | eval success= split(mvindex(token,0), "=") | eval scounter = mvindex(success,1) | eval total= split(mvindex(token,2), "=") | eval tcounter = mvindex(total,1) | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval perc = (scounter*100)/tcounter |search perc<99 | stats avg(perc) by host limit=20



#OBS-1413

[[Alert] : DimCritical : P3 : Redis :SDM Success-Rate is breached(GET)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*-wfd-sdm-app" sourcetype="sdm:app" host!="*hcm*" host=*** "Eviction successful for cache" OR "Batch Size Stats in last 10 minutes" OR "Total Success Rate per cache in last 10 minutes are" | fields _time host msg _raw | where msg like "%Total Success Rate per cache in last 10 minutes are%"       | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "GET=SuccessRateCounter\s\[(?<value>(.*?))\]"       | eval token=split(value,",")       | eval success= split(mvindex(token,0), "=")       | eval scounter = mvindex(success,1)       | eval total= split(mvindex(token,2), "=")       | eval tcounter = mvindex(total,1)       | eval host=split(host, ".") | eval host=mvindex(host, 0)       | eval perc = (scounter*100)/tcounter       | search perc<99 | stats avg(perc) by host limit=20



[[Alert] : DimCritical : P3 : Redis :SDM Success-Rate is breached(PUT)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search =index="*-wfd-sdm-app" sourcetype="sdm:app" host!="*hcm*" host=*** "Eviction successful for cache" OR "Batch Size Stats in last 10 minutes" OR "Total Success Rate per cache in last 10 minutes are" | fields _time host msg _raw | where msg like "%Total Success Rate per cache in last 10 minutes are%" | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "PUT=SuccessRateCounter\s\[(?<value>(.*?))\]" | eval token=split(value,",")| eval success= split(mvindex(token,0), "=") | eval scounter = mvindex(success,1)| eval total= split(mvindex(token,2), "=") | eval tcounter = mvindex(total,1)| eval host=split(host, ".") | eval host=mvindex(host, 0)| eval perc = (scounter*100)/tcounter | search perc<99 | stats avg(perc) by host limit=20


[[Alert] : DimCritical : P3 : Redis :SDM Success-Rate is breached(EVICT)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*-wfd-sdm-app" sourcetype="sdm:app" host!="*hcm*" host=*** "Eviction successful for cache" OR "Batch Size Stats in last 10 minutes" OR "Total Success Rate per cache in last 10 minutes are" | fields _time host msg _raw | where msg like "%Total Success Rate per cache in last 10 minutes are%" | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "EVICT=SuccessRateCounter\s\[(?<value>(.*?))\]" | eval token=split(value,",") | eval success= split(mvindex(token,0), "=") | eval scounter = mvindex(success,1) | eval total= split(mvindex(token,2), "=") | eval tcounter = mvindex(total,1) | eval host=split(host, ".") | eval host=mvindex(host, 0)| eval perc = (scounter*100)/tcounter | search perc<99 | stats avg(perc) by host limit=20



#OBS-1414

[[Alert] : DimCritical : P3 : Redis :HCA Success-Rate is breached(GET)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*-wfd-hca-app" sourcetype="hca:app" host!="*hcm*" host=*** "Eviction successful for cache" OR "Batch Size Stats in last 10 minutes" OR "Total Success Rate per cache in last 10 minutes are" | fields _time host msg | search "Total Success Rate per cache in last 10 minutes are"       | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "GET=SuccessRateCounter\s\[(?<value>(.*?))\]"       | eval token=split(value,",")       | eval success= split(mvindex(token,0), "=")       | eval scounter = mvindex(success,1)       | eval total= split(mvindex(token,2), "=")       | eval tcounter = mvindex(total,1)       | eval host=split(host, ".") | eval host=mvindex(host, 0)       | eval perc = (scounter*100)/tcounter      | search perc<99 | stats avg(perc) by host limit=20




[[Alert] : DimCritical : P3 : Redis :HCA Success-Rate is breached(PUT)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search =index="*-wfd-hca-app" sourcetype="hca:app" host!="*hcm*" host=*** "Eviction successful for cache" OR "Batch Size Stats in last 10 minutes" OR "Total Success Rate per cache in last 10 minutes are" | fields _time host msg | search "Total Success Rate per cache in last 10 minutes are"       | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "PUT=SuccessRateCounter\s\[(?<value>(.*?))\]"       | eval token=split(value,",")       | eval success= split(mvindex(token,0), "=")       | eval scounter = mvindex(success,1)       | eval total= split(mvindex(token,2), "=")       | eval tcounter = mvindex(total,1)       | eval host=split(host, ".") | eval host=mvindex(host, 0)       | eval perc = (scounter*100)/tcounter       | search perc<99 | stats avg(perc) by host limit=20



#OBS-1414

[[Alert] : DimCritical : P3 : Redis :HCA Success-Rate is breached(EVICT)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*-wfd-hca-app" sourcetype="hca:app" host!="*hcm*" host=*** "Eviction successful for cache" OR "Batch Size Stats in last 10 minutes" OR "Total Success Rate per cache in last 10 minutes are" | fields _time host msg | where msg like "%Total Success Rate per cache in last 10 minutes are%"       | rex field=msg "TOTAL\=\{(?<TOTAL>(.*?))\}" | rex field=TOTAL "EVICT=SuccessRateCounter\s\[(?<value>(.*?))\]"       | eval token=split(value,",")       | eval success= split(mvindex(token,0), "=")       | eval scounter = mvindex(success,1)       | eval total= split(mvindex(token,2), "=")       | eval tcounter = mvindex(total,1)       | eval host=split(host, ".") | eval host=mvindex(host, 0)       | eval perc = (scounter*100)/tcounter     | search perc<99 | stats avg(perc) by host limit=20

#1409


[[Alert] : DimCritical : P3 : Redis :UP Time is breached]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index="*wfd-wfm-app" sourcetype="wfm:healthcheck:monitoringapi" host=*** host!="*hcm*" "Total entries present in the metricMap for metric : RedisUptimeMetric" |rex field=_raw max_match=10 "value=(?<value>\-?\d+)\]" |stats sum(value) as sum_val ,count(value) as count_val by _time host | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval perc = sum_val*100/count_val | search perc<99 | stats avg(perc) by host limit=20


#OBS-1410
#PS-420134
[[Alert] : DimCritical : P2 : Redis :Latency is breached(GET)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description =  SOP Link: https://engconf.int.kronos.com/pages/viewpage.action?pageId=888505671
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*wfd-wfm-app" sourcetype="wfm:healthcheck:monitoringapi" host=*** host!="*hcm*" "Total entries present in the metricMap for metric : RedisGetKeysResponseTime" | rex field=msg max_match=30 "value=(?<value>\-?\d+)\]" | eval host=split(host, ".") | eval host=mvindex(host, 0) | search value>100 | stats max(value) by host limit=20

#PS-420134
[[Alert] : DimCritical : P2 : Redis :Latency is breached(PUT)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description =  SOP Link: https://engconf.int.kronos.com/pages/viewpage.action?pageId=888505671
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 20m
search = index="*wfd-wfm-app" sourcetype="wfm:healthcheck:monitoringapi" host=*** host!="*hcm*" "Total entries present in the metricMap for metric : RedisPutKeysResponseTime" | rex field=msg max_match=1000 "value=(?<value>\-?\d+)\]" | eval host=split(host, ".") | eval host=mvindex(host, 0) | search value>100 | stats max(value) by host limit=20

############################
## GCP instance alerts
#############################

#REQ0097110 - Update RabbitMQ SOP (mbergeron)
#REQ0114572 - Update HCA SOP
[[Alert] : DimCritical : P1 : GCP Instance : GCP Instance crashed, NOT restarted]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.hostname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.hostname$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R0252059SLKY2E66Z6JX4SHYZ1QWYPHY@ukg.pagerduty.com,R02HSGMTC659V9ZS667UG8M781V7638D@ukg.pagerduty.com
description = The alert is generated if GCP recorded a 'hostError' indicating that an instance has crashed unexpectedly and was no immediately followed by an 'automaticRestart' message. Check the GCP console and/or Rightscale for status and restart instance as necessary. \
 - For Redis: https://engconf.int.kronos.com/display/FAR/Redis+SOPs+and+Alerts#RedisSOPsandAlerts-[Alert]:DimCritical:P2:GCPInstance:GCPInstanceCrashed,NOTRestarted \
 - For RabbitMQ: https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FT&title=HA+Recovery+Runbook+%3A+RabbitMQ \
 - For integration service - https://engconf.int.kronos.com/display/Falcon/GCP+Instance%3A+GCP+Instance+crashed%2C+NOT+restarted \
 - For PES :   https://engconf.int.kronos.com/pages/viewpage.action?pageId=391441397 \
 - For HCA : https://engconf.int.kronos.com/display/WHA/HCA+Kubernetes+DMH+Recovery+SOP \
 - For Cassandra : https://engconf.int.kronos.com/display/FT/Cassandra+Node+Recovery \
 - For Orchestration Service : https://engconf.int.kronos.com/pages/viewpage.action?pageId=398196500\
 - For OpenAM : https://engconf.int.kronos.com/display/FT/SOP+%3A+OpenAM+GCP+Instance+crashed\
 - For Tenant Router :  https://engconf.int.kronos.com/display/FT/SOP+%3A+TR+GCP+Instance+Crashed \
 - For UMS : https://engconf.int.kronos.com/display/FT/SOP+%3A+UMS+GCP+Instance+Crashed \
 - For API GTW : https://engconf.int.kronos.com/display/FT/HA+Recovery+Runbook+%3A+API+Gateway \
 - For PPAS : https://engconf.int.kronos.com/display/FT/HA+Recovery+Runbook+%3A+PPAS
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = hostname
alert.suppress.period = 60m
search = index=*-instance-systemEvents hostError OR automaticRestart | rex field=data.protoPayload.resourceName "(\/instances\/)(?<hostname>.*)" | transaction keepevicted=t startswith=hostError endswith=automaticRestart hostname | where duration > 120 OR closed_txn=0 | table _time hostname data.protoPayload.status.message data.protoPayload.methodName


[[Alert] : DimCritical : P3 : Redis : Errors in last 24 hours on Redis]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com 
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule =  0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m
search = index="*dmc*app" sourcetype=* (
                      "Connection with replica * lost" OR
                      "Unable to * resync with replica" OR
                      "Network timeout" OR
                      "High latency detected" OR
                      "Replication lag" OR
                      "Master link down" OR
                      "Disk space issue" OR
                      "Out of memory" OR
                      "Maxmemory reached" OR
                      "Configuration error" OR
                      "Slave is not connected to master" OR
                      "Replication delay" OR
                      "Command execution failed" OR
                      "Client closed connection" OR
                      "Failed to save the DB" OR
                      "AOF rewrite error" OR
                      "High CPU usage" OR
                      "*sdown*" OR
                      "Connection refused"
                  )
                  | sort _time
                  | eval scope_split = split(host, "-")
                  | eval scope = mvjoin(mvindex(scope_split, 0, 3), "-")
                  | eval issue = case(
                      like(_raw, "%Connection with replica%lost%"), "Connection lost with replica",
                      like(_raw, "%Unable to % resync with replica%"), "Unable to resync with replica",
                      like(_raw, "%Network timeout%"), "Network timeout",
                      like(_raw, "%High latency detected%"), "High latency detected",
                      like(_raw, "%Replication lag%"), "Replication lag detected",
                      like(_raw, "%Master link down%"), "Master link down",
                      like(_raw, "%Disk space issue%"), "Disk space issue",
                      like(_raw, "%Out of memory%"), "Out of memory",
                      like(_raw, "%Maxmemory reached%"), "Maxmemory reached",
                      like(_raw, "%Configuration error%"), "Configuration error",
                      like(_raw, "%Slave is not connected to master%"), "Slave not connected to master",
                      like(_raw, "%Replication delay%"), "Replication delay",
                      like(_raw, "%Command execution failed%"), "Command execution failed",
                      like(_raw, "%Client closed connection%"), "Client closed connection",
                      like(_raw, "%Failed to save the DB%"), "Failed to save the DB",
                      like(_raw, "%AOF rewrite error%"), "AOF rewrite error",
                      like(_raw, "%High CPU usage%"), "High CPU usage",
                      like(_raw, "%Connection refused%"), "Connection refused",
                      true(), "unknown"
                  )
                  | where issue != "unknown"
                  | table _time, scope, issue, _raw

#SelfService : Create Alert for Missing Default Position
[[Alert] : DimCritical : P2 : Timekeeping : Person Position Data Corruption]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
\
Description : $description$\
action.email.sendresults = 1
action.email.subject.alert = $name$ 
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.csv.filename=PositionDataCorruptions.csv
action.email.sendcsv=1
action.email.to = naveen.goyal@ukg.com,yashmay.nigam@ukg.com,shivam.pathak@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */14 * * *
relation = greater than
quantity = 0
alert.suppress.period =
search = | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort - stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack ] query="select pe.personid from person pe left join position p on p.person_id = pe.personid left join effpositionacsasgn eff on eff.position_id = p.position_id left join position_order_date pod on pod.person_id = pe.personid left join position_order_date_mm podm on podm.position_id = p.position_id where pe.personid > 0 and (p.position_id is null or eff.eff_position_acs_asgn_id is null or pod.position_order_date_id is null or podm.position_order_date_id is null)" | append [ | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort + stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack] query="select pe.personid from person pe left join position p on p.person_id = pe.personid left join effpositionacsasgn eff on eff.position_id = p.position_id left join position_order_date pod on pod.person_id = pe.personid left join position_order_date_mm podm on podm.position_id = p.position_id where pe.personid > 0 and (p.position_id is null or eff.eff_position_acs_asgn_id is null or pod.position_order_date_id is null or podm.position_order_date_id is null)"] | dedup schema_name personid | where isnull(error) or len(error) < 1 | where len(personid) > 0 | stats values(*) as * by schema_name

#SelfService : Create Alert for Adjustment Rule with no forever version
[[Alert] : DimCritical : P2 : Timekeeping : Adjustment Rule Data corruption (With no forever version)]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
\
Description : $description$\ 
action.email.sendresults = 1
action.email.subject.alert = $name$ 
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.csv.filename=AdjRuleNoForeverVersion.csv
action.email.sendcsv=1
action.email.to = naveen.goyal@ukg.com,yashmay.nigam@ukg.com,shivam.pathak@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */14 * * *
relation = greater than
quantity = 0
alert.suppress.period = 60m
search = | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort - stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack ] query="SELECT extprocessornm FROM extprocessor e WHERE e.processorclasstxt like '%AdjustmentRule%' and EXISTS (SELECT 1 FROM extprocdata d WHERE d.extprocessorId = e.extprocessorId) AND NOT EXISTS (SELECT 1 FROM extprocdata pd WHERE pd.extprocessorId = e.extprocessorId AND pd.expirationdtm = '3000-01-01 00:00:00.000')" | append [ | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort + stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack] query="SELECT extprocessornm FROM extprocessor e WHERE e.processorclasstxt like '%AdjustmentRule%' and EXISTS (SELECT 1 FROM extprocdata d WHERE d.extprocessorId = e.extprocessorId) AND NOT EXISTS (SELECT 1 FROM extprocdata pd WHERE pd.extprocessorId = e.extprocessorId AND pd.expirationdtm = '3000-01-01 00:00:00.000')"] | dedup schema_name extprocessornm | where isnull(error) or len(error) < 1 | where len(extprocessornm) > 0 | stats values(*) as * by schema_name

#SelfService : Create Alert for corrupted Adjustment Rule without any versions
[[Alert] : DimCritical : P2 : Timekeeping : Adjustment Rule Data Corruption - No Version]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
\
Description : $description$\
action.email.sendresults = 1
action.email.subject.alert = $name$ 
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.csv.filename=AdjRuleNoVersion.csv
action.email.sendcsv=1
action.email.to = naveen.goyal@ukg.com,yashmay.nigam@ukg.com,shivam.pathak@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */14 * * *
relation = greater than
quantity = 0
alert.suppress.period =
search = | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort - stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack ] query="select extprocessornm from extprocessor where processorclasstxt like '%AdjustmentRule%' and extprocessorid not in (select extprocessorid from extprocdata)" | append [ | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort + stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack] query="select extprocessornm from extprocessor where processorclasstxt like '%AdjustmentRule%' and extprocessorid not in (select extprocessorid from extprocdata)"] | dedup schema_name extprocessornm | where isnull(error) or len(error) < 1 | where len(extprocessornm) > 0 | stats values(*) as * by schema_name

#SelfService : created Alert 6-6-24 
#08/20/2024 updated Percent SLO' <= 98 to Percent SLO' <= 90 to receive less alerts and
[[Alert] : DimCritical : P1 : UDM : SLI-SLO - Attestation First Request increase in errors]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com
description = Check SLI/SLO for affected PRDs and services for availability. Alert SOP : https://engconf.int.kronos.com/pages/viewpage.action?pageId=754545371
dispatch.earliest_time = -1h@h
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = env
alert.suppress.period = 120m
search = index=*udm-nginx sourcetype=*access* (host="*prd*")  /udm/wdmServices/smartview/dispatch NOT _raw="*offline*" NOT _raw="*exit4500MicroBrowser*"  NOT _raw="*page=default*"  NOT "Device is disabled" NOT "Device needs Grant Access"  NOT ((date_wday=thursday date_hour>=4 date_hour<9) OR (date_wday=friday date_hour>=4 date_hour<9))(_raw="*CustomSmartViews*" OR (_raw="*isAtt=1*" AND _raw="*emid=*"))| eval env=substr(host,8,5)| eval stack=substr(host,0,6)| stats count(eval(like(response_code,"%%%"))) AS total_request count(eval(like(response_code,"5%%") OR like(response_code,"4%%") )) AS error_request by stack, env| eval percent_SLO = round(100-(error_request/total_request*100),2) | eval total_request= tostring(total_request, "commas") | eval total_success = total_request-error_request  | eval getHour = strftime(_time,"%H") | stats values(total_request) as "Total Request", sum(error_request) as "Total Errors", sum(total_success) AS "Total Success", avg(percent_SLO) as "Percent SLO" by stack, env| eval triggered = case(stack="cust01" AND 'Percent SLO' <= 90, 1, stack="cust02" AND 'Percent SLO' <= 90, 1, stack="cust03" AND 'Percent SLO' <= 90, 1, stack="cust04" AND 'Percent SLO' <= 90, 1, stack="dcus11" AND 'Percent SLO' <= 90, 1, stack="dcus14" AND 'Percent SLO' <= 90, 1, stack="dcus21" AND 'Percent SLO' <= 90, 1, true(),0) | where triggered = 1


#SelfService : Create Alert
[[Alert] : DimCritical : P1 : UDM : SLI-SLO - availability ESS smartviews increase in errors]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com
description = Check SLI/SLO for affected PRDs and services for availability. Alert SOP : https://engconf.int.kronos.com/pages/viewpage.action?pageId=758811793
dispatch.earliest_time = -4h@h
dispatch.latest_time = @m
cron_schedule = 1 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = schema_name
alert.suppress.period = 120m
search = index=*udm-nginx sourcetype=*access* (host="*prd*")   /udm/wdmServices/smartview/dispatch NOT _raw="*offline*" NOT _raw="*exit4500MicroBrowser*"  NOT _raw="*page=default*"  NOT "Device is disabled" NOT "Device needs Grant Access" NOT (_raw="*CustomSmartViews*" OR _raw="*isAtt=1*") _raw="*emid=*"  NOT ((date_wday=thursday date_hour>=4 date_hour<9) OR (date_wday=friday date_hour>=4 date_hour<9)) | eval fields=split(_raw," ") | eval count=mvcount(fields) | eval trxid= mvindex(fields,23) | dedup trxid | eval myHour=strftime(_time, "%H") | eval myMinute=strftime(_time, "%M") | where myHour > -1  | eval env = mvindex(split(host, "-"), 1) | stats count(eval(like(response_code,"%%%"))) AS total_request count(eval(like(response_code,"5%%") OR like(response_code,"4%%") )) AS error_request by _time | eval percent_SLO = round(100-(error_request/total_request*100),2) | eval total_request= tostring(total_request, "commas") | eval total_success = total_request-error_request | timechart span=1h sum(total_request) as total_request, sum(error_request) as total_errors, sum(total_success) AS total_success, avg(percent_SLO) as percent_slo, values(myHour) as hour | where (percent_slo < 97 AND total_request > 100) OR (percent_slo < 99.85  AND total_errors > 15 AND total_success < 3)


############################
#OPDK Splunk Alerts
############################

[[Alert] : DimCritical : P2 : Flex Gateway : Tenant based success percentage]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.SuccessPercentageBreached$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.env$ for $result.mod_tenant$
action.email.useNSSubject = 1
action.webhook.param.url = https://kronos.webhook.office.com/webhookb2/19d50091-f22c-4833-b0e1-ab120bbff73c@7b6f35d2-1f98-4e5e-82eb-e78f6ea5a1de/IncomingWebhook/f39c9590033f423686d84cc5f893d3b8/cff49c62-52a0-428b-aaf1-b4204a5c8be4
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = arun.chauhan@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com
description = This is a preventive measure, no action is required on this. API Gateway (OPDK) team will look into it.
dispatch.earliest_time = -45m@m
dispatch.latest_time = @m
cron_schedule = */45 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = mod_tenant,env
alert.suppress.period = 4h
search = index=*-wfd-api-gtw-ilb (host=*gtw*nbs*ilb* OR host=*gtw*app*ilb*) host=*prd* host!=*ftp* sourcetype = "nginx:plus:access" "/api" | eval mod_tenant=split(tenant,"&") | eval mod_tenant=mvindex(mod_tenant, 0) | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-api-gtw") | eval env=mvindex(env, 0) | bin _time span=15m | stats count as total by response_code mod_tenant env _time | stats sum(eval(if(response_code in (200,201,202,203,204,205,206,207,208,226), total, 0))) as 2xx, sum(eval(if(response_code in (500,501,502,503,504,505,506,507,508,509,510,511,598,599),total,0))) as 5xx, sum(eval(if(response_code in (400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,422,423,424,425,426,428,429,431,444,449,450,451,499),total,0))) as 4xx , sum(total) as TotalAPIRequests by mod_tenant env _time | eval Success_percentage = round(('2xx' / TotalAPIRequests) * 100, 2) | search TotalAPIRequests > 1000 AND Success_percentage < 75 | eval SuccessPercentageBreached = "SuccessPercentage Breached on ".+env+" with success % of - ".+Success_percentage+"for ".+mod_tenant | streamstats count as binCount by mod_tenant env | where binCount <= 3 | stats list(Success_percentage) as BreachedValues , list(TotalAPIRequests) as TotalAPIHits,list(2xx) as Total_2XX,list(4xx) as Total_4XX,list(5xx) as Total_5XX by mod_tenant env | eval allBinsBreached = if(mvcount(BreachedValues) == 3, "Yes", "No") | eval SuccessPercentageBreached = if(allBinsBreached="Yes", "SuccessPercentageBreached on " . env . " with success % of - " . mvjoin(BreachedValues, ", ")." for Tenant=".mod_tenant, "") | where allBinsBreached="Yes"


[[Alert] : DimCritical : P2 : Flex Gateway : Environment success percentage]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.SuccessPercentageBreached$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.env$
action.email.useNSSubject = 1
action.webhook.param.url = https://kronos.webhook.office.com/webhookb2/19d50091-f22c-4833-b0e1-ab120bbff73c@7b6f35d2-1f98-4e5e-82eb-e78f6ea5a1de/IncomingWebhook/f39c9590033f423686d84cc5f893d3b8/cff49c62-52a0-428b-aaf1-b4204a5c8be4
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = arun.chauhan@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com
description = This is a preventive measure, no action is required on this. API Gateway (Flex Gateway) team will look into it.
dispatch.earliest_time = -45m@m
dispatch.latest_time = @m
cron_schedule = */45 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = env
alert.suppress.period = 4h
search = index="*-wfd-api-gtw-ilb" (host=*gtw*nbs*ilb* OR host=*gtw*app*ilb*) host!=*ftp* sourcetype = "nginx:plus:access" "/api" | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-api-gtw") | eval env=mvindex(env, 0) | bin _time span=15m | stats count as total by response_code env  _time | stats sum(eval(if(response_code in (200,201,202,203,204,205,206,207,208,226),total,0))) as 2xx, sum(total) as TotalAPIRequests by env _time | eval Percent_2xx = round(('2xx' / TotalAPIRequests) * 100, 4) |  eval SuccessPercentageBreached = "SuccessPercentage Breached on ".+env+" with usage of - ".+Percent_2xx | search  Percent_2xx < 90 AND TotalAPIRequests > 5000 | sort 0 - _time | streamstats count as binCount by env | where binCount <= 3 | stats list(Percent_2xx) as BreachedValues by env | eval allBinsBreached = if(mvcount(BreachedValues) == 3, "Yes", "No") | eval  SuccessPercentageBreached = if(allBinsBreached="Yes", "SuccessPercentageBreached on " . env . " with success % of - " . mvjoin(BreachedValues, ", "), "") | where allBinsBreached="Yes"

[[Alert] : DimCritical : P2 : OPDK : Proxy  Error]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.ProxyErrorBreached$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : $result.ProxyErrorBreached$
action.email.useNSSubject = 1
action.webhook.param.url = https://kronos.webhook.office.com/webhookb2/19d50091-f22c-4833-b0e1-ab120bbff73c@7b6f35d2-1f98-4e5e-82eb-e78f6ea5a1de/IncomingWebhook/f39c9590033f423686d84cc5f893d3b8/cff49c62-52a0-428b-aaf1-b4204a5c8be4
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = arun.chauhan@ukg.com,gufran.ahmed@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com,vinod.verma@ukg.com
description = This is a preventive measure, no action is required on this. API Gateway (OPDK) team will look into it.
dispatch.earliest_time = -45m@m
dispatch.latest_time = @m
cron_schedule = */45 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = ProxyErrorBreached
alert.suppress.period = 45m
search = index=*-wfd-api-gtw-app host=*** sourcetype="apigee:edge:message:processor:system" "Unable to identify proxy for host" NOT "*/v1/servers/self/up*"| eval host=mvindex(split(host, "."), 0) | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-api-gtw")| eval env=mvindex(env, 0)| bin _time span=15m | stats count as total by env _time | search total > 150 | streamstats count as binCount by env | where binCount <= 3  | eval ProxyErrorBreached = "Proxy Error Breached on ".+env+" with total count of - ".+total | stats list(total) as BreachedValues by  env | eval allBinsBreached = if(mvcount(BreachedValues) == 3, "Yes", "No") | eval ProxyErrorBreached = if(allBinsBreached="Yes", "Proxy Error Breached on " . env . "  with total count of  - " . mvjoin(BreachedValues, ", "), "") | where allBinsBreached="Yes"


[[Alert] : DimCritical : P1 : OPDK GCP Instance : GCP Instance crashed, NOT restarted]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.hostname$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.hostname$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = apigee-opdk-on-call-email.1mvclphv@ukg.pagerduty.com,arun.chauhan@ukg.com,gufran.ahmed@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com,vinod.verma@ukg.com,APIGEETeam@ukg.com,ArunTeam@ukg.com,R02HSGMTC659V9ZS667UG8M781V7638D@ukg.pagerduty.com
description = The alert is generated if GCP recorded a 'hostError' indicating that an instance has crashed unexpectedly and was no immediately followed by an 'automaticRestart' message. Check the GCP console and/or Rightscale for status and restart instance as necessary.
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = hostname
alert.suppress.period = 60m
search = index=*-instance-systemEvents hostError OR automaticRestart | rex field=data.protoPayload.resourceName "(\/instances\/)(?<hostname>.*)" | transaction keepevicted=t startswith=hostError endswith=automaticRestart hostname | where duration > 120 OR closed_txn=0 |search hostname="*gtw*" OR hostname="*api*mgt*" | table _time hostname data.protoPayload.status.message data.protoPayload.methodName

[[Alert] : DimCritical : P3 : OPDK : RMP Splunk Log Missing]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.env$ have $result.unique_count$ RMP node logs\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : $result.env$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = arun.chauhan@ukg.com,gufran.ahmed@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com,vinod.verma@ukg.com
description = This is a preventive measure, no action is required on this. API Gateway (OPDK) team will look into it.
dispatch.earliest_time = -2h@h
dispatch.latest_time = @m
cron_schedule = 0 */2 * * *
relation = greater than
quantity = 0
alert.suppress.fields = env
alert.suppress.period = 4h
search = index="*gtw*" host="*gtw*"  sourcetype="apigee:edge:router:kronos" | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-") | eval env=mvindex(env, 0,5)  |  eval env=mvjoin(env, "-")  | stats  dc(host)  as unique_count by env |  where unique_count < 4

[[Alert] : DimCritical : P3 : Flex Gateway : Least Successful APIs]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : $result$ \
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ in $result.Environment$
action.email.sendcsv=1
action.email.csv.filename=api_failure_result.csv
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = arun.chauhan@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com
description = Least Successful API with more than 10,000 calls and Failure percentage above 70% in 24Hrs for each region, accross environment.
dispatch.earliest_time = -24h@h
dispatch.latest_time = @m
cron_schedule = 30 3 * * *
relation = greater than
quantity = 0
alert.suppress.fields = env
alert.suppress.period = 24h
search = index=*-wfd-api-gtw-ilb (host=*gtw*nbs*ilb* OR host=*gtw*app*ilb*) sourcetype = "nginx:plus:access" "/api"  | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-api-gtw") | eval env=mvindex(env, 0) | eval env=split(env, "-") | eval env=mvindex(env, 0) | stats count as total by response_code uri_path env  | stats  sum(eval(if(response_code in (400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,422,423,424,425,426,428,429,431,444,449,450,451,499,500,501,502,503,504,505,506,507,508,509,510,511,598,599),total,0))) as ERR, sum(total) as TotalAPIRequests by uri_path env  | eval Failure_percentage = round(('ERR' / TotalAPIRequests) * 100, 1) | search TotalAPIRequests > 10000 AND  Failure_percentage > 70 |sort  -ERR | head 50    |sort  -Failure_percentage|head 5| stats values(env) as Environment, list(uri_path) as LeastSuccessful_APIs, list(ERR) as Total_ERR, list(TotalAPIRequests) as TotalAPICalls, list(Failure_percentage) as Failure_percentage

[[Alert] : DimCritical : P3 : Flex Gateway : SLI/SLO]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : $result$ \
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$
action.email.sendcsv=1
action.email.csv.filename=sli_slo.csv
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = arun.chauhan@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com
description = This gives the data of SLI/SLO of the gateway.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 0 * * *
relation = greater than
quantity = 0
search = index="*gtw*ilb*" (host=*prd*gtw*nbs*ilb* OR host=*prd*gtw*app*ilb*) host!=*ftp* sourcetype = "nginx:plus:access" NOT "/v1/servers/self/up" |eval myraw=_raw | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-api-gtw") |  eval env=mvindex(env, 0) | bucket span=1d _time as day| eval day=strftime(day,"%d-%b-%y") | stats count as total by env response_code day | eventstats sum(eval(if(response_code == 502, total, 0))) as 502, sum(eval(if(response_code == 503, total, 0))) as 503, sum(eval(if(response_code == 504, total, 0))) as 504, sum(eval(if(response_code == 499, total, 0))) as 499,sum(total) as TotalRequests  by env day | eval non502_503_504_499 = TotalRequests -'502'-'503'-'504'-'499' | eval AvailSLI_in_percent = ('non502_503_504_499' / TotalRequests) * 100 | eval AvailSLI_in_per = if(floor(AvailSLI_in_percent) != AvailSLI_in_percent, round(AvailSLI_in_percent, 3), AvailSLI_in_percent) | stats avg(AvailSLI_in_per) as AvailSLI_in_per by env day | eval AvailSLI_in_per = round(AvailSLI_in_per, 3)| table env day  AvailSLI_in_per |sort day | join type=left env [search index="*gtw*ilb*" (host=*npr*gtw* OR host=*prd*gtw* ) host!=*ftp* sourcetype = "nginx:plus:access"  NOT  ("/v1/servers/self/up" OR "/v1/commons/persons/multi_upsert" OR "/v1/commons/persons/multi_create"  OR "/v1/commons/persons/multi_update" OR "/v1/commons/persons/multi_delete" OR "/v1/commons/persons/extensions/multi_read" OR  "/v1/commons/persons/external_id/multi_update" OR "/v1/commons/persons/external_id/multi_delete" OR "/v1/commons/persons/assignments/multi_upsert" OR "/v1/commons/persons/assignments/multi_read") |eval myraw=_raw | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-api-gtw") |  eval env=mvindex(env, 0) |bucket span=1d _time as day| eval day=strftime(day,"%d-%b-%y") | stats  exactperc99(request_time) as 99thPercentile(sec)  by env day| table env  99thPercentile(sec) | sort day]

[[Alert] : DimCritical : P3 : Flex Gateway : 401 Error percentage]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : $result$ \
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.env$ for $result.mod_tenant$
action.email.sendcsv=1
action.email.csv.filename=401_error_percentage.csv
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = arun.chauhan@ukg.com,mayank.j.jain@ukg.com,monal.yaduvanshi@ukg.com,Piyush.K.Kumar@ukg.com,rizwana.khatoon@ukg.com,rupika.mahajan@ukg.com,shubham.jain@ukg.com
description = This is a preventive measure, no action is required on this. API Gateway (Flex Gateway) team will look into it.
dispatch.earliest_time = -45m@m
dispatch.latest_time = @m
cron_schedule = */45 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = mod_tenant,env
alert.suppress.period = 2h
search = index=*-wfd-api-gtw-ilb (host=*gtw*nbs*ilb* OR host=*gtw*app*ilb*) host=*prd* host!=*ftp* sourcetype = "nginx:plus:access" "/api" | eval mod_tenant=split(tenant,"&") | eval mod_tenant=mvindex(mod_tenant, 0) | eval host=split(host, ".") | eval host=mvindex(host, 0) | eval env=split(host, "-api-gtw") | eval env=mvindex(env, 0) | bin _time span=5m | stats count as total by response_code mod_tenant env _time | stats sum(eval(if(response_code in (401), total, 0))) as 401_error, sum(total) as TotalAPIRequests by mod_tenant env _time | eval 401_error_percentage = round(('401_error' / TotalAPIRequests) * 100, 2) | search 401_error > 1000 AND 401_error_percentage > 5

[[Alert] : DimCritical : P2 : Flex Gateway : Access Token API Failure]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 0
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : $result$ \
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$
action.email.sendcsv=1
action.email.csv.filename=accesstoken_call_failure.csv
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = APIGEETeam@ukg.com
description = This is a preventive measure, to monitor access token calls success percentage is zero and Total calls greater than 5 in 60 minutes.
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = env,tenant
alert.suppress.period = 2h
search = index="*-wfd-api-gtw-ilb" (host=*gtw*sbs*ilb* OR host=*gtw*app*ilb*) "*/access_token*" | eval tenant=mvindex(split(tenant, "&"), 0) | eval env=mvindex(split(host, "-"), 0) . "-" . mvindex(split(host, "-"), 1) | rex field=_raw "http[s]?://(?<access_token_url>[^ ]+/authn/oauth2/[^/]+/access_token\?tenantId=[^ ]+)" | stats count as total by response_code env tenant access_token_url | stats sum(eval(if(response_code in (500,501,502,503,504,505,506,507,508,509,510,511,598,599),total,0))) as Err_Count_5xx, sum(eval(if(response_code in (400),total,0))) as Err_Count_400, sum(eval(if(response_code in (401),total,0))) as Err_Count_401, sum(eval(if(response_code in (403),total,0))) as Err_Count_403, sum(eval(if(response_code in (404),total,0))) as Err_Count_404, sum(eval(if(response_code in (200,201,202,203,204,205,206,207,208,226),total,0))) as Success_Count_2xx, sum(total) as TotalAPIRequests by env tenant access_token_url | eval Success%_2xx = round((Success_Count_2xx / TotalAPIRequests) * 100, 4) | eval Failure%_401 = round((Err_Count_401 / TotalAPIRequests) * 100, 4) | eval Failure%_403 = round((Err_Count_403 / TotalAPIRequests) * 100, 4) | eval Failure%_404 = round((Err_Count_404 / TotalAPIRequests) * 100, 4) | eval Failure%_5xx = round((Err_Count_5xx / TotalAPIRequests) * 100, 4) | table env tenant access_token_url TotalAPIRequests, Success_Count_2xx, Success%_2xx, Err_Count_401, Failure%_401, Err_Count_404, Failure%_404, Err_Count_403, Failure%_403, Err_Count_5xx, Failure%_5xx | search Success_Count_2xx = 0 AND TotalAPIRequests > 5 AND (Err_Count_401 > 0 OR Err_Count_404 > 0 OR Err_Count_5xx > 0)

#SelfService : Create Alert
[[Alert] : DimCritical : P1 : UDM : SLI-SLO - Action Download]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com
description = Check SLI/SLO for affected PRDs/tenants. Alert SOP : https://engconf.int.kronos.com/pages/viewpage.action?pageId=744604327
dispatch.earliest_time = -2h@h
dispatch.latest_time = @m
cron_schedule = 1 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = schema_name
alert.suppress.period = 120m
search = index=*udm-app  DownloadActionMetric | spath falcon_host | search falcon_host=* | rex field=_raw "numActions=(?<totalActions>\w+)\,?" | rex field=_raw "numSuccessActions=(?<totalSuccessActions>\w+)\,?" | rex field=_raw "numFailedActions=(?<totalFailedActions>\w+)\,?" | eval env = mvindex(split(host, "-"), 1) | eval myHour=strftime(_time, "%H") | stats sum(totalActions) AS totalActions, sum(totalFailedActions) AS totalFailedActions, count(tenant) as tenant_count by _time | eval percent_SLO = round(100-(totalFailedActions/totalActions*100),2) | eval total_success = totalActions-totalFailedActions | eval total_request= tostring(total_request, "commas") | sort percent_SLO asc | timechart span=1m sum(totalActions) as totalActions, sum(totalFailedActions) AS totalFailedActions, sum(total_success) AS total_success, avg(percent_SLO) as percent_SLO, count(tenant_count) AS tenant_count | where (percent_SLO < 90 AND totalActions > 500 AND tenant_count > 10) OR (percent_SLO < 95  AND totalFailedActions > 100 AND total_success < 5)

#SelfService : Create Alert
[[Alert] : DimCritical : P1 : UDM : UDM Alert for Noisy Neighbor - Processing of message found in Hazelcast]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com
description = UDM Alert for Noisy Neighbor - Processing of message found in Hazelcast : https://engconf.int.kronos.com/pages/viewpage.action?pageId=758821978
dispatch.earliest_time = -2h@h
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = tenant
alert.suppress.period = 120m
search = index="*udm*" sourcetype="udm:app"  "*Error occurred in processing message(re-processing of message found in hazelcast check) *" | table _time, host, tenant, msg

# ME- New Alert 08/19/2024 for UDM/WFL Connection Status (>50% of Tenants Impacted) https://log01.oss.mykronos.com/en-US/app/search/udm_and_dependent_services_health
[[Alert] : DimCritical : P1 : UDM/WFL Connection Status failed or degraded]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,ENGDCSUDMalerts@ukg.com,R026EOE1GUW89HXBISWUZKGKB00G38ME@ukg.pagerduty.com
description = Alert SOP - https://engconf.int.kronos.com/x/W2kSM
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = schema_name
alert.suppress.period = 120m
search = index=*udm* host=* "ComponentStatus [name=WFL" "currentStatus=" | eval componentName="WFL" | rex field=_raw "currentStatus=(?<status>.*?,)" | eval status=replace(status,",","") | stats count(componentName) as statusCount by componentName, status, host, logger, _time | eval hasFailures=case((status="FAIL" or status="DEGRADED") and statusCount>0, "1",1=1, "0") | table scope groupName schema_name _time, host logger componentName status statusCount

#New Alert 7/31/2024 for SBS feature switches are out of sync
[[Alert] : P1 : UDM & WFM SBS feature switches are out-of-sync]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.schema_name$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.schema_name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGDCSUDMalerts@ukg.com,R026EOE1GUW89HXBISWUZKGKB00G38ME@ukg.pagerduty.com
description = Alert SOP - [Alert] : P1 : UDM & WFM SBS feature switches are out-of-sync : https://engconf.int.kronos.com/pages/viewpage.action?pageId=799568610
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = schema_name
alert.suppress.period = 120m
search = index="*udm*" "*SBS feature switches out-of-sync*" | table scope, groupName, schema_name, host, msg

#### PS-286290 - Starts ####

[[Alert] : DimWarning : P3 : OAM : High eTimes warning]]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com
relation = greater than
quantity = 0
action.email.message.alert = $name$ : on $result.namespace$
action.email.subject.alert = $name$ : on $result.namespace$
description = SOP:- Reach to engineering team mailto:IAMDimNoidaCore@ukg.com
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-oam-app" sourcetype="openam:access:audit" source="/var/lib/kubelet/pods/*/volumes/kubernetes.io~empty-dir/openam-logs/*/*/log/access.audit.json" response.elapsedTime > 1000 | eval namespace=mvindex(split(source,"/"),-4) | bucket _time span=5m | stats count as elapsedTimeCount by _time, namespace | where elapsedTimeCount > 120 AND elapsedTimeCount < 250

[[Alert] : DimCritical : P1 : OAM : Critical High eTimes]]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com
relation = greater than
quantity = 0
action.email.message.alert = $name$ : on $result.namespace$
action.email.subject.alert = $name$ : on $result.namespace$
description = Reach out to engineering team mailto:IAMDimNoidaCore@ukg.com
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-oam-app" sourcetype="openam:access:audit" source="/var/lib/kubelet/pods/*/volumes/kubernetes.io~empty-dir/openam-logs/*/*/log/access.audit.json" response.elapsedTime > 1000 | eval namespace=mvindex(split(source,"/"),-4) | bucket _time span=5m | stats count as elapsedTimeCount by _time, namespace | where elapsedTimeCount > 250

[[Alert] : DimWarning : P3 : : ODJ : High eTimes]]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com
relation = greater than
quantity = 0
action.email.message.alert = $name$ : on $result.host$
action.email.subject.alert = $name$ : on $result.host$
description = SOP:- Reach to engineering team mailto:IAMDimNoidaCore@ukg.com
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-odj-app" sourcetype="opendj:filtered:ldapaccess" response.elapsedTime > 3000 | eval podnames=mvindex(split(source,"/"),-2) | bucket _time span=5m | stats count as elapsedTimeCount by _time podnames request.filter | where elapsedTimeCount > 100

#### PS-286290 - Ends ####

#OBS-1531


### FS-50578 - Starts ###
[[Alert] : DimCritical : P1 : Ihub : Threshold breach for Rabbit MQ queue for Low Lat process]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.tenant$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.tenant$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = engfalconihubextnoida@ukg.com,tsgintegration@ukg.com
description =
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = tenant
alert.suppress.period = 60m
search = index="*-wfd-wfm-app" source="/data/logs/wfc/wfc.log" ("*Ihub RT Message Received *" OR "*Ihub RT Message Pushed to queue *") | stats count(eval(match(msg, "Ihub RT Message Received "))) as received_count, count(eval(match(msg, "Ihub RT Message Pushed to queue "))) as pushed_count by tenant | eval difference = pushed_count - received_count | where difference > 100 | sort - difference | table tenant, difference

[[Alert] : DimCritical : P1 : Ihub : Fallback approach breached for low lat process]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.tenant$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.tenant$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = engfalconihubextnoida@ukg.com
description = SOP Link: https://engconf.int.kronos.com/display/Falcon/SOP+%3A+Fallback+approach+breached+for+low+lat+process
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = tenant
alert.suppress.period = 60m
search = index="*-wfd-wfm-app" source="/data/logs/wfc/wfc.log" "*Request Being Prepared  to be sent to ATOM  Cloud.*" | stats count by tenant | eval msg="Request Being Prepared  to be sent to ATOM  Cloud." | where count > 10 | sort - count | table msg, tenant, count

#SelfService : Create Alert for Corrupt Holiday Credit Rules
[[Alert] : DimCritical : P2 : Timekeeping : Corrupt Holiday Credit Rules]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
\
Description : $description$\
action.email.sendresults = 1
action.email.subject.alert = $name$ 
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.csv.filename=HolidayCreditRuleCorruptions.csv
action.email.sendcsv=1
action.email.to = naveen.goyal@ukg.com,yashmay.nigam@ukg.com,shivam.pathak@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */14 * * *
relation = greater than
quantity = 0
alert.suppress.period =
search =| koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort - stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack ] query="SELECT  h.name, COUNT(*) FROM holcreditrule h JOIN holcrdtelgblmm m1 ON h.holeligibilityid = m1.holeligibilityid WHERE EXISTS (SELECT h2.holcreditruleid FROM holcreditrule h2 JOIN holcrdtelgblmm m2 ON h2.holcreditruleid = m2.holcreditruleid WHERE m2.holeligibilityid = m1.holeligibilityid) GROUP BY  h.name HAVING COUNT(*) > 0" | append [ | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort + stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack] query="SELECT  h.name, COUNT(*) FROM holcreditrule h JOIN holcrdtelgblmm m1 ON h.holeligibilityid = m1.holeligibilityid WHERE EXISTS (SELECT h2.holcreditruleid FROM holcreditrule h2 JOIN holcrdtelgblmm m2 ON h2.holcreditruleid = m2.holcreditruleid WHERE m2.holeligibilityid = m1.holeligibilityid) GROUP BY  h.name HAVING COUNT(*) > 0"] | dedup schema_name name | where isnull(error) or len(error) < 1 | where len(name) > 0 | stats values(*) as * by schema_name


#SelfService : Create Alert for Adjustment Rules with no triggers
[[Alert] : DimCritical : P2 : Timekeeping : Corrupt Adjustment Rules with no triggers]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$\
\
Description : $description$\
action.email.sendresults = 1
action.email.subject.alert = $name$ 
action.email.useNSSubject = 1
alert.digest_mode = 1
alert.suppress = 0
alert.track = auto
counttype = number of events
disabled = 1
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.csv.filename=AdjRuleNoTriggers.csv
action.email.sendcsv=1
action.email.to = naveen.goyal@ukg.com,yashmay.nigam@ukg.com,shivam.pathak@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */14 * * *
relation = greater than
quantity = 0
alert.suppress.period =
search = | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort - stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack ] query="SELECT proc.extprocessornm FROM extprocessor proc INNER JOIN extprocdata ext ON proc.extprocessorid = ext.extprocessorid LEFT JOIN fpatransfer fpa ON ext.extprocdataid = fpa.extprocdataid WHERE fpa.fpatransferid IS null and proc.processorclasstxt like '%AdjustmentRule%'" | append [ | koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[ | inputlookup scope_selections_lookup | table stack_selection_name | rename stack_selection_name as stack | sort + stack | where like(stack,"%cus%") OR like(stack,"%cfn%") | head 1 | return $stack] query="SELECT proc.extprocessornm FROM extprocessor proc INNER JOIN extprocdata ext ON proc.extprocessorid = ext.extprocessorid LEFT JOIN fpatransfer fpa ON ext.extprocdataid = fpa.extprocdataid WHERE fpa.fpatransferid IS null and proc.processorclasstxt like '%AdjustmentRule%'"] | dedup schema_name extprocessornm | where isnull(error) or len(error) < 1 | where len(extprocessornm) > 0 | stats values(*) as * by schema_name

[[Alert] : DIM Critical : P2: IDPProxy : Alert for Invalid Certificate]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com,IAMDimNoidaCore@ukg.com
description = SOP:- Reach to engineering team - IAMDimNoidaCore@ukg.com.
dispatch.earliest_time = -20m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
search = index="*-prd-wfd-idp-app" source="/data/openam/logs/debug/Federation*" "The signing certificate does not match what's defined in the entity metadata" | stats count by host

[[Alert] : DimCritical : P3 : Timekeeping : Employment Term Data corruption]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$
action.email.sendresults = 1
action.email.subject.alert = $name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = ENGWFDTeamElves@ukg.com,engwfdteamwizards@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */24 * * *
relation = greater than
quantity = 0
search = |koogledimen service=WFMPPASQuery action=QueryAllWFMAtOnce scope=[| inputlookup tenant_info_lookup | table stack_level_name | head 1 | return $stack_level_name] query="select count(*),  g.grpscheduleid, g.shortnm as ET_Name from groupschedule g left join effemptermdef e on g.grpscheduleid = e.grpscheduleid where e.effemptermdefid is null and g.contractsw = 1 and g.deletedsw = 0 and emptermproctpid = -1  group by g.grpscheduleid"  | where (isnull(error) or len(error) < 1) and isnotnull(grpscheduleid)

### FS-71348 ###
[[Alert] : DimCritical : P1 : Ihub : Atom Monitoring Override XML Size Alerts]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : This alert got triggered when file size of override.xml under accounts folder increase beyond 50Mb.
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = engfalconihubextnoida@ukg.com 
description = This alert got triggered when file size of override.xml under accounts folder increase beyond 50Mb.
dispatch.earliest_time = -24h@h  
dispatch.latest_time = now
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-hub-app" sourcetype="dell:boomi:extensionsOverrideXMLSize:monitoring" | dedup _raw | sort host


### FS-80482 ###
[[Alert] : DimWarning : P2 : OAM : Internal Server Error : Non-existent organization name]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.o$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.o$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com,aayush.turakhia@ukg.com
description = To resolve the issue, please follow the SOP https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FT&title=K8s_Restart+OpenAM
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 15m
search = index=*oam-app* source=*debug* "getInstance called with non-existent organization name" | eval namespace=mvindex(split(source,"/"),-4) | stats count by namespace, o | where count > 10 | eventstats count as row_count by namespace | where row_count > 3

### FS-85729 - Starts ###
[[Alert] : DimCritical : P1 : Ihub : Threshold breached for DML User Connections]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = engfalconihubextnoida@ukg.com
description =
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="koogle-monitoring" source=ppas_db_monitoring is_collection_error=false host="*int*dbs*" | bin span=5m _time | rex field=user_wise_connections mode=sed "s/^\[|\]$//g" | mvexpand user_wise_connections | spath input=user_wise_connections output=session_count path=session_count | where user_wise_connections != "null" AND session_count >= 9 | search NOT user_ulta_prd_01 | table _time host user_wise_connections session_count


[[Alert] : DimCritical : P2 : Ihub : Threshold breached for DML User Connections]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = engfalconihubextnoida@ukg.com
description =
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="koogle-monitoring" source=ppas_db_monitoring is_collection_error=false host="*int*dbs*" | bin span=5m _time | rex field=user_wise_connections mode=sed "s/^\[|\]$//g" | mvexpand user_wise_connections | spath input=user_wise_connections output=session_count path=session_count | where user_wise_connections != "null" | where session_count >= 7 AND session_count < 9 | search NOT user_ulta_prd_01
| table _time host user_wise_connections session_count

### FS-85729 - Ends ###

[[Alert] : DimCritical : P1 : OAM : AUTHN-000209 The system timed out while throttling the incoming request]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.o$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.o$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Step 1 : Collect logs using SOP : https://engconf.int.kronos.com/display/FT/K8s_Logs+collection+for+OpenAM+or+OpenDJ. Step 2 : Restart open am pod 0 using SOP : https://engconf.int.kronos.com/display/FT/K8s_Restart+OpenAM
dispatch.earliest_time = -15m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*oam-app* host=* "AUTHN-000209 The system timed out while throttling the incoming request. Try again." sourcetype=app:openam:tenantProvisioning | stats  count by host  | where  count > 0


### FS-123237  ###
[[Alert] : DimCritical : P1 : OAM : Tenant Provisioning is failed on AuthN]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP:- https://engconf.int.kronos.com/pages/viewpage.action?pageId=822170028. Reach out to IAM DIM Core Noida IAMDimNoidaCore <IAMDimNoidaCore@ukg.com> for any issues.
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*wfd-oam-app* host=* sourcetype="app:openam:tenantProvisioning" | eval namespace=mvindex(split(source,"/"),-3) | search "*Tenant Provisioning Ends for Component AuthN with Status false*" | stats count by namespace trxid | where  count > 0 | join type=inner trxid [ search index=*wfd-oam-app* host=* sourcetype="app:openam:tenantProvisioning" level=ERROR | stats count as error_count by trxid msg ] | table namespace trxid error_count msg

### FS-195953  ###
[[Alert] : DimCritical : P1 : UMS : Request Connection Timed out on UMS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Reach out to IAM DIM Core Noida IAMDimNoidaCore <IAMDimNoidaCore@ukg.com> for any issues.
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = stack_env
alert.suppress.period = 1h
search = index="*wfm*"  Error "Connection timed out (Connection timed out); nested exception is java.net.ConnectException: Connection timed out (Connection timed out)" *usermanagement/restcall/v1/user* | convert timeformat="%Y-%m-%d %H:%M:%S" ctime(_time) AS date | rex field=host "(?<stack_env>^[^-]+-[^-]+)" |  stats count,min(date),max(date) by stack_env tenant sort by count desc


### FS-129884  ###
[[Alert] : DimCritical : P2 : ODJ : Missing Logon Profile]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP : https://engconf.int.kronos.com/display/FT/SOP+for+Missing+Logon+Profile
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = namespace
alert.suppress.period = 1h
search = index=*odj* sourcetype="opendj:errors" | search NOT "*&FEDERATED_LOGON_PROFILE*" | eval namespace=mvindex(split(source,"/"),-3) | eval podname=mvindex(split(source,"/"),-2) | search "*but no such password policy has been defined in the server configuration*"  | rex field=_raw "cn=(?<RealmWithLogon>.*?)ou=user,dc=kronos,dc=com" | stats count by namespace podname RealmWithLogon | where count > 0


### FS-93180 ###
[[Alert] : DimWarning : P3 : OAM : Realm Config Modification : Realm config modified/deleted from UI]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudUnificationOps@ukg.com,CloudIdentityOps@ukg.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = SOP:- Reach to engineering team - IAMDimNoidaCore@ukg.com
dispatch.earliest_time = -10m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index="*oam*" sourcetype="nginx:plus:access" (("*PUT /authn/json/realms/root/realms/*" OR "*DELETE /authn/json/realms/root/realms/*") AND "*/realm-config/*" AND "*/ui-admin*") | rex field=_raw "/realms/(?<realm>[^/]+)/realm-config" | stats count by namespace realm | where count > 0


### FS-178930##

[[Alert] : DimCritical : P1 : OAM : The system timed out while throttling the incoming request]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudUnificationOps@ukg.com,CloudIdentityOps@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com,sourabh.kotnala@ukg.com, jatin.parkash@ukg.com, saurabh.tyagi@ukg.com
description = Step 1 : Collect logs using SOP : https://engconf.int.kronos.com/display/FT/K8s_Logs+collection+for+OpenAM+or+OpenDJ. Step 2 : Restart open am pod 0 using SOP : https://engconf.int.kronos.com/display/FT/K8s_Restart+OpenAM
dispatch.earliest_time = -30m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 10m
search = index=*oam-app* host=*cus* sourcetype="app:openam:tenantProvisioning" | search "The system timed out while throttling the incoming request. Try again." | stats count by host

#FS-99148

[[Alert] : DimCritical : P1 : KPI : Tenant Information Not Loading In KPI Computation Cluster from Astra DB]

action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = naveen.malik@ukg.com,sandeep.goel@ukg.com,tapan.jaggi@ukg.com,kpicustomersuccessteam@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : for $result.tenant$\
\
Description : $description$\
\
Alert Action : SOP - https://engconf.int.kronos.com/x/3rsGMQ
action.email.subject.alert = $name$ : for $result.tenant$
description = Tenant information is not present in KPI Astra database for the tenant mentioned in the subject line. Hosts: $result.host_list$
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */60 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*wfd-kpi-db*" host="*scc*" source="/data/spark/logs/kpi-executor.log" OR source="/data/spark/logs/kpi.log" "Exception occurred while building analytic configuration in DSE context. This will impact KPI processing for tenant*" | stats values(host) as hosts, count by tenant |where count>0 | eval message="Exception occurred while building analytic configuration in DSE context. This will impact KPI processing for tenant" |eval host_list=mvjoin(hosts, ", ") | table message, tenant, host_list, count

[[Alert] : DimCritical : P1 : OAM : Customer IDP Certificate validity is less than 10 days]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.o$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.o$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudUnificationOps@ukg.com
description = Reach out to Unification team and Authentication Engineering for Analysis.
dispatch.earliest_time = -20d
dispatch.latest_time = @m
cron_schedule = 0 8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*-app-certs*" host="*0*" sourcetype="*certs:json" | rex field=_raw "entityId\":\"(?<entityId>[^\"]+)\"" | rex field=_raw "realm\":\"(?<realm>[^\"]+)\"" | rex field=_raw "certExpirationDates\":\"(?<certExpirationDates>[^\"]+)\"" | rex field=_raw "havingOneValidCert\":\"(?<havingOneValidCert>[^\"]+)\"" | dedup entityId, realm | eval env = mvindex(split(host, "-"), 5) | eval is_other=if("other"=="other", 2, if("other"=="/adfs/", 1, 0)) | eval daysLeft = round((strptime(validTill, "%d-%m-%Y") - now()) / 86400) | where (is_other=2 AND NOT match(entityId, ".*(ultipro.com/adfs/|ukg.net/adfs/|ukgproservices.com/adfs/|ultipro.ca/adfs/|usgintersourcingv1.com/adfs/|/signin/|/hsp/|-pid|-did|/kgs).*")) OR (is_other=1 AND match(entityId, ".*(ultipro.com/adfs/|ukg.net/adfs/|ukgproservices.com/adfs/|ultipro.ca/adfs/|usgintersourcingv1.com/adfs/).*")) OR (is_other=0 AND match(entityId, "other")) | where havingOneValidCert="No" | where daysLeft<10 | table entityId, realm, validTill, havingOneValidCert, daysLeft, env

[[Alert] : DimWarning : P2 : OAM : Customer IDP Certificate validity is less than 30 days]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.o$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.o$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudUnificationOps@ukg.com
description = Reach out to Unification team and Authentication Engineering for Analysis.
dispatch.earliest_time = -20d
dispatch.latest_time = @m
cron_schedule = 0 8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*-app-certs*" host="*0*" sourcetype="*certs:json" | rex field=_raw "entityId\":\"(?<entityId>[^\"]+)\"" | rex field=_raw "realm\":\"(?<realm>[^\"]+)\"" | rex field=_raw "certExpirationDates\":\"(?<certExpirationDates>[^\"]+)\"" | rex field=_raw "havingOneValidCert\":\"(?<havingOneValidCert>[^\"]+)\"" | dedup entityId, realm | eval env = mvindex(split(host, "-"), 5) | eval is_other=if("other"=="other", 2, if("other"=="/adfs/", 1, 0)) | eval daysLeft = round((strptime(validTill, "%d-%m-%Y") - now()) / 86400) | where (is_other=2 AND NOT match(entityId, ".*(ultipro.com/adfs/|ukg.net/adfs/|ukgproservices.com/adfs/|ultipro.ca/adfs/|usgintersourcingv1.com/adfs/|/signin/|/hsp/|-pid|-did|/kgs).*")) OR (is_other=1 AND match(entityId, ".*(ultipro.com/adfs/|ukg.net/adfs/|ukgproservices.com/adfs/|ultipro.ca/adfs/|usgintersourcingv1.com/adfs/).*")) OR (is_other=0 AND match(entityId, "other")) | where havingOneValidCert="No" | where daysLeft>=10 and daysLeft<30 | table entityId, realm, validTill, havingOneValidCert, daysLeft, env

[[Alert] : DimWarning : P3 : OAM : Customer IDP Certificate validity is less than 60 days]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.o$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.o$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudUnificationOps@ukg.com
description = Reach out to Unification team and Authentication Engineering for Analysis.
dispatch.earliest_time = -20d
dispatch.latest_time = @m
cron_schedule = 0 8 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*-app-certs*" host="*0*" sourcetype="*certs:json" | rex field=_raw "entityId\":\"(?<entityId>[^\"]+)\"" | rex field=_raw "realm\":\"(?<realm>[^\"]+)\"" | rex field=_raw "certExpirationDates\":\"(?<certExpirationDates>[^\"]+)\"" | rex field=_raw "havingOneValidCert\":\"(?<havingOneValidCert>[^\"]+)\"" | dedup entityId, realm | eval env = mvindex(split(host, "-"), 5) | eval is_other=if("other"=="other", 2, if("other"=="/adfs/", 1, 0)) | eval daysLeft = round((strptime(validTill, "%d-%m-%Y") - now()) / 86400) | where (is_other=2 AND NOT match(entityId, ".*(ultipro.com/adfs/|ukg.net/adfs/|ukgproservices.com/adfs/|ultipro.ca/adfs/|usgintersourcingv1.com/adfs/|/signin/|/hsp/|-pid|-did|/kgs).*")) OR (is_other=1 AND match(entityId, ".*(ultipro.com/adfs/|ukg.net/adfs/|ukgproservices.com/adfs/|ultipro.ca/adfs/|usgintersourcingv1.com/adfs/).*")) OR (is_other=0 AND match(entityId, "other")) | where havingOneValidCert="No" | where daysLeft>=30 and daysLeft<60 | table entityId, realm, validTill, havingOneValidCert, daysLeft, env

[[Alert] : DimCritical : P1 : The signing certificate does not match what is defined in the entity metadata]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$
action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudIdentityOps@ukg.com
description = Contact Dimensions SSO and AuthN Engineering Team to get this certificate fixed.
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h

search = index="*oam*" sourcetype="*debug*" OR sourcetype="openam:activity:audit" | search "The signing certificate does not match what's defined in the entity metadata" | rex field=_raw "TransactionId\[(?<transaction_id>[^\]]+)\]" | table transaction_id | map search="search index=\"*oam*\" transactionId=\"$transaction_id$\" | eval namespace=mvindex(split(source,\"/\"),-4) | spath input=_raw path=realm output=realm | spath input=_raw path=transactionId output=transaction_id | table transaction_id namespace realm"

#FS-107040

[[Alert] : DimCritical : P3 : Redis : Caching Errors in last 24 hours on SDM]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*sdm*" host!=*hcm* host=*** level="ERROR" AND (logger="com.kronos.cache*" OR logger="com.kronos.container.redismonitor*" OR logger="com.kronos.object.serializer" OR logger="redis")| fields _time host msg _raw logger level | sort -errors  | stats count(logger) as errors  by logger,msg,host

#FS-107040

[[Alert] : DimCritical : P3 : Redis : Caching Errors in last 24 hours on HCA]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*hca*" host!=*hcm* host=*** level="ERROR" AND (logger="com.kronos.cache*" OR logger="com.kronos.container.redismonitor*" OR logger="com.kronos.object.serializer" OR logger="redis")| fields _time host msg _raw logger level | sort -errors  | stats count(logger) as errors  by logger,msg,host

#FS-107040

[[Alert] : DimCritical: P3 : Redis : Caching Errors in last 24 hours on ECS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert =$name$ : on $result.host$
action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  wfdredisserviceteam@ukg.com
description =  wfdredisserviceteam@ukg.com
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule = 0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*ecs*" host!=*hcm* host=*** level="ERROR" AND (logger="com.kronos.cache*" OR logger="com.kronos.container.redismonitor*" OR logger="com.kronos.object.serializer" OR logger="redis")| fields _time host msg _raw logger level | sort -errors  | stats count(logger) as errors  by logger,msg,host

#PS-371818
#PS-420134
[[Alert] : DimCritical : P1 : Redis : Node ODown Alert]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description = SOP Link: https://engconf.int.kronos.com/display/FAR/Standard+Operating+Procedure+%28SOP%29+Redis+Odown+Events
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m
search = index="*-wfd-dmc-app"  sourcetype="redis:*" ("*odown*") | dedup host| table _time host _raw


############################
#KPI Astra
############################

#FS-119247
[[Alert] : DimCritical : P1 : KPI Astra : Astra DB Cordinator node connection failure.]

action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,kpicustomersuccessteam@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\
Alert Action : 
action.email.subject.alert = $name$ : on $result.host$
description = This is Astra DB Exception, where Application driver is unable to connected to Astra DB, suspected area is Astra Cordinator node is unable unable to accept incoming connections. Please follow the SOP: https://engconf.int.kronos.com/x/uV_vMQ
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*wfd-kpi-db" OR index="*wfd-wfm-app*" source="/data/spark/logs/kpi-executor.log" OR source="/data/logs/wfc/wfc.log" msg="*com.datastax.oss.driver.api.core.NoNodeAvailableException*" | stats values(host) as hosts, count by msg| where count > 10| eval message="com.datastax.oss.driver.api.core.NoNodeAvailableException"| eval host_list=mvjoin(hosts, ", ")| table message, host_list

############################
#TMS Router
############################

#FS-121102
[[Alert] : DimCritical : P1 : TMS Router : alert for failures for TMS router to IDP proxy.]

action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = EngFalconNoidaTenantManagement@ukg.com,EngineeringServices@ukg.com,cloudtmoshiftleads@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\
Alert Action :
action.email.subject.alert = $name$ : on $result.host$
description = This is OpenAMAuthenticationException, Please follow the SOP: https://engconf.int.kronos.com/display/FT/SOP+-+TMS+ROUTER+Failures
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search= index="koss-cloudfunction-tmsrouter" source="projects/gcp-koss01/subscriptions/gcp-koss-cloudfunction-tmsrouter" "FATAL - OpenAM authentication error!" | table data.jsonPayload.details,data.jsonPayload.error

############################
#TMS Router
############################

#FS-121102
[[Alert] : DimCritical : P1 : TMS Router : alert for failures for TMS router to DTMS.]

action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = EngFalconNoidaTenantManagement@ukg.com,EngineeringServices@ukg.com,cloudtmoshiftleads@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\
Alert Action :
action.email.subject.alert = $name$ : on $result.host$
description = This is TmsConnectionException. Please follow the SOP: https://engconf.int.kronos.com/display/FT/SOP+-+TMS+ROUTER+Failures
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search= index="koss-cloudfunction-tmsrouter" source="projects/gcp-koss01/subscriptions/gcp-koss-cloudfunction-tmsrouter" "FATAL - TMS connection error!"| table data.jsonPayload.details,data.jsonPayload.error

############################
#TMS Router
############################

#FS-121102
[[Alert] : DimCritical : P1 : TMS Router : alert for failures in the SF and DTMS integration.]

action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = EngFalconNoidaTenantManagement@ukg.com,EngineeringServices@ukg.com,cloudtmoshiftleads@ukg.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\
Alert Action :
action.email.subject.alert = $name$ : on $result.host$
description = This is TMS response error . Please follow the SOP: https://engconf.int.kronos.com/display/FT/SOP+-+TMS+ROUTER+Failures
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="koss-cloudfunction-tmsrouter" source="projects/gcp-koss01/subscriptions/gcp-koss-cloudfunction-tmsrouter" ("Response from TMS: 400" OR "tms_response_error")|table data.textPayload

[[Alert] : DimWarning : P2 : DIDP : OAM : Unusually high failed login attempts] 
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com
description = Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>. Involve ITSM to initiate a P3 collaboration call with NOC - DIM Authentication-ep Pager Duty Policy if no acknowledgement in 15 mins
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*cidp-oam*" host="*did*" sourcetype="did:openam:authentication" eventName="AM-LOGIN-MODULE-COMPLETED" | search  "LOGIN_FAILED" "principal"  | bin _time span=1m | stats count by _time host | where count >20

[[Alert] : DimCritical : P1 : DIDP : OAM : Error loading keystore] 
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com
description = Take the restart of impacted DIDP OAM Nodes using SOP : https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FT&title=Restart+tomcat+for+DIDP+and+DIDP+proxy+nodes 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*cidp*" host="*did*" OR host="*pid*" sourcetype=openam:debug "ERROR: KeyStoreBuilder.build(): Error loading keystore"  | bin _time span=1m | stats count by _time host | where count >5

[[Alert] : DimCritical : P1 : DIDP : OAM : Internal Server Error] 
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com
description = Take the restart of impacted DIDP OAM Nodes using SOP : https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FT&title=Restart+tomcat+for+DIDP+and+DIDP+proxy+nodes 
dispatch.earliest_time = -10m@m
dispatch.latest_time = @m
cron_schedule = */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index="*cidp-oam*" host="*did*" OR host="*pid*" "Internal Server Error"  | bin _time span=1m | stats count by _time host | where count >10

[[Alert] : DimWarning : P2 : UMS : Internal Server Error in UMS for user operation]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com
description = Getting 500 errors on UMS node. Service team needs to investigate the errors. Kindly Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*ums* sourcetype="tomcat:access:log" status=500 | search "*/v1/user*" | dedup http_method, uri_query | stats count by host, http_method, uri_query

[[Alert] : DimWarning : P3 : UMS : Internal Server Error in UMS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com
description = Getting 500 errors on UMS node. Service team needs to investigate the errors. Kindly Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*ums* sourcetype="tomcat:access:log" status=500 | search NOT "*/v1/user*" | dedup http_method, uri_query | stats count by host, http_method, uri_query

[[Alert] : DimWarning : P3 : UMS : Invalid realm config]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudUnificationOps@ukg.com
description = Realm SSO configuration needs to be reviewed. Kindly Connect to the Unification team <CloudUnificationOps@ukg.com> or Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = 0 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*ums* source="/data/tomcat/logs/ums.log" "ERROR" " 500 " | search "*authenticate?authIndexType=service&authIndexValue*" | rex field=msg "authenticate\?authIndexType=service&authIndexValue=(?<authIndexValue>[^ ]+)" | rex field=msg "/authn/json/(?<realm>[^/]+)/authenticate" | stats count by host, realm, authIndexValue | dedup realm, authIndexValue

[[Alert] : DimCritical : P1 : OAM : High Upstream response time]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com,CloudFalconAlerts@ukg.com,R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com
description = Take the restart of OpenAM pods. SOP for OAM restart - https://engconf.int.kronos.com/display/FT/K8s_SOP%3ARolling+Restart+of+Stateful+Set+for+K8s+Open+AM. For any issues connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 15m
search = index=*wfd-oam* source=*oam* sourcetype="nginx:plus:access" | search "*AM Web Agent*" | rex field=_raw "\d+\.\d\d\d\s\d+\.\d\d\d\s\s(?<upstream_response_time>\d+\.\d\d\d)\s\d+\.\d\d\d" | bucket _time span=1m | eval namespace=mvindex(split(source,"/"),-3) | stats p99(upstream_response_time) as upstream_response_time_count by _time namespace | where upstream_response_time_count > 0.5 | stats count by namespace | where count>2

### FS-137217  ###
[[Alert] : DimWarning : P3 : UMS : High Response time on UMS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com
description = High response time on UMS node. Engineering team needs to investigate if there is any issue. Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com>
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
serach = index=*wfd-ums-app* source=*ums.log* sourcetype="ums:app" | rex field=_raw "\"msg\":\"(?<msg>[^\"]+)\"" | rex field=_raw "\"serverResponseTime\":(?<serverResponseTime>\d+)" | where msg="RESPONSE" | bucket _time span=15m | stats avg(serverResponseTime) as avgServerResponseTime by host, _time | where avgServerResponseTime > 10000 AND avgServerResponseTime < 25000 | table host avgServerResponseTime

### FS-137217  ###
[[Alert] : DimCritical : P2 : UMS : High Response time on UMS]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com
description = High response time on UMS node. Kindly take restart of UMS. SOP:- https://engconf.int.kronos.com/display/AUTHN/Automated+SOP%3A+Restart+of+UMS+Tomcat+Backend+Container. Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com> for any issues.
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*wfd-ums-app* source=*ums.log* sourcetype="ums:app" NOT "*/oidcsession*" | rex field=_raw "\"msg\":\"(?<msg>[^\"]+)\"" | rex field=_raw "\"serverResponseTime\":(?<serverResponseTime>\d+)" | where msg="RESPONSE" | bucket _time span=15m | stats avg(serverResponseTime) as avgServerResponseTime by host, _time | where avgServerResponseTime > 10000 | table host avgServerResponseTime

### FS-137217  ###
[[Alert] : DimCritical : P2 : UMS : High Response time on UMS for oidc requests]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = IAMDimNoidaCore@ukg.com
description = High response time on UMS node. Kindly take restart of UMS. SOP:- https://engconf.int.kronos.com/display/AUTHN/Automated+SOP%3A+Restart+of+UMS+Tomcat+Backend+Container. Connect to the Engineering team IAMDimNoidaCore <IAMDimNoidaCore@ukg.com> for any issues.
dispatch.earliest_time = -15m@m
dispatch.latest_time = @m
cron_schedule = */15 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*wfd-ums-app* source=*ums.log* sourcetype="ums:app" "*/oidcsession*" | rex field=_raw "\"msg\":\"(?<msg>[^\"]+)\"" | rex field=_raw "\"serverResponseTime\":(?<serverResponseTime>\d+)" | where msg="RESPONSE" | bucket _time span=15m | stats avg(serverResponseTime) as avgServerResponseTime by host, _time | where avgServerResponseTime > 25000 | table host avgServerResponseTime


[[Alert] : DimCritical : P1 : WFM : Event Manager Startup with Missing Tenant Cache]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$ \
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = wfmaas-bpf@ukg.pagerduty.com
description = SOP Link: https://engconf.int.kronos.com/display/NPDPMO/Alert+-+DimCritical+%3A+P1+%3A+WFM+%3A+Event+Manager+Startup+with+Missing+Tenant+Cache
dispatch.earliest_time = -30m@m
dispatch.latest_time = @m
cron_schedule = */30 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*-wfd-wfm-app" source="/data/logs/wfc/wfc.log" sourcetype="wfm:app" level=ERROR logger="WFC" th="*WFD StartUp*" msg="EvtMgrStartUp Event Manager setServerInfo*" | stats values(tenant) by host


############################
#KPI CCF SPARK
############################

#FS-138556

[[Alert] : DimCritical : P1 : CCF : One or more nodes of BCC cluster are in DOWN state]
 
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,kpicustomersuccessteam@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : for $result.ccf_node$\
\
Description : $description$\
\
Alert Action : SOP - https://engconf.int.kronos.com/x/3YLxMg
action.email.subject.alert = $name$
description = BCC-APP Node Down 
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*wfd-kpi-app" OR index="*wfd-kpi-db" source="/data/logs/wfc/wfc.log" OR source="/data/spark/logs/ccf*log" "One or more nodes of BCC cluster are in DOWN state" | rex field=_raw "CCF Node End Point:\s*(?<ccf_node>[\w\.\-/:]+)" | stats count by ccf_node | where count >= 1



[[Alert] : DimCritical : P1 : CCF : All nodes of BCC cluster are in DOWN state]
 
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.sendresults = 1
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,kpicustomersuccessteam@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com,R02FFUHUPCY2RIXLMDIN63XU60KOTWSR@ukg.pagerduty.com
relation = greater than
quantity = 0
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : for $result.host$\
\
Description : $description$\
\
Alert Action : SOP - https://engconf.int.kronos.com/x/3YLxMg
action.email.subject.alert = $name$ : for $result.host$
description = BCC-APP Cluster Down 
dispatch.earliest_time = -60m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
alert.suppress.fields = host
alert.suppress.period = 60m
search = index="*wfd-kpi-app" OR index="*wfd-kpi-db" source="/data/logs/wfc/wfc.log" OR source="/data/spark/logs/ccf*log" "All nodes of BCC cluster are in DOWN state" | rex field=host "(?P<group>[a-z0-9-]+-wfm\d+)" | stats count by group | where count >= 1


[[Alert] : DimCritical : P1 : OAM : Pause Full - G1 Evacuation Pause]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.namespace$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.namespace$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com, R02FVMAY7BUOS8HNPVEE2525W109KRLA@ukg.pagerduty.com
description = SOP Link: https://engconf.int.kronos.com/display/FT/K8s_Restart+OpenAM. Reach out to IAM DIM Core Noida IAMDimNoidaCore <IAMDimNoidaCore@ukg.com> for any issues.
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 1h
search = index=*-wfd-oam* sourcetype="openam:gc:log" "Full" | eval namespace=mvindex(split(source,"/"),-3) | bucket _time span=5m | stats count by _time namespace | where count > 2


#Configure a P3 alert to trigger when the Queue Size on the RPT app node exceeds the limit of 20.
[[Alert] : DimCritical : P3 : RPT App Node - IHub: QueueSize exceeds limit of 20]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = WFDReportsServiceTeam@ukg.com
description = For WFD Reporting Team Internal Analysis Purpose
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index="*-wfd-rpt-app" source="/data/InformationHub/logs/jsrvrihub*" "Queue Size:" | rex "Queue Size:(?<queue_size>\d+)" | where queue_size > 20 | table _time, host, queue_size


#Configure an alert to trigger when the org.apache.http.conn.HttpHostConnectException occurs on the RPT app node more than 2 times within a 5m interval.
[[Alert] : DimCritical : P3 : RPT App Node : HttpHostConnectException]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 1
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert = $name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = WFDReportsServiceTeam@ukg.com
description = For WFD Reporting Team Internal Analysis Purpose
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
cron_schedule = */5 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 2h
search = index="*-wfd-rpt-app" sourcetype=birt_ihub_jsrvr_process "*org.apache.http.conn.HttpHostConnectException*" | bin _time span=5m | stats count by _time host | where count >= 3

#PS-416424
[[Alert] : DimCritical : P1 : Redis : Connection Limit Reached]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description = SOP Link: https://engconf.int.kronos.com/pages/viewpage.action?spaceKey=FAR&title=Standard+Operating+Procedure+%28SOP%29+Redis+Max+Connection+Limit+Reached
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule =  0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m
search = index=*dmc* host!=hca "max number of clients reached"

#PS-420134
[[Alert] : DimCritical : P1 : Redis : Master Reconnection Failed Alert]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description =  SOP Link: https://engconf.int.kronos.com/display/FAR/Standard+Operating+Procedure+%28SOP%29+Master+Reconnection+Failed+Alert
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule =  0 */1 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 5m
search = index="*dmc*app" sourcetype=* (
             "Connection with replica lost" OR
             "Unable to resync with replica" OR
             "Network timeout" OR
             "High latency detected" OR
             "Replication lag" OR
             "Master link down" OR
             "Disk space issue" OR
             "Out of memory" OR
             "Maxmemory reached" OR
             "Configuration error" OR
             "Slave is not connected to master" OR
             "Replication delay" OR
             "Command execution failed" OR
             "Client closed connection" OR
             "Failed to save the DB" OR
             "AOF rewrite error" OR
             "High CPU usage" OR
             "*sdown*" OR
             "Connection refused" OR
             "Reconnecting to MASTER" OR
             "I/O error reading bulk count from MASTER: No error information"
         )
         | sort _time
         | eval scope_split = split(host, "-")
         | eval scope = mvjoin(mvindex(scope_split, 0, 3), "-")
         | eval issue = case(
             like(_raw, "%Connection with replica lost%"), "Connection lost with replica",
             like(_raw, "%Unable to resync with replica%"), "Unable to resync with replica",
             like(_raw, "%Network timeout%"), "Network timeout",
             like(_raw, "%High latency detected%"), "High latency detected",
             like(_raw, "%Replication lag%"), "Replication lag detected",
             like(_raw, "%Master link down%"), "Master link down",
             like(_raw, "%Disk space issue%"), "Disk space issue",
             like(_raw, "%Out of memory%"), "Out of memory",
             like(_raw, "%Maxmemory reached%"), "Maxmemory reached",
             like(_raw, "%Configuration error%"), "Configuration error",
             like(_raw, "%Slave is not connected to master%"), "Slave not connected to master",
             like(_raw, "%Replication delay%"), "Replication delay",
             like(_raw, "%Command execution failed%"), "Command execution failed",
             like(_raw, "%Client closed connection%"), "Client closed connection",
             like(_raw, "%Failed to save the DB%"), "Failed to save the DB",
             like(_raw, "%AOF rewrite error%"), "AOF rewrite error",
             like(_raw, "%High CPU usage%"), "High CPU usage",
             like(_raw, "%Connection refused%"), "Connection refused",
             like(_raw, "%Reconnecting to MASTER%"), "Reconnecting Failure",
             like(_raw, "%I/O error reading bulk count from MASTER: No error information%"), "I/O error reading bulk count from MASTER",
             true(), "unknown"
         )
         | where issue != "unknown"
         | table _time, scope, issue, _raw

#PS-420134
[[Alert] : DimCritical : P1 : Redis : Redis Client Buffer Limit Reached]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
#Modify below values depending on the requirement.
action.email.message.alert = $name$ : on $result.host$\
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert =$name$ : on $result.host$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to = CloudFalconAlerts@ukg.com,R02JOGR34XVDAN3N7CAL18Z1R1CK4CN8@ukg.pagerduty.com, R02I68WYMIQTD7AYC7A39UB9E12971NZ@ukg-dev.pagerduty.com, R02H5Q0U0GU16JE7989TH91HC1YBSYQE@ukg-dev.pagerduty.com, OneNOCTeam@ukg.com, wfdredisserviceteam@ukg.com
description = SOP Link: https://engconf.int.kronos.com/display/FAR/Standard+Operating+Procedure+%28SOP%29+Redis+Client+Buffer+Limit+Reached
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
cron_schedule =  0 */24 * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = index="*dmc*" host="*dmc*prd*" | search "scheduled to be closed ASAP for overcoming of output buffer limits" | reverse


#This alert monitors whether WFM logs are being ingested into Splunk. If no logs are received within the last 10 minutes, an alert will be triggered.

[[Alert] : DimCritical : P1 : WFM : WFM logs are not reporting in CUST Splunk]
action.email = 1
action.email.content_type = plain
action.email.include.results_link = 0
action.email.include.search = 1
action.email.include.trigger_time = 1
action.email.include.view_link = 0
action.email.inline = 1
#Modify below values depending on the requirement.
action.email.message.alert = WFM logs have stopped reporting in CUST splunk\ 
\
Description : $description$\

action.email.sendresults = 1
action.email.subject.alert =$name$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 1
alert.track = auto
counttype = number of events
disabled = 0
Description : $description$
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
action.email.to =  SREObservability@ukg.com
description = WFM logs have stopped reporting in CUST splunk.
dispatch.earliest_time = -10m@m
dispatch.latest_time = now
cron_schedule =  */10 * * * *
relation = greater than
quantity = 0
alert.suppress.fields = host
alert.suppress.period = 30m
search = | tstats count where index=*wfm-app by index | where count == 0| tstats count where index=*wfm-app by index | where count == 0
